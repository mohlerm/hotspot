<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='16988' time_ms='1430389104187'>
<vm_version>
<name>
OpenJDK 64-Bit Server VM
</name>
<release>
1.9.0-internal-debug-marcel_2015_04_17_10_57-b00
</release>
<info>
OpenJDK 64-Bit Server VM (1.9.0-internal-debug-marcel_2015_04_17_10_57-b00) for linux-amd64 JRE (1.9.0-internal-marcel_2015_04_17_10_57-b00), built on Apr 30 2015 08:29:24 by &quot;marcel&quot; with gcc 4.9.2 20150304 (prerelease)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintCompilation -XX:-UseOnStackReplacement -XX:+UnlockExperimentalVMOptions -XX:+CacheProfiles -XX:CacheProfilesFile=cached_profiles.log -XX:+TraceDeoptimization -Xbatch -XX:+CIPrintRequests 
</args>
<command>
TwoMethods
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=1.9.0-internal-debug-marcel_2015_04_17_10_57-b00
java.vm.name=OpenJDK 64-Bit Server VM
java.vm.info=mixed mode, sharing
sun.boot.library.path=/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/lib/amd64
java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
java.home=/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk
java.class.path=.
sun.boot.class.path=/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.rmi:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.security.auth:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.jcmd:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.attach:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.transaction:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.security.jgss:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.hprof.agent:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.zipfs:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.jvmstat:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.sql.rowset:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.security.jgss:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.hotspot.agent:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.datatransfer:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.scripting:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.logging:/hom
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.9
java.vm.vendor=Oracle Corporation
sun.java.command=TwoMethods
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='140263683643136'/>
request:  java.lang.StringBuilder::append comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
    509    1    b  3       java.lang.StringBuilder::append (8 bytes)
<writer thread='140263683643136'/>
request:  java.lang.String::getChars comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
    512    2    b  3       java.lang.String::getChars (62 bytes)
<writer thread='140263683643136'/>
request:  java.lang.String::charAt comment: tiered count: 17280 hot: yes
<writer thread='140263064692480'/>
    526    3    b  4       java.lang.String::charAt (29 bytes)
<writer thread='140263683643136'/>
request:  java.lang.Object::&lt;init&gt; comment: tiered count: 2304 hot: yes
<writer thread='140263062587136'/>
    535    4    b  3       java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='140263683643136'/>
request:  java.lang.System::getSecurityManager comment: tiered count: 384 hot: yes
<writer thread='140263062587136'/>
    539    5    b  3       java.lang.System::getSecurityManager (4 bytes)
<writer thread='140263683643136'/>
request:  java.lang.ref.Reference::get comment: tiered count: 896 hot: yes
<writer thread='140263062587136'/>
    542    6    b  1       java.lang.ref.Reference::get (5 bytes)
<writer thread='140263683643136'/>
    544    7     n 0       java.lang.System::arraycopy (native)   (static)
request:  java.util.Arrays::copyOf comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
    548    8    b  3       java.util.Arrays::copyOf (19 bytes)
<writer thread='140263683643136'/>
request:  java.util.Arrays::copyOfRange comment: tiered count: 640 hot: yes
<writer thread='140263062587136'/>
    557    9    b  3       java.util.Arrays::copyOfRange (63 bytes)
<writer thread='140263683643136'/>
request:  java.lang.Math::min comment: tiered count: 2048 hot: yes
<writer thread='140263062587136'/>
    576   10    b  3       java.lang.Math::min (11 bytes)
<writer thread='140263683643136'/>
request:  java.lang.AbstractStringBuilder::expandCapacity comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
    578   11    b  3       java.lang.AbstractStringBuilder::expandCapacity (50 bytes)
<writer thread='140263683643136'/>
request:  java.lang.String::&lt;init&gt; comment: tiered count: 640 hot: yes
<writer thread='140263062587136'/>
    587   12    b  3       java.lang.String::&lt;init&gt; (82 bytes)
<writer thread='140263683643136'/>
request:  java.lang.String::length comment: tiered count: 1280 hot: yes
<writer thread='140263062587136'/>
    617   13    b  3       java.lang.String::length (6 bytes)
<writer thread='140263683643136'/>
request:  java.lang.AbstractStringBuilder::ensureCapacityInternal comment: tiered count: 384 hot: yes
<writer thread='140263062587136'/>
    629   14    b  3       java.lang.AbstractStringBuilder::ensureCapacityInternal (16 bytes)
<writer thread='140263683643136'/>
request:  java.lang.String::hashCode comment: tiered count: 640 hot: yes
<writer thread='140263062587136'/>
    639   15    b  3       java.lang.String::hashCode (53 bytes)
<writer thread='140263683643136'/>
request:  java.lang.String::indexOf comment: tiered count: 384 hot: yes
<writer thread='140263062587136'/>
    645   16    b  3       java.lang.String::indexOf (70 bytes)
<writer thread='140263683643136'/>
request:  java.lang.String::indexOf comment: tiered count: 384 hot: yes
<writer thread='140263062587136'/>
    664   17    b  3       java.lang.String::indexOf (7 bytes)
<writer thread='140263683643136'/>
request:  java.lang.Object::&lt;init&gt; comment: tiered count: 2560 hot: yes
<writer thread='140263062587136'/>
    673   18    b  1       java.lang.Object::&lt;init&gt; (1 bytes)
    674    4       3       java.lang.Object::&lt;init&gt; (1 bytes)   made not entrant
<writer thread='140263683643136'/>
<blob name='MethodHandlesAdapterBlob' size='182000'>
<sect index='1' size='182000' free='177714'/>
</blob>
request:  sun.nio.cs.UTF_8$Encoder::encodeArrayLoop comment: replay count: 0
<writer thread='140263063639808'/>
    711   19    b  4       sun.nio.cs.UTF_8$Encoder::encodeArrayLoop (489 bytes)
<writer thread='140263683643136'/>
request:  TwoMethods::method1 comment: replay count: 0
<writer thread='140263064692480'/>
   1123   20    b  4       TwoMethods::method1 (157 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::trimLeadingZeros comment: replay count: 0
<writer thread='140263063639808'/>
   1185   21    b  4       sun.misc.FDBigInteger::trimLeadingZeros (57 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::&lt;init&gt; comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   1201   22    b  3       sun.misc.FDBigInteger::&lt;init&gt; (30 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::makeImmutable comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   1205   23    b  3       sun.misc.FDBigInteger::makeImmutable (6 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::mult comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   1207   24    b  3       sun.misc.FDBigInteger::mult (44 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::mult comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   1211   25    b  3       sun.misc.FDBigInteger::mult (64 bytes)
<writer thread='140263683643136'/>
request:  TwoMethods::method2 comment: replay count: 0
<writer thread='140263064692480'/>
   1411   26    b  4       TwoMethods::method2 (156 bytes)
<writer thread='140263683643136'/>
request:  java.lang.AbstractStringBuilder::append comment: tiered count: 383 hot: yes
<writer thread='140263062587136'/>
   1724   27    b  3       java.lang.AbstractStringBuilder::append (50 bytes)
<writer thread='140263683643136'/>
request:  java.nio.Buffer::position comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   1820   28    b  1       java.nio.Buffer::position (5 bytes)
<writer thread='140263683643136'/>
request:  java.nio.ByteBuffer::arrayOffset comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   1821   29    b  3       java.nio.ByteBuffer::arrayOffset (35 bytes)
<writer thread='140263683643136'/>
request:  java.nio.Buffer::position comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   1875   30    b  3       java.nio.Buffer::position (43 bytes)
<writer thread='140263683643136'/>
request:  java.nio.CharBuffer::arrayOffset comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   1891   31    b  3       java.nio.CharBuffer::arrayOffset (35 bytes)
<writer thread='140263683643136'/>
   1916   32     n 0       java.lang.Thread::currentThread (native)   (static)
request:  java.lang.ThreadLocal::getMap comment: tiered count: 512 hot: yes
<writer thread='140263062587136'/>
   1986   33    b  3       java.lang.ThreadLocal::getMap (5 bytes)
<writer thread='140263683643136'/>
request:  java.lang.ThreadLocal::access$400 comment: tiered count: 512 hot: yes
<writer thread='140263062587136'/>
   1998   34    b  1       java.lang.ThreadLocal::access$400 (5 bytes)
<writer thread='140263683643136'/>
request:  java.nio.Buffer::limit comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   1999   35    b  1       java.nio.Buffer::limit (5 bytes)
<writer thread='140263683643136'/>
request:  java.io.BufferedWriter::ensureOpen comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2001   36    b  3       java.io.BufferedWriter::ensureOpen (18 bytes)
<writer thread='140263683643136'/>
request:  java.nio.CharBuffer::position comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2006   37    b  3       java.nio.CharBuffer::position (6 bytes)
<writer thread='140263683643136'/>
request:  java.nio.charset.CoderResult::isUnderflow comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2010   38    b  3       java.nio.charset.CoderResult::isUnderflow (13 bytes)
<writer thread='140263683643136'/>
request:  sun.nio.cs.StreamEncoder::isOpen comment: tiered count: 128 hot: yes
<writer thread='140263062587136'/>
   2012   39    b  1       sun.nio.cs.StreamEncoder::isOpen (5 bytes)
<writer thread='140263683643136'/>
request:  java.nio.ByteBuffer::array comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2013   40    b  3       java.nio.ByteBuffer::array (35 bytes)
<writer thread='140263683643136'/>
request:  java.io.PrintStream::ensureOpen comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2017   41    b  3       java.io.PrintStream::ensureOpen (18 bytes)
<writer thread='140263683643136'/>
request:  java.io.FileDescriptor::access$100 comment: tiered count: 128 hot: yes
<writer thread='140263062587136'/>
   2021   42    b  1       java.io.FileDescriptor::access$100 (5 bytes)
<writer thread='140263683643136'/>
request:  sun.nio.cs.UTF_8::access$200 comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2038   43    b  3       sun.nio.cs.UTF_8::access$200 (8 bytes)
<writer thread='140263683643136'/>
request:  java.lang.ThreadLocal::get comment: tiered count: 512 hot: yes
<writer thread='140263062587136'/>
   2055   44    b  3       java.lang.ThreadLocal::get (38 bytes)
<writer thread='140263683643136'/>
request:  java.io.BufferedOutputStream::flush comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2151   45  s b  3       java.io.BufferedOutputStream::flush (12 bytes)
<writer thread='140263683643136'/>
request:  java.io.OutputStream::flush comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2162   46    b  3       java.io.OutputStream::flush (1 bytes)
<writer thread='140263683643136'/>
request:  java.lang.StringBuilder::toString comment: tiered count: 268 hot: yes
<writer thread='140263062587136'/>
   2334   47    b  3       java.lang.StringBuilder::toString (17 bytes)
<writer thread='140263683643136'/>
request:  java.nio.Buffer::&lt;init&gt; comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2353   48    b  3       java.nio.Buffer::&lt;init&gt; (121 bytes)
<writer thread='140263683643136'/>
request:  java.nio.Buffer::limit comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2437   49    b  3       java.nio.Buffer::limit (62 bytes)
<writer thread='140263683643136'/>
request:  java.nio.ByteBuffer::position comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2460   50    b  3       java.nio.ByteBuffer::position (8 bytes)
<writer thread='140263683643136'/>
request:  java.nio.ByteBuffer::position comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2496   51    b  3       java.nio.ByteBuffer::position (6 bytes)
<writer thread='140263683643136'/>
request:  java.io.Writer::write comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2499   52    b  3       java.io.Writer::write (11 bytes)
<writer thread='140263683643136'/>
request:  java.io.BufferedWriter::write comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2505   53   !b  3       java.io.BufferedWriter::write (117 bytes)
<writer thread='140263683643136'/>
request:  java.io.OutputStreamWriter::write comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2526   54    b  3       java.io.OutputStreamWriter::write (11 bytes)
<writer thread='140263683643136'/>
request:  sun.nio.cs.StreamEncoder::ensureOpen comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2529   55    b  3       sun.nio.cs.StreamEncoder::ensureOpen (18 bytes)
<writer thread='140263683643136'/>
request:  sun.nio.cs.StreamEncoder::implWrite comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2532   56    b  3       sun.nio.cs.StreamEncoder::implWrite (156 bytes)
<writer thread='140263683643136'/>
request:  java.nio.CharBuffer::limit comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2574   57    b  3       java.nio.CharBuffer::limit (6 bytes)
<writer thread='140263683643136'/>
request:  sun.nio.cs.UTF_8$Encoder::encodeLoop comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2578   58    b  3       sun.nio.cs.UTF_8$Encoder::encodeLoop (28 bytes)
<writer thread='140263683643136'/>
request:  java.nio.CharBuffer::array comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2588   59    b  3       java.nio.CharBuffer::array (35 bytes)
<writer thread='140263683643136'/>
request:  java.io.OutputStreamWriter::flushBuffer comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2592   60    b  3       java.io.OutputStreamWriter::flushBuffer (8 bytes)
<writer thread='140263683643136'/>
request:  sun.nio.cs.StreamEncoder::implFlushBuffer comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2595   61    b  3       sun.nio.cs.StreamEncoder::implFlushBuffer (15 bytes)
<writer thread='140263683643136'/>
request:  java.nio.ByteBuffer::flip comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2598   62    b  3       java.nio.ByteBuffer::flip (7 bytes)
<writer thread='140263683643136'/>
request:  java.io.PrintStream::write comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2600   63   !b  3       java.io.PrintStream::write (69 bytes)
<writer thread='140263683643136'/>
request:  java.io.BufferedOutputStream::write comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2612   64  s b  3       java.io.BufferedOutputStream::write (67 bytes)
<writer thread='140263683643136'/>
request:  java.io.FileOutputStream::write comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2625   65    b  3       java.io.FileOutputStream::write (20 bytes)
<writer thread='140263683643136'/>
   2630   66     n 0       java.io.FileOutputStream::writeBytes (native)   
request:  java.nio.ByteBuffer::clear comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2630   67    b  3       java.nio.ByteBuffer::clear (7 bytes)
<writer thread='140263683643136'/>
request:  java.lang.Math::max comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   2757   68    b  3       java.lang.Math::max (11 bytes)
<writer thread='140263683643136'/>
   2909   69     n 0       java.lang.Double::doubleToRawLongBits (native)   (static)
request:  sun.misc.FDBigInteger::multAndCarryBy10 comment: replay count: 0
<writer thread='140263063639808'/>
   2969   70    b  4       sun.misc.FDBigInteger::multAndCarryBy10 (50 bytes)
<writer thread='140263683643136'/>
request:  java.io.BufferedWriter::flushBuffer comment: tiered count: 383 hot: yes
<writer thread='140263062587136'/>
   3014   71   !b  3       java.io.BufferedWriter::flushBuffer (53 bytes)
<writer thread='140263683643136'/>
request:  sun.nio.cs.StreamEncoder::write comment: tiered count: 383 hot: yes
<writer thread='140263062587136'/>
   3024   72   !b  3       sun.nio.cs.StreamEncoder::write (78 bytes)
<writer thread='140263683643136'/>
request:  java.nio.charset.CharsetEncoder::encode comment: tiered count: 383 hot: yes
<writer thread='140263062587136'/>
   3038   73   !b  3       java.nio.charset.CharsetEncoder::encode (285 bytes)
<writer thread='140263683643136'/>
request:  java.nio.charset.CoderResult::isOverflow comment: tiered count: 383 hot: yes
<writer thread='140263062587136'/>
   3115   74    b  3       java.nio.charset.CoderResult::isOverflow (14 bytes)
<writer thread='140263683643136'/>
request:  sun.nio.cs.StreamEncoder::flushBuffer comment: tiered count: 383 hot: yes
<writer thread='140263062587136'/>
   3117   75   !b  3       sun.nio.cs.StreamEncoder::flushBuffer (42 bytes)
<writer thread='140263683643136'/>
request:  sun.nio.cs.StreamEncoder::writeBytes comment: tiered count: 383 hot: yes
<writer thread='140263062587136'/>
   3126   76    b  3       sun.nio.cs.StreamEncoder::writeBytes (132 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::size comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3179   77    b  3       sun.misc.FDBigInteger::size (10 bytes)
<writer thread='140263683643136'/>
request:  java.lang.ThreadLocal$ThreadLocalMap::getEntry comment: tiered count: 638 hot: yes
<writer thread='140263062587136'/>
   3182   78    b  3       java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::cmp comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3242   79    b  3       sun.misc.FDBigInteger::cmp (147 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::quoRemIteration comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3271   80    b  3       sun.misc.FDBigInteger::quoRemIteration (337 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::addAndCmp comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3300   81    b  3       sun.misc.FDBigInteger::addAndCmp (292 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::size comment: tiered count: 1280 hot: yes
<writer thread='140263062587136'/>
   3332   82    b  1       sun.misc.FDBigInteger::size (10 bytes)
   3333   77       3       sun.misc.FDBigInteger::size (10 bytes)   made not entrant
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::multBy10 comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3350   83    b  3       sun.misc.FDBigInteger::multBy10 (178 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::multDiffMe comment: tiered count: 383 hot: yes
<writer thread='140263062587136'/>
   3403   84    b  3       sun.misc.FDBigInteger::multDiffMe (297 bytes)
<writer thread='140263683643136'/>
request:  java.io.PrintStream::println comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3642   85   !b  3       java.io.PrintStream::println (24 bytes)
<writer thread='140263683643136'/>
request:  java.io.BufferedWriter::newLine comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3651   86    b  3       java.io.BufferedWriter::newLine (8 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FloatingDecimal::toJavaFormatString comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3666   87    b  3       sun.misc.FloatingDecimal::toJavaFormatString (10 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FloatingDecimal$BinaryToASCIIBuffer::toJavaFormatString comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3671   88    b  3       sun.misc.FloatingDecimal$BinaryToASCIIBuffer::toJavaFormatString (23 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FloatingDecimal::getBinaryToASCIIBuffer comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3695   89    b  3       sun.misc.FloatingDecimal::getBinaryToASCIIBuffer (10 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FloatingDecimal$BinaryToASCIIBuffer::access$000 comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3698   90    b  3       sun.misc.FloatingDecimal$BinaryToASCIIBuffer::access$000 (6 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FloatingDecimal$BinaryToASCIIBuffer::access$100 comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3700   91    b  3       sun.misc.FloatingDecimal$BinaryToASCIIBuffer::access$100 (11 bytes)
<writer thread='140263683643136'/>
request:  java.lang.Long::numberOfTrailingZeros comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3704   92    b  3       java.lang.Long::numberOfTrailingZeros (116 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::valueOfPow52 comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3780   93    b  3       sun.misc.FDBigInteger::valueOfPow52 (101 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::leftShift comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   3944   94    b  3       sun.misc.FDBigInteger::leftShift (50 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::leftShift comment: tiered count: 331 hot: yes
<writer thread='140263062587136'/>
   4067   95    b  3       sun.misc.FDBigInteger::leftShift (395 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FDBigInteger::big5pow comment: tiered count: 298 hot: yes
<writer thread='140263062587136'/>
   4210   96    b  3       sun.misc.FDBigInteger::big5pow (37 bytes)
<writer thread='140263683643136'/>
   4289   97     n 0       java.lang.Double::longBitsToDouble (native)   (static)
request:  sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   4299   98    b  3       sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp (182 bytes)
<writer thread='140263683643136'/>
request:  java.io.PrintStream::write comment: tiered count: 383 hot: yes
<writer thread='140263062587136'/>
   4459   99   !b  3       java.io.PrintStream::write (83 bytes)
<writer thread='140263683643136'/>
request:  java.io.PrintStream::newLine comment: tiered count: 383 hot: yes
<writer thread='140263062587136'/>
   4485  100   !b  3       java.io.PrintStream::newLine (73 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FloatingDecimal::getBinaryToASCIIConverter comment: tiered count: 383 hot: yes
<writer thread='140263062587136'/>
   4513  101    b  3       sun.misc.FloatingDecimal::getBinaryToASCIIConverter (183 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FloatingDecimal$BinaryToASCIIBuffer::getChars comment: tiered count: 383 hot: yes
<writer thread='140263062587136'/>
   4535  102    b  3       sun.misc.FloatingDecimal$BinaryToASCIIBuffer::getChars (502 bytes)
<writer thread='140263683643136'/>
request:  sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa comment: tiered count: 383 hot: yes
<writer thread='140263062587136'/>
   4638  103    b  3       sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa (1509 bytes)
<writer thread='140263683643136'/>
request:  java.util.ArrayList::add comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   5210  104    b  3       java.util.ArrayList::add (29 bytes)
<writer thread='140263683643136'/>
request:  java.util.concurrent.ConcurrentHashMap::tabAt comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   5231  105    b  3       java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
<writer thread='140263683643136'/>
   5235  106     n 0       sun.misc.Unsafe::getObjectVolatile (native)   
request:  java.util.ArrayList::access$100 comment: tiered count: 128 hot: yes
<writer thread='140263062587136'/>
   5236  107    b  1       java.util.ArrayList::access$100 (5 bytes)
<writer thread='140263683643136'/>
request:  java.lang.Number::&lt;init&gt; comment: tiered count: 384 hot: yes
<writer thread='140263062587136'/>
   5238  108    b  3       java.lang.Number::&lt;init&gt; (5 bytes)
<writer thread='140263683643136'/>
request:  java.lang.Long::longValue comment: tiered count: 256 hot: yes
<writer thread='140263062587136'/>
   5241  109    b  3       java.lang.Long::longValue (5 bytes)
<writer thread='140263683643136'/>
C1 Runtime statistics:
 _resolve_invoke_virtual_cnt:     19
 _resolve_invoke_opt_virtual_cnt: 90
 _resolve_invoke_static_cnt:      22
 _handle_wrong_method_cnt:        0
 _ic_miss_cnt:                    3
 _generic_arraycopy_cnt:          0
 _generic_arraycopystub_cnt:      0
 _byte_arraycopy_cnt:             0
 _short_arraycopy_cnt:            0
 _int_arraycopy_cnt:              0
 _long_arraycopy_cnt:             0
 _primitive_arraycopy_cnt:        0
 _oop_arraycopy_cnt (C):          0
 _oop_arraycopy_cnt (stub):       0
 _arraycopy_slowcase_cnt:         0
 _arraycopy_checkcast_cnt:        0
 _arraycopy_checkcast_attempt_cnt:0
 _new_type_array_slowcase_cnt:    0
 _new_object_array_slowcase_cnt:  0
 _new_instance_slowcase_cnt:      70
 _new_multi_array_slowcase_cnt:   0
 _monitorenter_slowcase_cnt:      0
 _monitorexit_slowcase_cnt:       0
 _patch_code_slowcase_cnt:        0
 _throw_range_check_exception_count:            0:
 _throw_index_exception_count:                  0:
 _throw_div0_exception_count:                   0:
 _throw_null_pointer_exception_count:           0:
 _throw_class_cast_exception_count:             0:
 _throw_incompatible_class_change_error_count:  0:
 _throw_array_store_exception_count:            0:
 _throw_count:                                  0:

<statistics type='SharedRuntime'>
    3 inline cache miss in compiled
    0 wrong method
   22 unresolved static call site
   19 unresolved virtual call site
   90 unresolved opt virtual call site
    6 slow partial subtype
  560 byte array copies
 4072 short array copies
   44 int array copies
   12 long array copies
AdapterHandlerTable: empty 183 longest 3 total 140 average 1.272727
AdapterHandlerTable: lookups 5576 buckets 5419 equals 5142 hits 5142 compact 5142
</statistics>
<statistics type='nmethod'>
Statistics for 6 native nmethods:
 N. total size  = 6200
 N. relocation  = 528
 N. main code   = 3800
Statistics for 103 bytecoded nmethods:
 total in heap  = 324288
 relocation     = 21024
 constants      = 96
 main code      = 164064
 stub code      = 22224
 oops           = 56
 scopes data    = 27872
 scopes pcs     = 47696
 dependencies   = 856
 handler table  = 3088
 nul chk table  = 2280
Debug Data Chunks: 5428, shared 674+1179, non-SP&apos;s elided 53
PcDesc Statistics:  305 queries, 9.21 comparisons per query
  caches=103 queries=305/0, hits=0+27, tests=1091+1718, adds=278
</statistics>
<statistics type='opto'>
--- Compiler Statistics ---
Methods seen: 60  Methods parsed: 60  Nodes created: 11177
Blocks parsed: 105  Blocks seen: 126
131 original NULL checks - 101 elided (77%); optimizer leaves 30,
8 made implicit (26%)
CCP: 6  constants found: 0
Total frameslots = 132, Max frameslots = 32
Inserted 0 spill loads, 0 spill stores, 0 mem-mem moves and 0 copies.
Total load cost=      0, store cost =      0, mem-mem cost =  0.00, copy cost =     0.
Adjusted spill cost =       0.
Conservatively coalesced 217 copies, 0 pairs, 78 post alloc.
Used cisc instruction  5,  remained in register 54
Average allocation trips 1.136364
High Pressure Blocks = 0, Low Pressure Blocks = 0
Nops added 0 bytes to total of 8077 bytes, for 0.00%
Peephole: peephole rules applied: 0
PhaseIdealLoop=36, sum _unique=32065
</statistics>
<statistics type='intrinsic'>
Compiler intrinsic usage:
     1 (20.0%) _min (worked)
     4 (80.0%) _nanoTime (worked)
     5 (100.0%) total (worked)
</statistics>
<writer thread='140263070775040'/>
<destroy_vm stamp='5.250'/>
<tty_done stamp='5.277'/>
</tty>
<hotspot_log_done stamp='5.277'/>
</hotspot_log>
