<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='28434' time_ms='1430294376275'>
<vm_version>
<name>
OpenJDK 64-Bit Server VM
</name>
<release>
1.9.0-internal-debug-marcel_2015_04_17_10_57-b00
</release>
<info>
OpenJDK 64-Bit Server VM (1.9.0-internal-debug-marcel_2015_04_17_10_57-b00) for linux-amd64 JRE (1.9.0-internal-marcel_2015_04_17_10_57-b00), built on Apr 29 2015 09:53:17 by &quot;marcel&quot; with gcc 4.9.2 20150304 (prerelease)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintCompilation -XX:-UseOnStackReplacement -XX:+UnlockExperimentalVMOptions -XX:+CacheProfiles -XX:CacheProfilesFile=cached_profiles.log -XX:+TraceDeoptimization -Xbatch -XX:+CIPrintRequests 
</args>
<command>
TwoMethods
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=1.9.0-internal-debug-marcel_2015_04_17_10_57-b00
java.vm.name=OpenJDK 64-Bit Server VM
java.vm.info=mixed mode, sharing
sun.boot.library.path=/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/lib/amd64
java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
java.home=/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk
java.class.path=.
sun.boot.class.path=/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.rmi:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.security.auth:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.jcmd:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.attach:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.transaction:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.security.jgss:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.hprof.agent:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.zipfs:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.jvmstat:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.sql.rowset:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.security.jgss:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.hotspot.agent:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.datatransfer:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.scripting:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.logging:/hom
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.9
java.vm.vendor=Oracle Corporation
sun.java.command=TwoMethods
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='140364887230208'/>
request:  java.lang.StringBuilder::append comment: tiered count: 256 hot: yes
<writer thread='140364265699072'/>
    535    1    b  3       java.lang.StringBuilder::append (8 bytes)
<writer thread='140364887230208'/>
request:  java.lang.String::getChars comment: tiered count: 256 hot: yes
<writer thread='140364265699072'/>
    538    2    b  3       java.lang.String::getChars (62 bytes)
<writer thread='140364887230208'/>
request:  java.lang.String::charAt comment: tiered count: 17280 hot: yes
<writer thread='140364267804416'/>
    551    3    b  4       java.lang.String::charAt (29 bytes)
<writer thread='140364887230208'/>
request:  java.lang.Object::&lt;init&gt; comment: tiered count: 2304 hot: yes
<writer thread='140364265699072'/>
    560    4    b  3       java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='140364887230208'/>
request:  java.lang.System::getSecurityManager comment: tiered count: 384 hot: yes
<writer thread='140364265699072'/>
    563    5    b  3       java.lang.System::getSecurityManager (4 bytes)
<writer thread='140364887230208'/>
request:  java.lang.ref.Reference::get comment: tiered count: 896 hot: yes
<writer thread='140364265699072'/>
    567    6    b  1       java.lang.ref.Reference::get (5 bytes)
<writer thread='140364887230208'/>
    569    7     n 0       java.lang.System::arraycopy (native)   (static)
request:  java.util.Arrays::copyOf comment: tiered count: 256 hot: yes
<writer thread='140364265699072'/>
    573    8    b  3       java.util.Arrays::copyOf (19 bytes)
<writer thread='140364887230208'/>
request:  java.lang.Math::min comment: tiered count: 2048 hot: yes
<writer thread='140364265699072'/>
    582    9    b  3       java.lang.Math::min (11 bytes)
<writer thread='140364887230208'/>
request:  java.util.Arrays::copyOfRange comment: tiered count: 640 hot: yes
<writer thread='140364265699072'/>
    584   10    b  3       java.util.Arrays::copyOfRange (63 bytes)
<writer thread='140364887230208'/>
request:  java.lang.AbstractStringBuilder::expandCapacity comment: tiered count: 256 hot: yes
<writer thread='140364265699072'/>
    603   11    b  3       java.lang.AbstractStringBuilder::expandCapacity (50 bytes)
<writer thread='140364887230208'/>
request:  java.lang.String::&lt;init&gt; comment: tiered count: 640 hot: yes
<writer thread='140364265699072'/>
    612   12    b  3       java.lang.String::&lt;init&gt; (82 bytes)
<writer thread='140364887230208'/>
request:  java.lang.String::length comment: tiered count: 1280 hot: yes
<writer thread='140364265699072'/>
    639   13    b  3       java.lang.String::length (6 bytes)
<writer thread='140364887230208'/>
request:  java.lang.AbstractStringBuilder::ensureCapacityInternal comment: tiered count: 384 hot: yes
<writer thread='140364265699072'/>
    652   14    b  3       java.lang.AbstractStringBuilder::ensureCapacityInternal (16 bytes)
<writer thread='140364887230208'/>
request:  java.lang.String::hashCode comment: tiered count: 640 hot: yes
<writer thread='140364265699072'/>
    661   15    b  3       java.lang.String::hashCode (53 bytes)
<writer thread='140364887230208'/>
request:  java.lang.String::indexOf comment: tiered count: 384 hot: yes
<writer thread='140364265699072'/>
    669   16    b  3       java.lang.String::indexOf (70 bytes)
<writer thread='140364887230208'/>
request:  java.lang.String::indexOf comment: tiered count: 384 hot: yes
<writer thread='140364265699072'/>
    685   17    b  3       java.lang.String::indexOf (7 bytes)
<writer thread='140364887230208'/>
request:  java.lang.Object::&lt;init&gt; comment: tiered count: 2560 hot: yes
<writer thread='140364265699072'/>
    697   18    b  1       java.lang.Object::&lt;init&gt; (1 bytes)
    699    4       3       java.lang.Object::&lt;init&gt; (1 bytes)   made not entrant
<writer thread='140364887230208'/>
<blob name='MethodHandlesAdapterBlob' size='182000'>
<sect index='1' size='182000' free='177714'/>
</blob>
&gt;&gt;&gt;&gt;&gt;&gt; USE PROFILE Complevel: 4, Hotcount: 2 virtual jobject sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(jobject, jobject) sun.nio.cs.UTF_8$Encoder::encodeArrayLoop&lt;&lt;&lt;&lt;&lt;&lt;&lt;
request:  sun.nio.cs.UTF_8$Encoder::encodeArrayLoop comment: replay count: 0
<writer thread='140364266751744'/>
    720   19    b  4       sun.nio.cs.UTF_8$Encoder::encodeArrayLoop (489 bytes)
<tty_done stamp='0.753'/>
</tty>
<hotspot_log_done stamp='0.753'/>
</hotspot_log>
