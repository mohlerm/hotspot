<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='5981' time_ms='1430289920916'>
<vm_version>
<name>
OpenJDK 64-Bit Server VM
</name>
<release>
1.9.0-internal-debug-marcel_2015_04_17_10_57-b00
</release>
<info>
OpenJDK 64-Bit Server VM (1.9.0-internal-debug-marcel_2015_04_17_10_57-b00) for linux-amd64 JRE (1.9.0-internal-marcel_2015_04_17_10_57-b00), built on Apr 28 2015 18:37:15 by &quot;marcel&quot; with gcc 4.9.2 20150304 (prerelease)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintCompilation -XX:+UseOnStackReplacement -XX:+UnlockExperimentalVMOptions -XX:CompileCommandFile=createReplayCommands.txt -XX:+DumpProfiles -Xbatch -XX:+CIPrintRequests 
</args>
<command>
TwoMethods
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=1.9.0-internal-debug-marcel_2015_04_17_10_57-b00
java.vm.name=OpenJDK 64-Bit Server VM
java.vm.info=mixed mode, sharing
sun.boot.library.path=/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/lib/amd64
java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
java.home=/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk
java.class.path=.
sun.boot.class.path=/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.rmi:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.security.auth:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.jcmd:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.attach:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.transaction:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.security.jgss:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.hprof.agent:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.zipfs:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.jvmstat:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.sql.rowset:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.security.jgss:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.hotspot.agent:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.datatransfer:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.scripting:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.logging:/hom
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.9
java.vm.vendor=Oracle Corporation
sun.java.command=TwoMethods
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='140282616018688'/>
CompileCommand: option TwoMethods.method1 double CompileThresholdScaling = 0.010000
CompileCommand: option TwoMethods.method2 double CompileThresholdScaling = 0.010000
CompileCommand: option java.lang bool String = true
CompileCommand: option java.lang bool indexOf = true
CompileCommand: option java.lang bool DumpReplay = true
request:  java.lang.String::hashCode comment: tiered count: 600 hot: yes
<writer thread='140281860224768'/>
    479    1    b  3       java.lang.String::hashCode (53 bytes)
<writer thread='140282616018688'/>
request:  java.lang.String::equals comment: tiered count: 806 hot: yes
<writer thread='140281860224768'/>
    494    2    b  3       java.lang.String::equals (81 bytes)
<writer thread='140282616018688'/>
request:  java.lang.System::getSecurityManager comment: tiered count: 384 hot: yes
<writer thread='140281860224768'/>
    501    3    b  3       java.lang.System::getSecurityManager (4 bytes)
<writer thread='140282616018688'/>
<blob name='MethodHandlesAdapterBlob' size='182000'>
<sect index='1' size='182000' free='177714'/>
</blob>
request:  java.lang.String::indexOf comment: tiered count: 337 hot: yes
<writer thread='140281860224768'/>
    510    4    b  3       java.lang.String::indexOf (70 bytes)
<writer thread='140282616018688'/>
request:  java.lang.StringBuilder::append comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
    518    5    b  3       java.lang.StringBuilder::append (8 bytes)
<writer thread='140282616018688'/>
request:  java.lang.String::getChars comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
    521    6    b  3       java.lang.String::getChars (62 bytes)
<writer thread='140282616018688'/>
request:  java.lang.String::charAt comment: tiered count: 17280 hot: yes
<writer thread='140281862330112'/>
    530    7    b  4       java.lang.String::charAt (29 bytes)
# Compiler cached profile is saved as: cached_profiles.log
<writer thread='140282616018688'/>
request:  java.lang.Object::&lt;init&gt; comment: tiered count: 2304 hot: yes
<writer thread='140281860224768'/>
    534    8    b  3       java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='140282616018688'/>
request:  java.lang.ref.Reference::get comment: tiered count: 896 hot: yes
<writer thread='140281860224768'/>
    543    9    b  1       java.lang.ref.Reference::get (5 bytes)
<writer thread='140282616018688'/>
    544   10     n 0       java.lang.System::arraycopy (native)   (static)
request:  sun.nio.cs.UTF_8$Encoder::encode comment: tiered count: 330 hot: yes
<writer thread='140281860224768'/>
    545   11    b  3       sun.nio.cs.UTF_8$Encoder::encode (359 bytes)
<writer thread='140282616018688'/>
request:  java.io.UnixFileSystem::normalize comment: tiered count: 177 hot: yes
<writer thread='140281860224768'/>
    589   12    b  3       java.io.UnixFileSystem::normalize (75 bytes)
<writer thread='140282616018688'/>
request:  java.lang.String::lastIndexOf comment: tiered count: 328 hot: yes
<writer thread='140281860224768'/>
    602   13    b  3       java.lang.String::lastIndexOf (52 bytes)
<writer thread='140282616018688'/>
request:  java.util.Arrays::copyOf comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
    610   14    b  3       java.util.Arrays::copyOf (19 bytes)
<writer thread='140282616018688'/>
request:  java.lang.AbstractStringBuilder::expandCapacity comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
    629   15    b  3       java.lang.AbstractStringBuilder::expandCapacity (50 bytes)
<writer thread='140282616018688'/>
request:  java.util.Arrays::copyOfRange comment: tiered count: 640 hot: yes
<writer thread='140281860224768'/>
    641   16    b  3       java.util.Arrays::copyOfRange (63 bytes)
<writer thread='140282616018688'/>
request:  java.lang.Math::min comment: tiered count: 2048 hot: yes
<writer thread='140281860224768'/>
    659   17    b  3       java.lang.Math::min (11 bytes)
<writer thread='140282616018688'/>
request:  java.lang.String::&lt;init&gt; comment: tiered count: 640 hot: yes
<writer thread='140281860224768'/>
    661   18    b  3       java.lang.String::&lt;init&gt; (82 bytes)
<writer thread='140282616018688'/>
request:  java.lang.String::length comment: tiered count: 1280 hot: yes
<writer thread='140281860224768'/>
    722   19    b  3       java.lang.String::length (6 bytes)
<writer thread='140282616018688'/>
request:  java.lang.AbstractStringBuilder::ensureCapacityInternal comment: tiered count: 384 hot: yes
<writer thread='140281860224768'/>
    726   20    b  3       java.lang.AbstractStringBuilder::ensureCapacityInternal (16 bytes)
<writer thread='140282616018688'/>
request:  sun.nio.cs.UTF_8$Decoder::decode comment: tiered count: 118 hot: yes
<writer thread='140281860224768'/>
    732   21    b  3       sun.nio.cs.UTF_8$Decoder::decode (779 bytes)
<writer thread='140282616018688'/>
request:  TwoMethods::method1 comment: tiered count: 1 hot: yes
<writer thread='140281860224768'/>
   1352   22    b  3       TwoMethods::method1 (145 bytes)
<writer thread='140282616018688'/>
request:  TwoMethods::method1 osr_bci: 43 comment: tiered count: 424 hot: yes
<writer thread='140281861277440'/>
   1471   23 %  b  4       TwoMethods::method1 @ 43 (145 bytes)
# Compiler cached profile is saved as: cached_profiles.log
<writer thread='140282616018688'/>
   1534   23 %     4       TwoMethods::method1 @ 43 (145 bytes)   made not entrant
request:  TwoMethods::method2 comment: tiered count: 1 hot: yes
<writer thread='140281860224768'/>
   1536   24    b  3       TwoMethods::method2 (144 bytes)
<writer thread='140282616018688'/>
request:  TwoMethods::method2 osr_bci: 44 comment: tiered count: 424 hot: yes
<writer thread='140281862330112'/>
   1650   25 %  b  4       TwoMethods::method2 @ 44 (144 bytes)
# Compiler cached profile is saved as: cached_profiles.log
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::mult comment: tiered count: 219 hot: yes
<writer thread='140281860224768'/>
   1746   26    b  3       sun.misc.FDBigInteger::mult (64 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::&lt;init&gt; comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   1763   27    b  3       sun.misc.FDBigInteger::&lt;init&gt; (30 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::trimLeadingZeros comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   1771   28    b  3       sun.misc.FDBigInteger::trimLeadingZeros (57 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::makeImmutable comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   1783   29    b  3       sun.misc.FDBigInteger::makeImmutable (6 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::mult comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   1785   30    b  3       sun.misc.FDBigInteger::mult (44 bytes)
<writer thread='140282616018688'/>
request:  TwoMethods::method1 osr_bci: 43 comment: tiered count: 856 hot: yes
<writer thread='140281861277440'/>
   1796   31 %  b  4       TwoMethods::method1 @ 43 (145 bytes)
# Compiler cached profile is saved as: cached_profiles.log
<writer thread='140282616018688'/>
request:  TwoMethods::method1 comment: tiered count: 2 hot: yes
<writer thread='140281862330112'/>
   1814   32    b  4       TwoMethods::method1 (145 bytes)
# Compiler cached profile is saved as: cached_profiles.log
   1883   22       3       TwoMethods::method1 (145 bytes)   made not entrant
<writer thread='140282616018688'/>
   1893   31 %     4       TwoMethods::method1 @ 43 (145 bytes)   made not entrant
request:  TwoMethods::method2 comment: tiered count: 2 hot: yes
<writer thread='140281861277440'/>
   1895   33    b  4       TwoMethods::method2 (144 bytes)
# Compiler cached profile is saved as: cached_profiles.log
   1937   24       3       TwoMethods::method2 (144 bytes)   made not entrant
<writer thread='140282616018688'/>
request:  java.lang.String::indexOf comment: tiered count: 384 hot: yes
<writer thread='140281860224768'/>
   1947   34    b  3       java.lang.String::indexOf (7 bytes)
<writer thread='140282616018688'/>
   1963   32       4       TwoMethods::method1 (145 bytes)   made not entrant
   1973   33       4       TwoMethods::method2 (144 bytes)   made not entrant
request:  TwoMethods::method1 comment: tiered count: 3 hot: yes
<writer thread='140281860224768'/>
   1974   35    b  3       TwoMethods::method1 (145 bytes)
<writer thread='140282616018688'/>
request:  TwoMethods::method1 osr_bci: 43 comment: tiered count: 872 hot: yes
<writer thread='140281860224768'/>
   2076   36 %  b  3       TwoMethods::method1 @ 43 (145 bytes)
<writer thread='140282616018688'/>
request:  TwoMethods::method1 osr_bci: 43 comment: tiered count: 1304 hot: yes
<writer thread='140281862330112'/>
   2175   37 %  b  4       TwoMethods::method1 @ 43 (145 bytes)
# Compiler cached profile is saved as: cached_profiles.log
   2216   36 %     3       TwoMethods::method1 @ 43 (145 bytes)   made not entrant
<writer thread='140282616018688'/>
request:  TwoMethods::method1 comment: tiered count: 3 hot: yes
<writer thread='140281861277440'/>
   2217   38    b  4       TwoMethods::method1 (145 bytes)
# Compiler cached profile is saved as: cached_profiles.log
   2270   35       3       TwoMethods::method1 (145 bytes)   made not entrant
<writer thread='140282616018688'/>
request:  TwoMethods::method2 comment: tiered count: 3 hot: yes
<writer thread='140281860224768'/>
   2290   39    b  3       TwoMethods::method2 (144 bytes)
<writer thread='140282616018688'/>
request:  java.nio.Buffer::position comment: tiered count: 128 hot: yes
<writer thread='140281860224768'/>
   2389   40    b  1       java.nio.Buffer::position (5 bytes)
<writer thread='140282616018688'/>
request:  java.lang.AbstractStringBuilder::append comment: tiered count: 383 hot: yes
<writer thread='140281860224768'/>
   2421   41    b  3       java.lang.AbstractStringBuilder::append (50 bytes)
<writer thread='140282616018688'/>
request:  java.nio.Buffer::limit comment: tiered count: 128 hot: yes
<writer thread='140281860224768'/>
   2431   42    b  1       java.nio.Buffer::limit (5 bytes)
<writer thread='140282616018688'/>
request:  java.nio.ByteBuffer::arrayOffset comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   2483   43    b  3       java.nio.ByteBuffer::arrayOffset (35 bytes)
<writer thread='140282616018688'/>
request:  TwoMethods::method2 comment: tiered count: 8 hot: yes
<writer thread='140281862330112'/>
   2512   44    b  4       TwoMethods::method2 (144 bytes)
# Compiler cached profile is saved as: cached_profiles.log
   2565   39       3       TwoMethods::method2 (144 bytes)   made not entrant
<writer thread='140282616018688'/>
request:  java.nio.Buffer::position comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   2598   45    b  3       java.nio.Buffer::position (43 bytes)
<writer thread='140282616018688'/>
request:  java.nio.CharBuffer::arrayOffset comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   2613   46    b  3       java.nio.CharBuffer::arrayOffset (35 bytes)
<writer thread='140282616018688'/>
   2636   47     n 0       java.lang.Thread::currentThread (native)   (static)
request:  sun.nio.cs.UTF_8$Encoder::encodeArrayLoop comment: tiered count: 105 hot: yes
<writer thread='140281860224768'/>
   2666   48    b  3       sun.nio.cs.UTF_8$Encoder::encodeArrayLoop (489 bytes)
<writer thread='140282616018688'/>
request:  java.lang.ThreadLocal::getMap comment: tiered count: 512 hot: yes
<writer thread='140281860224768'/>
   3057   49    b  3       java.lang.ThreadLocal::getMap (5 bytes)
<writer thread='140282616018688'/>
request:  java.lang.ThreadLocal::access$400 comment: tiered count: 512 hot: yes
<writer thread='140281860224768'/>
   3075   50    b  1       java.lang.ThreadLocal::access$400 (5 bytes)
<writer thread='140282616018688'/>
request:  java.io.BufferedWriter::ensureOpen comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3077   51    b  3       java.io.BufferedWriter::ensureOpen (18 bytes)
<writer thread='140282616018688'/>
request:  java.nio.charset.CoderResult::isUnderflow comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3084   52    b  3       java.nio.charset.CoderResult::isUnderflow (13 bytes)
<writer thread='140282616018688'/>
request:  sun.nio.cs.StreamEncoder::isOpen comment: tiered count: 128 hot: yes
<writer thread='140281860224768'/>
   3087   53    b  1       sun.nio.cs.StreamEncoder::isOpen (5 bytes)
<writer thread='140282616018688'/>
request:  java.io.PrintStream::ensureOpen comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3089   54    b  3       java.io.PrintStream::ensureOpen (18 bytes)
<writer thread='140282616018688'/>
request:  java.io.FileDescriptor::access$100 comment: tiered count: 128 hot: yes
<writer thread='140281860224768'/>
   3095   55    b  1       java.io.FileDescriptor::access$100 (5 bytes)
<writer thread='140282616018688'/>
request:  java.lang.ThreadLocal::get comment: tiered count: 512 hot: yes
<writer thread='140281860224768'/>
   3116   56    b  3       java.lang.ThreadLocal::get (38 bytes)
<writer thread='140282616018688'/>
request:  java.nio.CharBuffer::position comment: tiered count: 337 hot: yes
<writer thread='140281860224768'/>
   3218   57    b  3       java.nio.CharBuffer::position (6 bytes)
<writer thread='140282616018688'/>
request:  java.nio.CharBuffer::position comment: tiered count: 337 hot: yes
<writer thread='140281860224768'/>
   3223   58    b  3       java.nio.CharBuffer::position (8 bytes)
<writer thread='140282616018688'/>
request:  java.io.BufferedOutputStream::flush comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3227   59  s b  3       java.io.BufferedOutputStream::flush (12 bytes)
<writer thread='140282616018688'/>
request:  java.io.OutputStream::flush comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3234   60    b  3       java.io.OutputStream::flush (1 bytes)
<writer thread='140282616018688'/>
request:  java.lang.StringBuilder::toString comment: tiered count: 268 hot: yes
<writer thread='140281860224768'/>
   3399   61    b  3       java.lang.StringBuilder::toString (17 bytes)
<writer thread='140282616018688'/>
request:  java.nio.Buffer::&lt;init&gt; comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3419   62    b  3       java.nio.Buffer::&lt;init&gt; (121 bytes)
<writer thread='140282616018688'/>
request:  java.nio.Buffer::limit comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3503   63    b  3       java.nio.Buffer::limit (62 bytes)
<writer thread='140282616018688'/>
request:  java.nio.ByteBuffer::position comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3527   64    b  3       java.nio.ByteBuffer::position (8 bytes)
<writer thread='140282616018688'/>
request:  java.nio.ByteBuffer::position comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3562   65    b  3       java.nio.ByteBuffer::position (6 bytes)
<writer thread='140282616018688'/>
request:  java.io.Writer::write comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3567   66    b  3       java.io.Writer::write (11 bytes)
<writer thread='140282616018688'/>
request:  java.io.BufferedWriter::write comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3578   67   !b  3       java.io.BufferedWriter::write (117 bytes)
<writer thread='140282616018688'/>
request:  java.io.OutputStreamWriter::write comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3619   68    b  3       java.io.OutputStreamWriter::write (11 bytes)
<writer thread='140282616018688'/>
request:  sun.nio.cs.StreamEncoder::ensureOpen comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3625   69    b  3       sun.nio.cs.StreamEncoder::ensureOpen (18 bytes)
<writer thread='140282616018688'/>
request:  sun.nio.cs.StreamEncoder::implWrite comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3630   70    b  3       sun.nio.cs.StreamEncoder::implWrite (156 bytes)
<writer thread='140282616018688'/>
request:  java.nio.CharBuffer::limit comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3686   71    b  3       java.nio.CharBuffer::limit (6 bytes)
<writer thread='140282616018688'/>
request:  sun.nio.cs.UTF_8$Encoder::encodeLoop comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3689   72    b  3       sun.nio.cs.UTF_8$Encoder::encodeLoop (28 bytes)
<writer thread='140282616018688'/>
request:  java.io.OutputStreamWriter::flushBuffer comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3699   73    b  3       java.io.OutputStreamWriter::flushBuffer (8 bytes)
<writer thread='140282616018688'/>
request:  sun.nio.cs.StreamEncoder::implFlushBuffer comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3701   74    b  3       sun.nio.cs.StreamEncoder::implFlushBuffer (15 bytes)
<writer thread='140282616018688'/>
request:  java.nio.ByteBuffer::flip comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3704   75    b  3       java.nio.ByteBuffer::flip (7 bytes)
<writer thread='140282616018688'/>
request:  java.io.PrintStream::write comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3707   76   !b  3       java.io.PrintStream::write (69 bytes)
<writer thread='140282616018688'/>
request:  java.io.BufferedOutputStream::write comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3718   77  s b  3       java.io.BufferedOutputStream::write (67 bytes)
<writer thread='140282616018688'/>
request:  java.io.FileOutputStream::write comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3731   78    b  3       java.io.FileOutputStream::write (20 bytes)
<writer thread='140282616018688'/>
   3746   79     n 0       java.io.FileOutputStream::writeBytes (native)   
request:  java.nio.ByteBuffer::clear comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3746   80    b  3       java.nio.ByteBuffer::clear (7 bytes)
<writer thread='140282616018688'/>
request:  java.lang.Math::max comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   3895   81    b  3       java.lang.Math::max (11 bytes)
<writer thread='140282616018688'/>
   4042   82     n 0       java.lang.Double::doubleToRawLongBits (native)   (static)
request:  java.io.BufferedWriter::flushBuffer comment: tiered count: 383 hot: yes
<writer thread='140281860224768'/>
   4112   83   !b  3       java.io.BufferedWriter::flushBuffer (53 bytes)
<writer thread='140282616018688'/>
request:  sun.nio.cs.StreamEncoder::write comment: tiered count: 383 hot: yes
<writer thread='140281860224768'/>
   4136   84   !b  3       sun.nio.cs.StreamEncoder::write (78 bytes)
<writer thread='140282616018688'/>
request:  java.nio.charset.CharsetEncoder::encode comment: tiered count: 383 hot: yes
<writer thread='140281860224768'/>
   4163   85   !b  3       java.nio.charset.CharsetEncoder::encode (285 bytes)
<writer thread='140282616018688'/>
request:  java.nio.charset.CoderResult::isOverflow comment: tiered count: 383 hot: yes
<writer thread='140281860224768'/>
   4249   86    b  3       java.nio.charset.CoderResult::isOverflow (14 bytes)
<writer thread='140282616018688'/>
request:  sun.nio.cs.StreamEncoder::flushBuffer comment: tiered count: 383 hot: yes
<writer thread='140281860224768'/>
   4251   87   !b  3       sun.nio.cs.StreamEncoder::flushBuffer (42 bytes)
<writer thread='140282616018688'/>
request:  sun.nio.cs.StreamEncoder::writeBytes comment: tiered count: 383 hot: yes
<writer thread='140281860224768'/>
   4260   88    b  3       sun.nio.cs.StreamEncoder::writeBytes (132 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::size comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   4301   89    b  3       sun.misc.FDBigInteger::size (10 bytes)
<writer thread='140282616018688'/>
request:  java.lang.ThreadLocal$ThreadLocalMap::getEntry comment: tiered count: 638 hot: yes
<writer thread='140281860224768'/>
   4304   90    b  3       java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::multAndCarryBy10 comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   4345   91    b  3       sun.misc.FDBigInteger::multAndCarryBy10 (50 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::cmp comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   4389   92    b  3       sun.misc.FDBigInteger::cmp (147 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::quoRemIteration comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   4442   93    b  3       sun.misc.FDBigInteger::quoRemIteration (337 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::addAndCmp comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   4482   94    b  3       sun.misc.FDBigInteger::addAndCmp (292 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::size comment: tiered count: 1280 hot: yes
<writer thread='140281860224768'/>
   4512   95    b  1       sun.misc.FDBigInteger::size (10 bytes)
   4514   89       3       sun.misc.FDBigInteger::size (10 bytes)   made not entrant
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::multBy10 comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   4531   96    b  3       sun.misc.FDBigInteger::multBy10 (178 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::multDiffMe comment: tiered count: 383 hot: yes
<writer thread='140281860224768'/>
   4581   97    b  3       sun.misc.FDBigInteger::multDiffMe (297 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa comment: tiered count: 232 hot: yes
<writer thread='140281860224768'/>
   4738   98    b  3       sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa (1509 bytes)
<writer thread='140282616018688'/>
request:  java.io.BufferedWriter::newLine comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   5346   99    b  3       java.io.BufferedWriter::newLine (8 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FloatingDecimal$BinaryToASCIIBuffer::toJavaFormatString comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   5371  100    b  3       sun.misc.FloatingDecimal$BinaryToASCIIBuffer::toJavaFormatString (23 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FloatingDecimal::toJavaFormatString comment: tiered count: 257 hot: yes
<writer thread='140281860224768'/>
   5375  101    b  3       sun.misc.FloatingDecimal::toJavaFormatString (10 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FloatingDecimal::getBinaryToASCIIConverter comment: tiered count: 257 hot: yes
<writer thread='140281860224768'/>
   5380  102    b  3       sun.misc.FloatingDecimal::getBinaryToASCIIConverter (6 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FloatingDecimal::getBinaryToASCIIConverter comment: tiered count: 257 hot: yes
<writer thread='140281860224768'/>
   5383  103    b  3       sun.misc.FloatingDecimal::getBinaryToASCIIConverter (183 bytes)
<writer thread='140282616018688'/>
request:  java.io.PrintStream::println comment: tiered count: 258 hot: yes
<writer thread='140281860224768'/>
   5406  104   !b  3       java.io.PrintStream::println (24 bytes)
<writer thread='140282616018688'/>
request:  java.io.PrintStream::print comment: tiered count: 258 hot: yes
<writer thread='140281860224768'/>
   5419  105    b  3       java.io.PrintStream::print (13 bytes)
<writer thread='140282616018688'/>
request:  java.io.PrintStream::write comment: tiered count: 258 hot: yes
<writer thread='140281860224768'/>
   5423  106   !b  3       java.io.PrintStream::write (83 bytes)
<writer thread='140282616018688'/>
request:  java.io.PrintStream::newLine comment: tiered count: 258 hot: yes
<writer thread='140281860224768'/>
   5443  107   !b  3       java.io.PrintStream::newLine (73 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::valueOfPow52 comment: tiered count: 272 hot: yes
<writer thread='140281860224768'/>
   5641  108    b  3       sun.misc.FDBigInteger::valueOfPow52 (101 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::leftShift comment: tiered count: 236 hot: yes
<writer thread='140281860224768'/>
   5763  109    b  3       sun.misc.FDBigInteger::leftShift (395 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::trimLeadingZeros comment: tiered count: 5376 hot: yes
<writer thread='140281861277440'/>
   6100  110    b  4       sun.misc.FDBigInteger::trimLeadingZeros (57 bytes)
# Compiler cached profile is saved as: cached_profiles.log
   6112   28       3       sun.misc.FDBigInteger::trimLeadingZeros (57 bytes)   made not entrant
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::leftShift comment: tiered count: 343 hot: yes
<writer thread='140281860224768'/>
   6123  111    b  3       sun.misc.FDBigInteger::leftShift (50 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FDBigInteger::big5pow comment: tiered count: 309 hot: yes
<writer thread='140281860224768'/>
   6189  112    b  3       sun.misc.FDBigInteger::big5pow (37 bytes)
<writer thread='140282616018688'/>
   6235  113     n 0       java.lang.Double::longBitsToDouble (native)   (static)
request:  sun.misc.FDBigInteger::multAndCarryBy10 comment: tiered count: 5376 hot: yes
<writer thread='140281862330112'/>
   6274  114    b  4       sun.misc.FDBigInteger::multAndCarryBy10 (50 bytes)
# Compiler cached profile is saved as: cached_profiles.log
   6287   91       3       sun.misc.FDBigInteger::multAndCarryBy10 (50 bytes)   made not entrant
<writer thread='140282616018688'/>
request:  java.lang.Long::numberOfTrailingZeros comment: tiered count: 360 hot: yes
<writer thread='140281860224768'/>
   6317  115    b  3       java.lang.Long::numberOfTrailingZeros (116 bytes)
<writer thread='140282616018688'/>
request:  sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp comment: tiered count: 268 hot: yes
<writer thread='140281860224768'/>
   6342  116    b  3       sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp (182 bytes)
<writer thread='140282616018688'/>
request:  sun.nio.cs.UTF_8$Encoder::encodeArrayLoop comment: tiered count: 757 hot: yes
<writer thread='140281861277440'/>
   6462  117    b  4       sun.nio.cs.UTF_8$Encoder::encodeArrayLoop (489 bytes)
# Compiler cached profile is saved as: cached_profiles.log
   6555   48       3       sun.nio.cs.UTF_8$Encoder::encodeArrayLoop (489 bytes)   made not entrant
<writer thread='140282616018688'/>
request:  sun.misc.FloatingDecimal$BinaryToASCIIBuffer::getChars comment: tiered count: 383 hot: yes
<writer thread='140281860224768'/>
   6582  118    b  3       sun.misc.FloatingDecimal$BinaryToASCIIBuffer::getChars (502 bytes)
<writer thread='140282616018688'/>
request:  java.util.ArrayList::add comment: tiered count: 256 hot: yes
<writer thread='140281860224768'/>
   6736  119    b  3       java.util.ArrayList::add (29 bytes)
<writer thread='140282616018688'/>
request:  java.lang.Object::&lt;init&gt; comment: tiered count: 5632 hot: yes
<writer thread='140281860224768'/>
   6759  120    b  1       java.lang.Object::&lt;init&gt; (1 bytes)
   6760    8       3       java.lang.Object::&lt;init&gt; (1 bytes)   made not entrant
<writer thread='140282616018688'/>
request:  java.util.ArrayList::access$100 comment: tiered count: 128 hot: yes
<writer thread='140281860224768'/>
   6761  121    b  1       java.util.ArrayList::access$100 (5 bytes)
<writer thread='140282616018688'/>
request:  java.lang.Number::&lt;init&gt; comment: tiered count: 384 hot: yes
<writer thread='140281860224768'/>
   6763  122    b  3       java.lang.Number::&lt;init&gt; (5 bytes)
<writer thread='140282616018688'/>
request:  java.lang.Long::longValue comment: tiered count: 257 hot: yes
<writer thread='140281860224768'/>
   6765  123    b  3       java.lang.Long::longValue (5 bytes)
<writer thread='140282616018688'/>
C1 Runtime statistics:
 _resolve_invoke_virtual_cnt:     21
 _resolve_invoke_opt_virtual_cnt: 140
 _resolve_invoke_static_cnt:      34
 _handle_wrong_method_cnt:        8
 _ic_miss_cnt:                    3
 _generic_arraycopy_cnt:          0
 _generic_arraycopystub_cnt:      0
 _byte_arraycopy_cnt:             0
 _short_arraycopy_cnt:            0
 _int_arraycopy_cnt:              0
 _long_arraycopy_cnt:             0
 _primitive_arraycopy_cnt:        0
 _oop_arraycopy_cnt (C):          0
 _oop_arraycopy_cnt (stub):       0
 _arraycopy_slowcase_cnt:         0
 _arraycopy_checkcast_cnt:        0
 _arraycopy_checkcast_attempt_cnt:0
 _new_type_array_slowcase_cnt:    0
 _new_object_array_slowcase_cnt:  0
 _new_instance_slowcase_cnt:      70
 _new_multi_array_slowcase_cnt:   0
 _monitorenter_slowcase_cnt:      0
 _monitorexit_slowcase_cnt:       0
 _patch_code_slowcase_cnt:        0
 _throw_range_check_exception_count:            0:
 _throw_index_exception_count:                  0:
 _throw_div0_exception_count:                   0:
 _throw_null_pointer_exception_count:           0:
 _throw_class_cast_exception_count:             0:
 _throw_incompatible_class_change_error_count:  0:
 _throw_array_store_exception_count:            0:
 _throw_count:                                  0:

<statistics type='deoptimization'>
Deoptimization traps recorded:
    12 (100.0%) total
         unloaded/reinterpret/invokestatic: 1 (8.3%)
                       constraint/none/nop: 8 (66.7%)
         unstable_if/reinterpret/if_icmpge: 2 (16.7%)
              unstable_if/reinterpret/ifle: 1 (8.3%)
</statistics>
<statistics type='SharedRuntime'>
    3 inline cache miss in compiled
    8 wrong method
   34 unresolved static call site
   21 unresolved virtual call site
  140 unresolved opt virtual call site
    6 slow partial subtype
  560 byte array copies
 4071 short array copies
   44 int array copies
   12 long array copies
AdapterHandlerTable: empty 183 longest 3 total 140 average 1.272727
AdapterHandlerTable: lookups 5574 buckets 5401 equals 5140 hits 5140 compact 5140
</statistics>
<statistics type='nmethod'>
Statistics for 5 native nmethods:
 N. total size  = 5152
 N. relocation  = 440
 N. main code   = 3152
Statistics for 118 bytecoded nmethods:
 total in heap  = 513784
 relocation     = 33048
 constants      = 448
 main code      = 276320
 stub code      = 27280
 oops           = 320
 scopes data    = 50736
 scopes pcs     = 75968
 dependencies   = 984
 handler table  = 4600
 nul chk table  = 3144
Debug Data Chunks: 10677, shared 1294+3061, non-SP&apos;s elided 75
PcDesc Statistics:  541 queries, 9.84 comparisons per query
  caches=118 queries=541/0, hits=0+31, tests=2164+3161, adds=510
</statistics>
<statistics type='opto'>
--- Compiler Statistics ---
Methods seen: 113  Methods parsed: 113  Nodes created: 19023
Blocks parsed: 190  Blocks seen: 230
253 original NULL checks - 202 elided (79%); optimizer leaves 40,
11 made implicit (27%)
CCP: 12  constants found: 0
Total frameslots = 184, Max frameslots = 32
Inserted 0 spill loads, 0 spill stores, 0 mem-mem moves and 0 copies.
Total load cost=      0, store cost =      0, mem-mem cost =  0.00, copy cost =     0.
Adjusted spill cost =       0.
Conservatively coalesced 339 copies, 0 pairs, 146 post alloc.
Used cisc instruction  7,  remained in register 61
Average allocation trips 1.214286
High Pressure Blocks = 0, Low Pressure Blocks = 0
Nops added 0 bytes to total of 13473 bytes, for 0.00%
Peephole: peephole rules applied: 0
PhaseIdealLoop=86, sum _unique=62501
</statistics>
<statistics type='intrinsic'>
Compiler intrinsic usage:
     1 (10.0%) _min (worked)
     9 (90.0%) _nanoTime (worked)
    10 (100.0%) total (worked)
</statistics>
<writer thread='140281868412672'/>
<destroy_vm stamp='6.772'/>
<tty_done stamp='6.797'/>
</tty>
<hotspot_log_done stamp='6.797'/>
</hotspot_log>
