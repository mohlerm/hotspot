<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='6558' time_ms='1430295980637'>
<vm_version>
<name>
OpenJDK 64-Bit Server VM
</name>
<release>
1.9.0-internal-debug-marcel_2015_04_17_10_57-b00
</release>
<info>
OpenJDK 64-Bit Server VM (1.9.0-internal-debug-marcel_2015_04_17_10_57-b00) for linux-amd64 JRE (1.9.0-internal-marcel_2015_04_17_10_57-b00), built on Apr 29 2015 10:20:18 by &quot;marcel&quot; with gcc 4.9.2 20150304 (prerelease)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintCompilation -XX:-UseOnStackReplacement -XX:+UnlockExperimentalVMOptions -XX:+CacheProfiles -XX:CacheProfilesFile=cached_profiles.log -XX:+TraceDeoptimization -Xbatch -XX:+CIPrintRequests 
</args>
<command>
TwoMethods
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=1.9.0-internal-debug-marcel_2015_04_17_10_57-b00
java.vm.name=OpenJDK 64-Bit Server VM
java.vm.info=mixed mode, sharing
sun.boot.library.path=/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/lib/amd64
java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
java.home=/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk
java.class.path=.
sun.boot.class.path=/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.rmi:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.security.auth:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.jcmd:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.attach:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.transaction:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.security.jgss:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.hprof.agent:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.zipfs:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.jvmstat:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.sql.rowset:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.security.jgss:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/jdk.hotspot.agent:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.datatransfer:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.scripting:/home/marcel/cloud/ETH/6thSemesterFS15/BachelorThesis/hs-comp/build/linux-x86_64-normal-server-slowdebug/jdk/modules/java.logging:/hom
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.9
java.vm.vendor=Oracle Corporation
sun.java.command=TwoMethods
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='140546244704000'/>
request:  java.lang.System::getSecurityManager comment: tiered count: 384 hot: yes
<writer thread='140545153296128'/>
    470    1    b  3       java.lang.System::getSecurityManager (4 bytes)
<writer thread='140546244704000'/>
<blob name='MethodHandlesAdapterBlob' size='182000'>
<sect index='1' size='182000' free='177714'/>
</blob>
request:  java.lang.StringBuilder::append comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
    480    2    b  3       java.lang.StringBuilder::append (8 bytes)
<writer thread='140546244704000'/>
request:  java.lang.String::getChars comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
    483    3    b  3       java.lang.String::getChars (62 bytes)
<writer thread='140546244704000'/>
request:  java.lang.String::charAt comment: tiered count: 17280 hot: yes
<writer thread='140545154348800'/>
    492    4    b  4       java.lang.String::charAt (29 bytes)
<writer thread='140546244704000'/>
request:  java.lang.Object::&lt;init&gt; comment: tiered count: 2304 hot: yes
<writer thread='140545153296128'/>
    496    5    b  3       java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='140546244704000'/>
request:  java.lang.ref.Reference::get comment: tiered count: 896 hot: yes
<writer thread='140545153296128'/>
    505    6    b  1       java.lang.ref.Reference::get (5 bytes)
<writer thread='140546244704000'/>
    506    7     n 0       java.lang.System::arraycopy (native)   (static)
request:  java.util.Arrays::copyOf comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
    510    8    b  3       java.util.Arrays::copyOf (19 bytes)
<writer thread='140546244704000'/>
request:  java.lang.String::hashCode comment: tiered count: 640 hot: yes
<writer thread='140545153296128'/>
    518    9    b  3       java.lang.String::hashCode (53 bytes)
<writer thread='140546244704000'/>
request:  java.lang.AbstractStringBuilder::expandCapacity comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
    523   10    b  3       java.lang.AbstractStringBuilder::expandCapacity (50 bytes)
<writer thread='140546244704000'/>
request:  java.util.Arrays::copyOfRange comment: tiered count: 640 hot: yes
<writer thread='140545153296128'/>
    533   11    b  3       java.util.Arrays::copyOfRange (63 bytes)
<writer thread='140546244704000'/>
request:  java.lang.Math::min comment: tiered count: 2048 hot: yes
<writer thread='140545153296128'/>
    552   12    b  3       java.lang.Math::min (11 bytes)
<writer thread='140546244704000'/>
request:  java.lang.String::&lt;init&gt; comment: tiered count: 640 hot: yes
<writer thread='140545153296128'/>
    554   13    b  3       java.lang.String::&lt;init&gt; (82 bytes)
<writer thread='140546244704000'/>
request:  java.lang.String::length comment: tiered count: 1280 hot: yes
<writer thread='140545153296128'/>
    590   14    b  3       java.lang.String::length (6 bytes)
<writer thread='140546244704000'/>
request:  java.lang.AbstractStringBuilder::ensureCapacityInternal comment: tiered count: 384 hot: yes
<writer thread='140545153296128'/>
    592   15    b  3       java.lang.AbstractStringBuilder::ensureCapacityInternal (16 bytes)
<writer thread='140546244704000'/>
request:  java.lang.String::indexOf comment: tiered count: 384 hot: yes
<writer thread='140545153296128'/>
    798   16    b  3       java.lang.String::indexOf (70 bytes)
<writer thread='140546244704000'/>
request:  sun.misc.FDBigInteger::&lt;init&gt; comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
    980   17    b  3       sun.misc.FDBigInteger::&lt;init&gt; (30 bytes)
<writer thread='140546244704000'/>
request:  sun.misc.FDBigInteger::trimLeadingZeros comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
    993   18    b  3       sun.misc.FDBigInteger::trimLeadingZeros (57 bytes)
<writer thread='140546244704000'/>
request:  sun.misc.FDBigInteger::makeImmutable comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
   1010   19    b  3       sun.misc.FDBigInteger::makeImmutable (6 bytes)
<writer thread='140546244704000'/>
request:  sun.misc.FDBigInteger::mult comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
   1013   20    b  3       sun.misc.FDBigInteger::mult (44 bytes)
<writer thread='140546244704000'/>
request:  sun.misc.FDBigInteger::mult comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
   1027   21    b  3       sun.misc.FDBigInteger::mult (64 bytes)
<writer thread='140546244704000'/>
request:  java.lang.String::indexOf comment: tiered count: 384 hot: yes
<writer thread='140545153296128'/>
   1366   22    b  3       java.lang.String::indexOf (7 bytes)
<writer thread='140546244704000'/>
request:  java.nio.Buffer::position comment: tiered count: 128 hot: yes
<writer thread='140545153296128'/>
   1874   23    b  1       java.nio.Buffer::position (5 bytes)
<writer thread='140546244704000'/>
request:  java.lang.AbstractStringBuilder::append comment: tiered count: 383 hot: yes
<writer thread='140545153296128'/>
   2349   24    b  3       java.lang.AbstractStringBuilder::append (50 bytes)
<writer thread='140546244704000'/>
request:  java.nio.Buffer::limit comment: tiered count: 128 hot: yes
<writer thread='140545153296128'/>
   2378   25    b  1       java.nio.Buffer::limit (5 bytes)
<writer thread='140546244704000'/>
request:  java.nio.ByteBuffer::arrayOffset comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
   3244   26    b  3       java.nio.ByteBuffer::arrayOffset (35 bytes)
<writer thread='140546244704000'/>
request:  java.nio.Buffer::position comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
   4062   27    b  3       java.nio.Buffer::position (43 bytes)
<writer thread='140546244704000'/>
request:  java.nio.CharBuffer::arrayOffset comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
   4258   28    b  3       java.nio.CharBuffer::arrayOffset (35 bytes)
<writer thread='140546244704000'/>
   4602   29     n 0       java.lang.Thread::currentThread (native)   (static)
request:  java.lang.ThreadLocal::getMap comment: tiered count: 512 hot: yes
<writer thread='140545153296128'/>
   5731   30    b  3       java.lang.ThreadLocal::getMap (5 bytes)
<writer thread='140546244704000'/>
request:  java.lang.ThreadLocal::access$400 comment: tiered count: 512 hot: yes
<writer thread='140545153296128'/>
   5915   31    b  1       java.lang.ThreadLocal::access$400 (5 bytes)
<writer thread='140546244704000'/>
request:  java.io.BufferedWriter::ensureOpen comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
   5919   32    b  3       java.io.BufferedWriter::ensureOpen (18 bytes)
<writer thread='140546244704000'/>
request:  sun.nio.cs.UTF_8$Encoder::encodeArrayLoop comment: tiered count: 128 hot: yes
<writer thread='140545153296128'/>
   5930   33    b  3       sun.nio.cs.UTF_8$Encoder::encodeArrayLoop (489 bytes)
<writer thread='140546244704000'/>
request:  java.nio.charset.CoderResult::isUnderflow comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
   6268   34    b  3       java.nio.charset.CoderResult::isUnderflow (13 bytes)
<writer thread='140546244704000'/>
request:  sun.nio.cs.StreamEncoder::isOpen comment: tiered count: 128 hot: yes
<writer thread='140545153296128'/>
   6271   35    b  1       sun.nio.cs.StreamEncoder::isOpen (5 bytes)
<writer thread='140546244704000'/>
request:  java.io.PrintStream::ensureOpen comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
   6272   36    b  3       java.io.PrintStream::ensureOpen (18 bytes)
<writer thread='140546244704000'/>
request:  java.io.FileDescriptor::access$100 comment: tiered count: 128 hot: yes
<writer thread='140545153296128'/>
   6275   37    b  1       java.io.FileDescriptor::access$100 (5 bytes)
<writer thread='140546244704000'/>
request:  java.lang.ThreadLocal::get comment: tiered count: 512 hot: yes
<writer thread='140545153296128'/>
   6637   38    b  3       java.lang.ThreadLocal::get (38 bytes)
<writer thread='140546244704000'/>
request:  java.io.BufferedOutputStream::flush comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
   8100   39  s b  3       java.io.BufferedOutputStream::flush (12 bytes)
<writer thread='140546244704000'/>
request:  java.io.OutputStream::flush comment: tiered count: 256 hot: yes
<writer thread='140545153296128'/>
   8122   40    b  3       java.io.OutputStream::flush (1 bytes)
<writer thread='140546244704000'/>
request:  java.nio.ByteBuffer::array comment: tiered count: 382 hot: yes
<writer thread='140545153296128'/>
   8988   41    b  3       java.nio.ByteBuffer::array (35 bytes)
<writer thread='140546244704000'/>
request:  java.nio.CharBuffer::position comment: tiered count: 383 hot: yes
<writer thread='140545153296128'/>
   8994   42    b  3       java.nio.CharBuffer::position (6 bytes)
<writer thread='140546244704000'/>
request:  java.nio.CharBuffer::position comment: tiered count: 383 hot: yes
<writer thread='140545153296128'/>
   9000   43    b  3       java.nio.CharBuffer::position (8 bytes)
<writer thread='140545149085440'/>
C1 Runtime statistics:
 _resolve_invoke_virtual_cnt:     3
 _resolve_invoke_opt_virtual_cnt: 12
 _resolve_invoke_static_cnt:      2
 _handle_wrong_method_cnt:        0
 _ic_miss_cnt:                    0
 _generic_arraycopy_cnt:          0
 _generic_arraycopystub_cnt:      0
 _byte_arraycopy_cnt:             0
 _short_arraycopy_cnt:            0
 _int_arraycopy_cnt:              0
 _long_arraycopy_cnt:             0
 _primitive_arraycopy_cnt:        0
 _oop_arraycopy_cnt (C):          0
 _oop_arraycopy_cnt (stub):       0
 _arraycopy_slowcase_cnt:         0
 _arraycopy_checkcast_cnt:        0
 _arraycopy_checkcast_attempt_cnt:0
 _new_type_array_slowcase_cnt:    0
 _new_object_array_slowcase_cnt:  0
 _new_instance_slowcase_cnt:      70
 _new_multi_array_slowcase_cnt:   0
 _monitorenter_slowcase_cnt:      0
 _monitorexit_slowcase_cnt:       0
 _patch_code_slowcase_cnt:        0
 _throw_range_check_exception_count:            0:
 _throw_index_exception_count:                  0:
 _throw_div0_exception_count:                   0:
 _throw_null_pointer_exception_count:           0:
 _throw_class_cast_exception_count:             0:
 _throw_incompatible_class_change_error_count:  0:
 _throw_array_store_exception_count:            0:
 _throw_count:                                  0:

<statistics type='SharedRuntime'>
    0 inline cache miss in compiled
    0 wrong method
    2 unresolved static call site
    3 unresolved virtual call site
   12 unresolved opt virtual call site
    7 slow partial subtype
   12 byte array copies
 1107 short array copies
   12 int array copies
   12 long array copies
AdapterHandlerTable: empty 183 longest 3 total 140 average 1.272727
AdapterHandlerTable: lookups 5569 buckets 5396 equals 5135 hits 5135 compact 5135
</statistics>
<statistics type='nmethod'>
Statistics for 2 native nmethods:
 N. total size  = 2080
 N. relocation  = 176
 N. main code   = 1280
Statistics for 41 bytecoded nmethods:
 total in heap  = 99368
 relocation     = 6312
 main code      = 48992
 stub code      = 8864
 oops           = 8
 scopes data    = 7440
 scopes pcs     = 13232
 dependencies   = 328
 nul chk table  = 576
Debug Data Chunks: 1834, shared 208+599, non-SP&apos;s elided 7
PcDesc Statistics:  86 queries, 9.42 comparisons per query
  caches=41 queries=86/0, hits=0+5, tests=304+506, adds=81
</statistics>
<statistics type='opto'>
--- Compiler Statistics ---
Methods seen: 1  Methods parsed: 1  Nodes created: 1966
Blocks parsed: 3  Blocks seen: 4
4 original NULL checks - 3 elided (75%); optimizer leaves 17,
1 made implicit ( 5%)
CCP: 1  constants found: 0
Total frameslots = 76, Max frameslots = 32
Inserted 0 spill loads, 0 spill stores, 0 mem-mem moves and 0 copies.
Total load cost=      0, store cost =      0, mem-mem cost =  0.00, copy cost =     0.
Adjusted spill cost =       0.
Conservatively coalesced 38 copies, 0 pairs, 2 post alloc.
Used cisc instruction  0,  remained in register 1
Average allocation trips 1.058824
High Pressure Blocks = 0, Low Pressure Blocks = 0
Nops added 0 bytes to total of 2071 bytes, for 0.00%
Peephole: peephole rules applied: 0
PhaseIdealLoop=2, sum _unique=226
</statistics>
<tty_done stamp='9.978'/>
</tty>
<hotspot_log_done stamp='9.978'/>
</hotspot_log>
