use profiles with mode 0
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.System.getSecurityManager() <<<<<<<
NOTE: no explicit compiler cache profiles file specified, uses -XX:CacheProfilesFile=cached_profiles.dat.
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1280, OSR_BCI: -1 :: virtual jint java.lang.String.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2432, OSR_BCI: -1 :: virtual void java.lang.Object.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 407, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 663, OSR_BCI: -1 :: virtual jint java.lang.String.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.concurrent.ConcurrentHashMap.tabAt(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 13056, OSR_BCI: -1 :: virtual jchar java.lang.String.charAt(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2560, OSR_BCI: -1 :: virtual void java.lang.Object.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.concurrent.ConcurrentHashMap.setTabAt(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 412, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jobject java.lang.System.getSecurityManager() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.ClassLoader.checkName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: virtual jint java.lang.String.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap$Node.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.concurrent.ConcurrentHashMap.casTabAt(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.concurrent.ConcurrentHashMap.spread(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putVal(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap.addCount(jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putIfAbsent(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.getClassLoadingLock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.findLoadedClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1408, OSR_BCI: -1 :: static void java.util.concurrent.ConcurrentHashMap.setTabAt(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1031, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.expandCapacity(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2432, OSR_BCI: -1 :: static jint java.lang.Math.min(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.ensureCapacityInternal(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isSurrogate(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.toLowerCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.CharacterData.of(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toLowerCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.getProperties(jint) <<<<<<<
java.lang.NoClassDefFoundError: sun/reflect/GeneratedSerializationConstructorAccessor10
Error while parsing line 10734: sun/reflect/GeneratedSerializationConstructorAccessor10

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.loadClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.Launcher$AppClassLoader.loadClass(jobject, jboolean) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 11071: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 11117: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 11157: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 11181: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 11436: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1194, OSR_BCI: -1 :: virtual jint java.lang.String.hashCode() <<<<<<<
java.lang.NoClassDefFoundError: sun/reflect/GeneratedSerializationConstructorAccessor10
Error while parsing line 12207: sun/reflect/GeneratedSerializationConstructorAccessor10

java.lang.NoClassDefFoundError: sun/reflect/GeneratedSerializationConstructorAccessor10
Error while parsing line 12543: sun/reflect/GeneratedSerializationConstructorAccessor10

java.lang.NoClassDefFoundError: sun/reflect/GeneratedMethodAccessor1
Error while parsing line 13346: sun/reflect/GeneratedMethodAccessor1

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 15147: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 15312: java/lang/invoke/BoundMethodHandle$Species_LILL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 904, OSR_BCI: -1 :: virtual jboolean java.lang.String.equals(jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 15494: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 15509: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 15717: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 15911: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 15918: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 16113: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 16362: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L5
Error while parsing line 16431: java/lang/invoke/BoundMethodHandle$Species_L5

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 16482: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 16600: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 16790: java/lang/invoke/BoundMethodHandle$Species_LILL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL
Error while parsing line 16795: java/lang/invoke/BoundMethodHandle$Species_LIL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 16826: java/lang/invoke/BoundMethodHandle$Species_LILL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 16929: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 17029: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 17073: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL
Error while parsing line 17278: java/lang/invoke/BoundMethodHandle$Species_LIL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 17343: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL3
Error while parsing line 17375: java/lang/invoke/BoundMethodHandle$Species_LIL3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 17394: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 17399: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 17503: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 17639: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: sun/reflect/GeneratedSerializationConstructorAccessor11
Error while parsing line 18520: sun/reflect/GeneratedSerializationConstructorAccessor11

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 20205: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 20427: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 20543: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 20666: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: sun/reflect/GeneratedSerializationConstructorAccessor8
Error while parsing line 20786: sun/reflect/GeneratedSerializationConstructorAccessor8

java.lang.NoClassDefFoundError: sun/reflect/GeneratedMethodAccessor4
Error while parsing line 21033: sun/reflect/GeneratedMethodAccessor4

java.lang.NoClassDefFoundError: sun/reflect/GeneratedSerializationConstructorAccessor29
Error while parsing line 22661: sun/reflect/GeneratedSerializationConstructorAccessor29

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 22759: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 23448: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 25590: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L5
Error while parsing line 26130: java/lang/invoke/BoundMethodHandle$Species_L5

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 27249: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 27461: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL
Error while parsing line 27498: java/lang/invoke/BoundMethodHandle$Species_LIL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 108, OSR_BCI: -1 :: virtual jobject java.lang.String.replace(jchar, jchar) <<<<<<<
java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 28800: jdk/nashorn/internal/scripts/JD4

>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.Vector.size() <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 29091: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 29267: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 30159: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 31111: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 31234: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 31396: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5431, OSR_BCI: -1 :: static jobject java.util.concurrent.ConcurrentHashMap.tabAt(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1384, OSR_BCI: -1 :: static jboolean java.util.concurrent.ConcurrentHashMap.casTabAt(jobject, jint, jobject, jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 32538: java/lang/invoke/BoundMethodHandle$Species_LILL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 32562: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 32585: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL3
Error while parsing line 33091: java/lang/invoke/BoundMethodHandle$Species_LIL3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 33247: java/lang/invoke/BoundMethodHandle$Species_L4

>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.ArrayList.size() <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 33340: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD12
Error while parsing line 33539: jdk/nashorn/internal/scripts/JD12

>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject java.net.URLClassLoader.access$000(jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 34044: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLI
Error while parsing line 34209: java/lang/invoke/BoundMethodHandle$Species_LLI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL3
Error while parsing line 34431: java/lang/invoke/BoundMethodHandle$Species_LIL3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL3
Error while parsing line 34450: java/lang/invoke/BoundMethodHandle$Species_LIL3

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 34632: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 34694: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 36256: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: com/sun/proxy/$Proxy1
Error while parsing line 36551: com/sun/proxy/$Proxy1

java.lang.NoClassDefFoundError: com/sun/proxy/$Proxy1
Error while parsing line 36625: com/sun/proxy/$Proxy1

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 36708: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 37375: java/lang/invoke/BoundMethodHandle$Species_LILL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 37813: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 37831: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: com/sun/proxy/$Proxy1
Error while parsing line 38062: com/sun/proxy/$Proxy1

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 38309: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 38381: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 38645: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 39079: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Throwable.fillInStackTrace() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 334, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jboolean) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLI
Error while parsing line 39188: java/lang/invoke/BoundMethodHandle$Species_LLI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 39846: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 39889: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 40294: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 40777: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 41302: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 41331: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 41638: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 42956: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 43020: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 43135: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 43170: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 43180: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 43265: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD7P0
Error while parsing line 43270: jdk/nashorn/internal/scripts/JD7P0

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 43367: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD12
Error while parsing line 43749: jdk/nashorn/internal/scripts/JD12

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 43758: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L7
Error while parsing line 44226: java/lang/invoke/BoundMethodHandle$Species_L7

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD10P0
Error while parsing line 44754: jdk/nashorn/internal/scripts/JD10P0

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 44923: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD10P0
Error while parsing line 45187: jdk/nashorn/internal/scripts/JD10P0

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD10P0
Error while parsing line 45421: jdk/nashorn/internal/scripts/JD10P0

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 45480: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 46171: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 46804: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 47287: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 47395: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 47461: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 47656: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 47785: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 47801: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 47973: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 48959: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 49176: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 49670: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 50238: jdk/nashorn/internal/scripts/JD4

>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.Boolean.valueOf(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 11264, OSR_BCI: 10 :: virtual jobject java.io.UnixFileSystem.normalize(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.UnixFileSystem.prefixLength(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 10240, OSR_BCI: 69 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 29696, OSR_BCI: 20 :: virtual jint sun.nio.cs.UTF_8$Encoder.encode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 209, OSR_BCI: -1 :: virtual jobject java.io.UnixFileSystem.normalize(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.io.File.getPrefixLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.String.getChars(jint, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5120, OSR_BCI: 29 :: static jobject sun.net.www.ParseUtil.encodePath(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jint java.util.BitSet.wordIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual void java.util.BitSet.checkInvariants() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 276, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 768, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 768, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 168, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 30720, OSR_BCI: 20 :: virtual jint sun.nio.cs.UTF_8$Encoder.encode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 371, OSR_BCI: -1 :: virtual jint sun.nio.cs.UTF_8$Encoder.encode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 135, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.io.File.isInvalid() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Stack.empty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getProtocol() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ref.SoftReference.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath.getLoader(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jboolean java.util.BitSet.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 26, OSR_BCI: -1 :: virtual jboolean java.util.HashMap.containsKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 248, OSR_BCI: -1 :: virtual jobject java.util.HashMap.getNode(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 318, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jfloat java.nio.charset.CharsetEncoder.maxBytesPerChar() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 82, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getFile() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.StringCoding.safeTrim(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.String.getBytes(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.StringCoding.encode(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.StringCoding$StringEncoder.encode(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jint java.lang.StringCoding.scale(jint, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.StringCoding.access$300(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 20480, OSR_BCI: 21 :: virtual jint java.lang.String.lastIndexOf(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 508, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.getMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.StringCoding$StringEncoder.requestedCharsetName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 512, OSR_BCI: -1 :: static jint java.lang.ThreadLocal.access$400(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jobject java.lang.ThreadLocal$ThreadLocalMap.access$000(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal$ThreadLocalMap.getEntry(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 15, OSR_BCI: -1 :: virtual void java.util.ArrayList.grow(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 93, OSR_BCI: -1 :: static jobject sun.net.www.ParseUtil.encodePath(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 516, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.String.toCharArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.String.endsWith(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getHost() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.net.URL.getPort() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 16, OSR_BCI: -1 :: virtual void java.util.ArrayList.grow(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 21504, OSR_BCI: 21 :: virtual jint java.lang.String.lastIndexOf(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1099, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1496, OSR_BCI: -1 :: virtual jboolean java.lang.String.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.Arrays.asList(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 151, OSR_BCI: -1 :: virtual void java.lang.ref.Reference.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 97, OSR_BCI: -1 :: virtual void java.lang.ref.SoftReference.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedList.linkLast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableCollection$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.AbstractList$Itr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.AbstractList$Itr.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getAuthority() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getPath() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getQuery() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getRef() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath$Loader.getBaseURL() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getUserInfo() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 10301, OSR_BCI: 29 :: static jobject sun.net.www.ParseUtil.encodePath(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.io.File.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.io.UnixFileSystem.getBooleanAttributes(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.String.regionMatches(jboolean, jint, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.net.URL.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.net.URL.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jchar java.lang.Character.toUpperCase(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.toUpperCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toUpperCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jchar java.lang.Character.toLowerCase(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.net.www.protocol.file.Handler.parseURL(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.net.URLStreamHandler.parseURL(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.net.URLStreamHandler.setURL(jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.net.URL.set(jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.io.File.exists() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 465, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.UnixFileSystem.resolve(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.File.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1282, OSR_BCI: -1 :: static jobject java.lang.CharacterData.of(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 104, OSR_BCI: -1 :: virtual jobject java.util.Properties.loadConvert(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap.newNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 505, OSR_BCI: -1 :: static jint java.util.HashMap.hash(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: static jobject java.lang.System.getSecurityManager() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath$FileLoader.getResource(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void sun.misc.URLClassPath.check(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1132, OSR_BCI: -1 :: virtual jobject java.lang.String.replace(jchar, jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.skipDelimiters(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.scanToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.countTokens() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.StringTokenizer.nextToken() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.StringTokenizer.<init>(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.StringTokenizer.setMaxDelimCodePoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedList.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.AbstractSequentialList.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1111, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.QuotedStringTokenizer.unmatchedQuotesIn(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3458, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 15, OSR_BCI: -1 :: static jint java.lang.Math.max(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.HashMap$HashIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap$KeyIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap$HashIterator.nextNode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Slice.match(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 118, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.scanToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2512, OSR_BCI: 2 :: virtual jint java.util.StringTokenizer.scanToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 59, OSR_BCI: -1 :: virtual void java.util.StringTokenizer.setMaxDelimCodePoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Vector.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 178, OSR_BCI: -1 :: virtual jobject java.lang.String.trim() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 304, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.scanToken(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.StringTokenizer.hasMoreTokens() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1024, OSR_BCI: 30 :: virtual jint java.lang.String.compareTo(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 103, OSR_BCI: -1 :: virtual jobject java.util.regex.Matcher.reset() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.QuotedStringTokenizer.stripQuotes(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.QuotedStringTokenizer.nextToken() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.removeFirst() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.unlinkFirst(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.options.OptionTemplate.getKey() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.charCount(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 153, OSR_BCI: -1 :: virtual jint java.lang.String.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7040, OSR_BCI: 2 :: virtual jint java.util.StringTokenizer.scanToken(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern.has(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 527, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.scanToken(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.LinkedList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.TreeMap.parentOf(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Vector.addElement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Vector.ensureCapacityHelper(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Stack.push(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Vector.elementData(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 103, OSR_BCI: -1 :: virtual jboolean java.util.regex.Matcher.search(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 286, OSR_BCI: -1 :: virtual jobject java.util.Vector.elementAt(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.StringTokenizer.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 282, OSR_BCI: -1 :: virtual jobject java.util.Stack.pop() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 283, OSR_BCI: -1 :: virtual jobject java.util.Stack.peek() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 283, OSR_BCI: -1 :: virtual void java.util.Vector.removeElementAt(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 113, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Start.match(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.TreeMap$PrivateEntryIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$KeyIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$PrivateEntryIterator.nextEntry() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.regex.Pattern$Node.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Node.study(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.codePointAtImpl(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isHighSurrogate(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.regex.Pattern.isSupplementary(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 20, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$PrivateEntryIterator.nextEntry() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.util.locale.LocaleUtils.isUpper(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 433, OSR_BCI: -1 :: virtual jobject java.lang.String.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.options.OptionTemplate.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.File.getPath() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.BufferedInputStream.getBufIfOpen() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 126, OSR_BCI: -1 :: static jobject java.io.DataInputStream.readUTF(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read1(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.DataInputStream.readUTF() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.DataInputStream.readUnsignedShort() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.DataInputStream.readFully(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jshort java.io.DataInputStream.readShort() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.DataInputStream.readFully(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5430, OSR_BCI: -1 :: virtual jobject java.io.BufferedInputStream.getBufIfOpen() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1024, OSR_BCI: 151 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual jobject java.util.HashMap.getNode(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.zip.Checksum.update(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.zip.CRC32.update(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$Itr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.getSimpleName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnclosingMethodInfo() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.Number.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Byte.<init>(jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Short.<init>(jshort) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Long.<init>(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalize(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.makeImpl(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.MethodType.checkPtypes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.MethodType.checkSlotCount(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalizeAll(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.security.Permissions.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 29, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.String.compareTo(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.String.codePointAt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.HashMap$HashIterator.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isWhitespace(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isWhitespace(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isWhitespace(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$Itr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 34, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 35, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jchar sun.reflect.generics.parser.SignatureParser.current() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.Integer.getChars(jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isStatic(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.reflect.Array.newInstance(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.toArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.util.AbstractCollection.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 242, OSR_BCI: -1 :: virtual void java.util.ArrayList.ensureCapacityInternal(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 242, OSR_BCI: -1 :: virtual void java.util.ArrayList.ensureExplicitCapacity(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jshort java.lang.Short.shortValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ByteArrayOutputStream.write(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ByteArrayOutputStream.ensureCapacity(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.DataOutputStream.incCount(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.DataOutputStream.writeByte(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.DataOutputStream.write(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject sun.misc.ProxyGenerator.access$300(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.DataOutputStream.writeShort(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jshort sun.misc.ProxyGenerator$ConstantPool.getUtf8(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jshort sun.misc.ProxyGenerator$ConstantPool.getValue(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1281, OSR_BCI: -1 :: static jint java.util.concurrent.ConcurrentHashMap.spread(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.annotation.AnnotationInvocationHandler.invoke(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.util.IdentityHashMap.hash(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.util.AbstractList.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint sun.misc.ProxyGenerator$ConstantPool$IndirectEntry.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Class.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jshort sun.misc.ProxyGenerator$ConstantPool.getIndirect(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 365, OSR_BCI: -1 :: virtual void sun.misc.ProxyGenerator$ConstantPool$Entry.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 365, OSR_BCI: -1 :: virtual void sun.misc.ProxyGenerator$ConstantPool$Entry.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean sun.misc.ProxyGenerator$ConstantPool$IndirectEntry.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.checkForComodification() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 109, OSR_BCI: -1 :: static jint java.io.DataOutputStream.writeUTF(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.Class.annotationData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.reflect.Field.setFieldAccessor(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1161, OSR_BCI: -1 :: static jobject java.io.DataInputStream.readUTF(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1282, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putVal(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1282, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap.addCount(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.Arrays$ArrayList.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.checkForComodification() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1042, OSR_BCI: 9 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap.keySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap$KeySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1281, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putIfAbsent(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Objects.requireNonNull(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.entrySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedEntrySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.LinkedHashMap$LinkedHashIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1282, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toLowerCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.ByteArrayInputStream.read() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jbyte java.io.DataInputStream.readByte() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.Integer.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.makeImpl(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodTypeForm.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindIsField(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isTypeVisible(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Class.getClassLoader0() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.initResolved(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isStatic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodOrFieldType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.MemberName.flagsMods(jint, jint, jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.init(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName$Factory.resolveOrFail(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName$Factory.resolve(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.checkForTypeAlias() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.insertParameterTypes(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jchar java.lang.invoke.MethodTypeForm.unpack(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jboolean java.lang.Object.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.<init>(jobject, jobject, jobject, jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName$Factory.resolve(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getInvocationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 95, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forPrimitiveType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.checkForTypeAlias() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.genericMethodType(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void java.lang.reflect.Field.setFieldAccessor(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.util.Objects.requireNonNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkSymbolicClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkAccess(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.basicType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isSamePackage(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Class.getClassLoader() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.cachedLambdaForm(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: virtual jobject java.lang.Class.getClassLoader() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 15, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newClassItem(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putByte(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.put12(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void sun.invoke.util.BytecodeDescriptor.unparseSig(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ByteVector.enlarge(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: static jint jdk.internal.org.objectweb.asm.Type.getArgumentsAndReturnSizes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putShort(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.MethodWriter.visitAnnotation(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.execute(jint, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.push(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.set(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.getInternalName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.addType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.InvokerBytecodeGenerator.refKindOpcode(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn(jint, jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newMethodItem(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newNameTypeItem(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.pop(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.push(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.internal.org.objectweb.asm.Frame.type(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Label.resolve(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getArgumentTypes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getType(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Item.isEqualTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Type.getDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 136, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putInt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putByteArray(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationWriter.visitEnd() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.DirectMethodHandle.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 270, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.basicTypeSignature() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.signatureType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 208, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.InvokerBytecodeGenerator.storeInsnOpcode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitTypeInsn(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitInsn(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.noSuccessor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMaxs(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Item.isEqualTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitFrame(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.MethodWriter.getSize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.ref.ReferenceQueue.poll() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 13, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 271, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.testAnyFlags(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 275, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 270, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 211, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 14321, OSR_BCI: 69 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.put11(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkSecurityManager(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getFieldType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.Enum.ordinal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newConstItem(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 274, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLdcInsn(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 276, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.genericMethodType(jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.returnType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 21, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 21, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 282, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint sun.invoke.util.Wrapper.hashPrim(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 22, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.SubList.checkForComodification() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.SubList$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.SubList$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint java.util.SubList.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.AbstractList$ListItr.nextIndex() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint java.util.SubList.access$200(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.findPrimitiveType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isInvocable() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.subList(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.SubList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.SubList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.listIterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.SubList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.SubList$1.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.genericMethodType(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 276, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 407, OSR_BCI: -1 :: virtual void java.util.ArrayList.rangeCheck(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 407, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.elementData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 281, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.changeReturnType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 282, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 318, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 319, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 279, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 286, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 95, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.execute(jint, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 96, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.execute(jint, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 286, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.canBeCalledVirtual(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 17, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getDeclaringClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 287, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jbyte java.lang.invoke.MemberName.getReferenceKind() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType$ConcurrentWeakInternSet.expungeStaleElements() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 23, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newMethodItem(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 23, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 290, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 286, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 291, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 25, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.push(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(jobject, jint, jobject, jobject, jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.invokers() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 146, OSR_BCI: -1 :: virtual jboolean java.util.SubList$1.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.methodType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 25, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLabel(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.testAllFlags(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 24, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.put11(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.form() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 29, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.noSuccessor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodType.checkPtype(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.compileToBytecode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.type() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterType(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isConstructor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Class.getComponentType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 132, OSR_BCI: -1 :: virtual jobject java.lang.Class.getComponentType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.argument(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.type() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 133, OSR_BCI: -1 :: virtual jobject java.lang.Class.getComponentType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.methodType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2396, OSR_BCI: 214 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.initIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$BasicType.basicTypeSlots() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint sun.invoke.util.Wrapper.stackSlots() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.index() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.ptypes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameterType(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forBasicType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jshort java.lang.invoke.LambdaForm$Name.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getDescriptor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.StringBuffer.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.append(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isResolved() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.erasedType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandle.spreadArrayChecks(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle.rebind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.makeReinvoker(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.getterFunction(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getFieldType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitFieldInsn(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getFieldType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.asCollectorType(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableRandomAccessList.subList(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.Collections$UnmodifiableCollection.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection.toArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 153, OSR_BCI: -1 :: virtual jboolean java.util.SubList$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.util.Arrays.rangeCheck(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.changeName(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.replaceNames(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 248, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asTypeCached(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitFieldInsn(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 56, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L.copyWith(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.editor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.collectArgumentArrayForm(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.LambdaFormEditor$Transform.inRange(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaFormEditor$Transform.packedBytes(jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.endEdit() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.clearDuplicatesAndNulls() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.internalMemberName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.in(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.util.Arrays.hashCode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isClassAccessible(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.arity() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterSlotCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodTypeForm.parameterSlotCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.isConvertibleTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.computeValueConversions(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.MethodHandleImpl.countNonNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedHashIterator.nextNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 19, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 19, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 24, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 30, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isClassAccessible(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put122(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newInteger(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.cast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DelegatingMethodHandle.rebind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.dropParameterTypes(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentForm(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.misc.Cleaner.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.misc.Cleaner.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.callSiteForm(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.time.ZoneOffset.getTotalSeconds() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.time.temporal.ChronoField.range() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.reflect.misc.ReflectUtil.isVMAnonymousClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 21, OSR_BCI: -1 :: static jobject java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(jobject, jint, jobject, jobject, jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.debug(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual jobject java.lang.Class.annotationData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.log(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.className(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.methodDescriptor(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$Access.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableCollection.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject java.util.Collections.unmodifiableList(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 38, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 263, OSR_BCI: -1 :: virtual jobject java.lang.Class.annotationData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ref.WeakReference.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 72, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 12, OSR_BCI: -1 :: virtual jobject java.lang.Class.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1286, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterType(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1285, OSR_BCI: -1 :: virtual jint java.util.Arrays$ArrayList.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jchar java.lang.invoke.LambdaForm$BasicType.basicTypeChar(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.toMethodDescriptorString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.WeakHashMap.eq(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 13, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.findForm(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalize(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.clone() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MemberName.access$002(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.erase() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isMethod() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ByteVector.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm.signatureArity(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.WeakHashMap.expungeStaleEntries() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jchar sun.invoke.util.Wrapper.basicTypeChar() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.addType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isPublic(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getSimpleBinaryName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnclosingClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getDeclaringClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ByteVector.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.returnType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.MethodTypeForm.pack(jint, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newNameType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.lookupClassOrNull() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.returnType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitStoreResult(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.intrinsicName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.Long.valueOf(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.extendWith(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldWriter.put(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isPrivate(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.member() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.Class.isAnonymousClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.Class.isLocalClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.Class.isLocalOrAnonymousClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isPrivate() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath.getResource(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1280, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isSubwordOrInt() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isIntegral() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isNumeric() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LL.make(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.methodType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.filterArgumentForm(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaFormEditor$Transform.packedBytes(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Property.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Property.setType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isProtected(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.preparedLambdaForm(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isCallerSensitive() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 33, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodType.canConvert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnumConstantsShared() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.isCallerSensitive(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.extendWith(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L3.make(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.changeParameterType(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.access$000() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint sun.invoke.util.VerifyAccess.getClassModifiers(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.DirectMethodHandle.maybeCompile(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaFormEditor$Transform.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.preparedLambdaForm(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle.internalMemberName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindIsMethod(jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindHasReceiver(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyHashMap$Element.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyHashMap.<init>(jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.PropertyHashMap$Element.match(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Property.getKey() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.getTable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon(jbyte, jobject, jobject, jboolean, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkMethod(jbyte, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.maybeBindCaller(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.setVarargs(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isVarargs() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.lastUseIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.MethodHandles.dropArgumentChecks(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.toArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.addArgumentForm(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodType.canConvert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1312, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.toArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.AbstractSequentialList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedList$ListItr.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList$ListItr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedList$ListItr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList$ListItr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 282, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.SubList$1.nextIndex() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 231, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.initInputFrame(jobject, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.listIterator(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isFinal(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 38, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 39, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.InvokerBytecodeGenerator.assertStaticType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getNameToken(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitReferenceCast(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.intrinsicName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.visitMethod(jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitEnd() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.useCount(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 468, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3I.copyWith(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.Invokers.exactInvoker() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.foldArgumentChecks(jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.AbstractList.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList.listIterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableList$1.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.foldArgumentsForm(jint, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.MethodWriter.startFrame(jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.endFrame() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L3I.make(jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.CallSiteDescriptorFactory.tokenizeName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.dynalink.support.AbstractCallSiteDescriptor.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getNameTokenCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void java.lang.ThreadLocal$ThreadLocalMap.set(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MemberName.getModifiers() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 217, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isTypeVisible(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodType.canConvert(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.lastUseIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.isParam() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaFormBuffer.ownedCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jobject java.lang.String.valueOf(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.signatureReturn(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Factory.typeSig(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.String.contains(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassVisitor.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.visit(jint, jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.values() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$Values.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap$ValueIterator.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newFieldItem(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Integer.stringSize(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.visitSource(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.InvokerBytecodeGenerator.maybeDump(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.<init>(jobject, jint, jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.arrays.ArrayIndex.fromString(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.findElement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.AnnotationWriter.getSize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationWriter.put(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.<init>(jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.classFilePrologue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitReturn(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.classFileEpilogue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.bogusMethod(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.InvokerBytecodeGenerator.getConstantPoolSize(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.methodType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.findProperty(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor.lambdaFormEditor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormEditor.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.Global.instance() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptFunction.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.ScriptFunctionImpl.init(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Property.getLocalType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.checkHistory(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Property.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.AccessorProperty.canChangeType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.debug(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isBuiltin() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Byte.valueOf(jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 281, OSR_BCI: -1 :: static jboolean java.lang.invoke.DirectMethodHandle.shouldBeInitialized(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindIsGetter(jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 347, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.useCount(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.<init>(jobject, jint, jobject, jint, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm.fixResult(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.fixDebugName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isInvocable() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getPrototype() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject java.lang.Integer.valueOf(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LL.copyWith(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getPrototype() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.<init>(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MemberName.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.Objects.hash(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.Byte.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Byte.hashCode(jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.resolveOrFail(jbyte, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.constructor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L.make(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1416233903.invokeStatic_L4_L(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LL.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isField() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1283, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getMap() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 425, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap$Element.getLink() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 274, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getProto() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.PropertyHashMap.binIndex(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.PropertyHashMap.replaceInList(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.castReference(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1718, OSR_BCI: 36 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.UnwarrantedOptimismException.isValid(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 16, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxInteger(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 42, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 288, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 288, OSR_BCI: -1 :: virtual jobject java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCodeBytes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 289, OSR_BCI: -1 :: virtual jobject java.lang.invoke.InvokerBytecodeGenerator.cpPatches(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 289, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.loadAndInitializeInvokerClass(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap$IdentityHashMapIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.IdentityHashMap$IdentityHashMapIterator.nextIndex() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$EntryIterator$Entry.<init>(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator$Entry.getValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator$Entry.getKey() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$KeyIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isMethodInvocationConvertible(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.TypeConverterFactory.applyConverters(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.containsKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkerServicesImpl.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 290, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.resolveInvokerMember(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.resolveOrFail(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkMethodName(jbyte, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodTypeForm.primitiveParameterCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 212, OSR_BCI: -1 :: static jobject sun.invoke.util.BytecodeDescriptor.unparseMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.<init>(jobject, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodTypeForm.primitiveParameterCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodTypeForm.primitiveParameterCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isGetter() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LIL.make(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Factory.makeFieldName(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.Arrays.fill(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LILL.make(jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_LIL3.<init>(jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L4.make(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.addSuccessor(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Edge.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitJumpInsn(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Label.getFirst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.internal.org.objectweb.asm.Frame.merge(jobject, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Frame.merge(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrameTypes(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrame() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 47, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.AccessorProperty.canChangeType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findProperty(jobject, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.invokerType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 251, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.arguments(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.internArguments() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.BytecodeDescriptor.unparse(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.rebind() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.BoundMethodHandle.tooComplex() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.expressionCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1280, OSR_BCI: -1 :: static jobject java.lang.invoke.MemberName.access$002(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jbyte java.lang.invoke.LambdaFormEditor$Transform.bval(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jbyte java.lang.invoke.LambdaFormEditor$Transform.bval(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaFormEditor$Transform.packedBytes(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 233, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandles$Lookup.restrictProtectedReceiver(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentType(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant(jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectMethodForConstant(jbyte, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectMethodNoSecurityManager(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.PropertyHashMap.threeQuarters(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandles$Lookup.canBeCached(jbyte, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.setCachedLambdaForm(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 275, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.bindArgumentL(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentL(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 279, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleImpl.isCompileConstant(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Property.getFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makePairwiseConvert(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makePairwiseConvert(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makePairwiseConvertByEditor(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asTypeUncached(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.bindTo(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.leadingReferenceParameter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.bindArgumentL(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.valueConversion(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.MethodHandles$Lookup.fixmods(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isMemberAccessible(jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.PropertyHashMap.findElement(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 666, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 327, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitReturnInsn(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$NamedFunction.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.FinalScriptFunctionData.isConstructor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap$Element.getProperty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findProperty(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 230, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 281, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.asNormalOriginal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.addProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 280, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 279, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.AccessorProperty.canChangeType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.ScriptFunctionImpl.setPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 285, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.isGlobal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 285, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.AccessorProperty.canChangeType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Property.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isStrictFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 286, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType$ConcurrentWeakInternSet.expungeStaleElements() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.log(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.getType(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jint sun.nio.cs.UTF_8$Decoder.decode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.generics.parser.SignatureParser.advance() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Enum.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.parser.Scanner.charAt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.reset(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Scanner.atEOF() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.skip(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.isEOL(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.skipComments() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.TokenStream.put(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.skipWhitespace(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.add(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.add(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 19, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.reset(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.isWhitespace(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierStart(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isJavaIdentifierStart(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierPart(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isJavaIdentifierPart(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.TokenLookup.lookupOperator(jchar, jchar, jchar, jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.scanIdentifierOrKeyword() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.Lexer.scanIdentifier() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.TokenLookup.lookupKeyword(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.canStartLiteral(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenStream.next(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierPart(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Lexer.convertDigit(jchar, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenType.getLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 283, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Lexer.isJSWhitespace(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 44, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.TokenLookup.lookupKeyword(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 590, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.skip(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.nextOrEOL() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.nextToken() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.parser.AbstractParser.getToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.Token.descType(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Expression.<init>(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Node.<init>(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.getValueOf(jlong, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source$URLData.array() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.IdentNode.<init>(jobject, jobject, jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Expression.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Node.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.statement(jboolean, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.leftHandSideExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.primaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getIdent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.valueOfIdent(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 342, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.nextToken() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.createIdentNode(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.assignmentExpression(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 258, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 214, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.AbstractParser.expect(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.appendStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContext.appendStatementToCurrentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.endOfLine() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 109, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.BinaryNode.isLogical(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.verifyStrictIdent(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayDeque.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayDeque.addFirst(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.pollFirst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setIsInitializedHere() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.getCurrentFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Namespace.uniqueName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 11, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.typeFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.RegularEnumSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.getFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.trimToSize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 323, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.leftHandSideExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 16, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.valueOfIdent(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jlong, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.EnumSet.noneOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 12, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.TokenType.getKind() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.detectSpecialProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 21, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.add(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LexicalContextNode$Acceptor.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ExpressionStatement.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setArgs(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setEvalArgs(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterLiteralNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveLiteralNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setStatements(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlags(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setBody(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setState(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlags(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveVarNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterAccessNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setBase(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.fine(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase.apply(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.visitor.NodeVisitor.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockLexicalContext.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.tokenType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 222, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.replaceInLexicalContext(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 87, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jobject, jint, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.replace(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockLexicalContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.peek() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.addStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 14, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 27, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 27, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIdentNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 27, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIdentNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.appendStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 59, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getCurrentFunction() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isProgram() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 19, OSR_BCI: -1 :: virtual void java.util.HashMap.putMapEntries(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 228, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.replace(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.listIterator(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$ListItr.hasPrevious() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.ArrayDeque.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.FunctionNode.<init>(jobject, jlong, jobject, jint, jobject, jobject, jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIfNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.checkEval(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getArgs() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 21, OSR_BCI: -1 :: virtual void java.util.HashMap.putMapEntries(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$ListItr.previous() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.FunctionNode.<init>(jobject, jlong, jobject, jint, jobject, jobject, jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 2, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase.end(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.logging.DebugLogger.quote(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 48, OSR_BCI: -1 :: static jint java.util.HashMap.tableSizeFor(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.RegularEnumSet$EnumSetIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.RegularEnumSet$EnumSetIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Long.numberOfTrailingZeros(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.typeFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 102, OSR_BCI: -1 :: virtual jboolean java.util.RegularEnumSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.field(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.ClassEmitter$Flag.getValue(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.RegularEnumSet.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$4$1.leaveLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 17, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.WeighNodes.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.findNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext$NodeIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext$NodeIterator.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 17, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 22, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeSet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.navigableKeySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$KeySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.TreeMap$PrivateEntryIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setIsInitializedHere() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Node.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 28, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIfNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 28, OSR_BCI: -1 :: virtual void java.util.HashMap.putMapEntries(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 239, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.replace(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 240, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.replace(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 28, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext.isFunctionBody() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getParentBlock() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 29, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Node.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ProgramPoints.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isInternal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.setProgramPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.canBeOptimistic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Node.isTokenType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.CallNode.<init>(jobject, jobject, jobject, jint, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 275, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getWidestOperationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getMostOptimisticType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 13, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.canBeOptimistic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getTypeUncached() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.start(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 292, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.findNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getBlocks() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setNeedsSlot(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.defineSymbol(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.findSymbol(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getAncestorBlocks(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.shouldTrace() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.needsArguments() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols$1.enterDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 35, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols$1.leaveVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedEntryIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 13, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getBlocks() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext.setFlag(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isBlockScoped() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.nameIsUsed(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.end(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isInternal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getAllNodes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.newNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext.setBlockNeedsScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.defineVarIdent(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesScopeSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isParam() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.needsCallee() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 40, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase.end(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths$1.enterDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.FindScopeDepths.findBodyBlock(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.FindScopeDepths.findInternalDepth(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.FindScopeDepths.definedInBlock(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.FunctionNode.getId() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Compiler.isOnDemandCompilation() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap.removeNode(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.needsScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.HashMap.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1314, OSR_BCI: 9 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 258, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.tagNeverOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isAssignment() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isBytecodeLocal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.hasSlot() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isSelfModifying() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.Integer.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getLocalVariableType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Symbol.setHasSlotFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isBoolean() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isInteger() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedValueIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.ArrayDeque.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.onAssignment(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.toLvarType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.joinOnLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.remove(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setOperands(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 66, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.widest(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isObject() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpressions(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.toLvarType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BaseNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.values() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Symbol.slotCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.enterDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ReturnNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isComparison() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getArgs() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 15, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getLocalVariableType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.util.IdentityHashMap.maskNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterReturnNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveReturnNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getSymbol() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jobject java.util.Collections$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createConversion(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap$Node.getKey() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap$Node.getValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getInternalType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$SynchronizedMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.typeFor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Hashtable.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 11, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 66, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.fieldType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.pushType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.typeFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.peekType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.peek(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.beginMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.load(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invoke(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invoke(jint, jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodArguments(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.endMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.checkPackageAccess(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 52, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.Lexer.scanIdentifier() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.TokenStream.isFull() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 13, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.endOfLine() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 316, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1047, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.elementData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 317, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 11, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Namespace.uniqueName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getScriptFunctionData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jlong, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void java.util.ArrayList.add(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.NameCodec.encode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.compile(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.checkEval(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.checkEval(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isBuiltin() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants.symbolName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setLHS(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setRHS(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 66, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.setProgramPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 67, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.setProgramPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getMostOptimisticType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 21, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getWidestOperationType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1340, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getScriptFunctionData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 37, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesSymbol(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ExpressionStatement.setExpression(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getExistingSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.PropertyMap.getFreeFieldSlot() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.unboxedFieldType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 55, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 56, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1723, OSR_BCI: 10 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isRestOf() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.BitSet.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.MethodEmitter.isReachable() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setFirstSlot(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.defineBlockLocalVariable(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.defineLocalVariable(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.BitSet.clear(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.util.BitSet.checkRange(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.breakLabel(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.joinFrom(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.set(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.initializeMethodParameter(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.onLocalStore(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.invalidateLocalLoadsOnStack(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getCompilerConstantSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 263, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.addSuccessor(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Symbol.getSlot(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$SubList$1.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.endMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 701, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.addNoClone(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.ldc(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invokestatic(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadCompilerConstant(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.useOptimisticTypes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.inSplitNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.IntDeque.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.IntDeque.peek() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.explicitStore(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.ObjectType.store(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.store(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.hasSlotFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isEquivalentTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getCallSiteFlags() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.FunctionNode.getCallSiteFlags() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isFastScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.convert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newInteger(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.enterStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.lineNumber(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLineNumber(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpressionUnbounded(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpression(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpression(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.within(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getScopeCallSiteFlags(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadFastScopeProto(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getScopeProtoDepth(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.FindScopeDepths.findScopesToStart(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitInvokeDynamicInsn(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newInvokeDynamicItem(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newHandleItem(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.storeStack(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadAndDiscard(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.checkAssignTarget(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.store() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$1.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpressionAsType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.maybeNew(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.access$6300(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isContinuationEntryPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.access$8400(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isCurrentContinuationEntryPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpression(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadIdent(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$LoadScopeVar.loadStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$LoadFastScopeVar.getProto() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 151, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.needsScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$LoadScopeVar.consumeStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isCompileTimePropertyName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.dynamicGet(jobject, jint, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicGet(jobject, jobject, jint, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.getProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadLiteral(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.ldc(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.types.Type.weight() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.storeNonDiscard() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$2.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.storeIdentWithCatchConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.store(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isContinuationEntryPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getScopeProtoDepth(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.loadArgs(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getDynamicSignature(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext$1.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.getUsedSlotsWithLiveTemporaries() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadCompilerConstant(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.subList(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.util.ArrayList.subListRangeCheck(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList.<init>(jobject, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.ArrayList$SubList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$SubList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.getTypeForSlotDescriptor(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList$ListItr.set(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.convert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 13, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isGlobal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isCompileTimePropertyName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.dynamicGet(jobject, jint, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getWidestLiveLocals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.getLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.markSymbolBoundariesInLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.markAsOptimisticCatchHandler(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.undefineLocalVariables(jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.peekFirst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 14, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext$1.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dup() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dup(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.dup(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._return(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.ldc(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 14, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicGet(jobject, jobject, jint, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 23, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newInvokeDynamicItem(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$000(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 14, OSR_BCI: -1 :: static void java.util.ArrayList.subListRangeCheck(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getCurrentBlockLabelNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 147, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.endLocalValueDef(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.closeLocalVariable(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.Collections$ReverseComparator.compare(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.Character.isUpperCase(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator.countSymbolsInLvarTypeDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.undefineLocalVariables(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ArrayType.getElementType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.commonPrefix(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicArrayPopulatorCall(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._goto(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.jump(jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.generateUnwarrantedOptimismExceptionHandlers(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 17, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMaxs(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.getMergedType(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrame() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrameTypes(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.load(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ArrayType.aload(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invokevirtual(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FunctionSignature.<init>(jboolean, jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isMethodInvocationConvertible(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.withConstraint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 291, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.create(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 40, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.findBoundCallerClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectMethod(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.explicitInstanceOfCheck(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 124, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaFormBuffer.indexOf(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isConvertibleWithoutLoss(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.linker.LinkerCallSite.relink(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.LinkerCallSite.getDebuggingRelink(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedList.addLast(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 427, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.editor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LILL.copyWith(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LIL3.make(jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LIL3.copyWith(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 12, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrameTypes(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 13, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrameTypes(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.MutableCallSite.syncAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint sun.invoke.util.ValueConversions.unboxInteger(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.getCallSiteTarget(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isConstructor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 125, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 650, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterList() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 227, OSR_BCI: -1 :: virtual void java.lang.ref.Reference.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.Math.max(jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.skipEOL(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierStart(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 327, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 292, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.primaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 328, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 329, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.removeFirst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 22, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 330, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 356, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.leftHandSideExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeAccess(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenType.getPrecedence() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.getType(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Node.getFinish() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.TokenType.isOperator(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.expectValue(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Node.getStart() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 289, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getValue(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Token.descPosition(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.AbstractParser.isNonStrictModeIdent() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenStream.index(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putIfAbsent(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.AbstractParser.expectDontAdvance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Expression.<init>(jlong, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Node.<init>(jlong, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.TokenType.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5390, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierPart(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContextBaseNode.getStatements() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterJoinPredecessorExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterTernaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.lhs() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 640, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.setExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jdouble jdk.nashorn.internal.runtime.JSType.toNumber(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.doubleToInt32(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 11, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$NullLiteralNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 17, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIndexNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIndexNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterForNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveForNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants$BinaryNodeConstantEvaluator.reduceOneLiteral() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockStatement.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBlockStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveTernaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.Collections$SingletonList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LoopNode.<init>(jobject, jobject, jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.getBreakLabel() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveUnaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlag(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isAlwaysTrue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlag(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Statement.isTerminal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterNEW(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ExpressionStatement.getExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 513, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.WeighNodes.enterLiteralNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlag(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlag(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2073, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2073, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.setExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2073, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIdentNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.Collections$EmptyList.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.SplitIntoFunctions.appendStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 394, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.setProgramPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 395, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.setProgramPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.ir.Node.getToken() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 396, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.setProgramPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Long.hashCode(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.canBeOptimistic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.Enum.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 68, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.UnaryNode.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isPropertyName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.Arrays$ArrayList.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.Arrays$ArrayList.indexOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getWidestOperationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.UnaryNode.isAssignment() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.IntDeque.getAndIncrement() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 271, OSR_BCI: -1 :: virtual jobject java.util.HashMap.getNode(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1029, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BaseNode.isFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 242, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 387, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Statement.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BaseNode.canBeOptimistic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 895, OSR_BCI: 151 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 35, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 554, OSR_BCI: -1 :: virtual jobject java.util.HashMap.getNode(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BaseNode.<init>(jobject, jobject, jboolean, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$1.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getBlocks(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isInitializedHere() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 67, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext$NodeIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isConst() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isLet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 478, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 479, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterRuntimeNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getCurrentBlock() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.getFlag(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.info(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.clone() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.end(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isFunctionSelf() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.maybeForceScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getBody() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setTest(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.increaseUseCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setPass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setFail(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isThis() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2048, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ReturnNode.setExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 20, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Namespace.uniqueName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2048, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2048, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setBase(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1085, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2048, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveAccessNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.isDynamicScopeBoundary(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 277, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveOptimistic(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.IdentNode.getProgramPoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.BitSet.set(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 891, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 892, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.ParserContextBaseNode.getFlags() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2539, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2550, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2518, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setBase(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.AccessNode.<init>(jobject, jobject, jobject, jboolean, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 391, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getUnionTypes(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$JumpTarget.addOrigin(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 12, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.joinOnLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.assignSlots(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.types.Type.getSlots() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.printSymbols(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 19, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 15, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicGet(jobject, jobject, jint, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 929, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 269, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.undefineLocalVariables(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2585, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.beforeJoinPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.markLocalLoad(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.emitBlockBreakLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 76, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.getByteCodeSymbolNames(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 14, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrameTypes(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 255, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FunctionSignature.<init>(jboolean, jboolean, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.getTypeClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2060, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 930, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.BinaryNode.getProgramPoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 15, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getScriptFunctionData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 931, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 297, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.skipWhitespace(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Symbol.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getScriptFunctionData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1086, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.util.HashMap.remove(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadLiteral(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.ldc(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.getDescriptor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BaseNode.getBase() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.BaseNode.getProgramPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1281, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.peekFirst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterUnaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.BitSet.expandTo(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 46, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.tagNeverOptimistic(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.CallNode.getProgramPoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 13, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.widestLvarType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$LvarType.access$400(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 640, OSR_BCI: -1 :: virtual void java.util.AbstractMap.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.IdentityHashMap.nextKeyIndex(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isLong() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isNumber() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$LvarType.access$100(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.rhs() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$TypeHolderExpression.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1739, OSR_BCI: 10 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 391, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap$KeySet.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 117, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 307, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createConversion(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.pushExpressionType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1322, OSR_BCI: 9 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.retainAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.containsMapping(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2274, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3605, OSR_BCI: 18 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1330, OSR_BCI: 9 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.access$1100(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 17, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 14, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 296, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 66, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 388, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getLocalVariableTypeOrNull(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap.closeDeletion(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.cloneMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.assertTypeStackIsEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.access$1000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.symbolIsUsed(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.symbolIsUsed(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 188, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1373, OSR_BCI: 90 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setIdentifierLvarType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2389, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.util.AbstractMap.clone() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 50, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getScriptFunctionData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.ldc(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.RegularEnumSet.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.EnumSet.typeCheck(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Timing.isEnabled() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptRuntime.apply(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.invoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 298, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.skipWhitespace(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 712, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 713, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Statement.<init>(jint, jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 297, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getLogger() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getStatements() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isUnknown() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1176, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.util.HashMap.comparableClassFor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.createSymbol(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.putSymbol(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.util.AbstractSet.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 276, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.symbolNeedsToBeScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 91, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.tagNeverOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 458, OSR_BCI: -1 :: virtual void java.util.BitSet.set(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 287, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.assignSlots(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getInternalName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getInternalName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.printSymbols(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.beforeJoinPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 268, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.store(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadLiteral(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.narrowerThan(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.getTopLocalLoad() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.emitBlockBreakLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.getMergedType(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassNotFoundException.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ReflectiveOperationException.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Exception.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Throwable.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L.fieldCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.convertThisObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleImpl.profileBoolean(jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Math.addExact(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandleImpl$CountingWrapper.maybeStopCounting(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList.listIterator(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.hasDualFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.checkCustomized(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.SubList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.maybeCustomize(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 126, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.matchesCallSite(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.newIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.Invokers.cachedInvoker(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 236, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Factory.makeSignature(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 237, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 238, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2731, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.Integer.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 395, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.checkExactType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction.<init>(jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.checkUndeclared() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FinalScriptFunctionData.addInvoker(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.listToArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptFunctionData.setArity(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 75, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$JumpTarget.addOrigin(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 208, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.entrySet() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isNumeric() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1211, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 516, OSR_BCI: -1 :: virtual void java.util.BitSet.set(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.printSymbols(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.isCurrentDiscard(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.getExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$11$1.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 20, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 35, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.ldc(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Handler.remove(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getMethodType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$WrappedMember.getTarget() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1152, OSR_BCI: -1 :: virtual jobject java.lang.ref.Reference.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 396, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 397, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 529, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 530, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 531, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression(jobject, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.ParserContextBaseNode.getFlag(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.lang.String.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.parser.TokenStream.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.ParserContextBaseNode.setFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2732, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BinaryNode.<init>(jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1284, OSR_BCI: -1 :: static jint java.lang.Long.hashCode(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$TreeNode.find(jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableCollection.contains(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.Enum.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.logging.DebugLogger.isEnabled() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isFunctionDeclaration() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 200, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.tagNeverOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 201, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.tagNeverOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 202, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.tagNeverOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 203, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.tagNeverOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 204, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.tagNeverOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 214, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 284, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getUnionTypes(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isLogical() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.needsParentScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 295, OSR_BCI: -1 :: static jobject java.lang.ClassLoader.getClassLoader(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 286, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.store(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.lineNumber(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants.type() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.widerThan(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 517, OSR_BCI: -1 :: virtual void java.util.BitSet.set(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.getProperty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getOutermostFunction() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.lineNumber(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.coerceStackTop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 36, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.ldc(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$Call.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ReplaceCompileUnits.leaveLiteralNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayDeque.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getContext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.Integer.intValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.generic(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.ClassValue$ClassValueMap.loadFromCache(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.MethodEmitter.getStackSize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.narrowest(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isCategory2() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Handler.remove(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.getParameterTypes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.insertParameterTypes(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArgumentsChecks(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6404, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeConverterFactory.canAutoConvert(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getFlags(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.getterFunctions() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 398, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.misc.SharedSecrets.getJavaLangAccess() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.ParserContextFunctionNode.isProgram() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextBaseNode.appendStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenStream.last() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 643, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Parser.isArguments(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getIdentifierName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.hideDefaultName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextBaseNode.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockLexicalContext.popStatements() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2050, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setStatements(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveAccessNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.binaryNodeWeight(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.HashMap$TreeNode.tieBreakOrder(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$TreeNode.getTreeNode(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveAccessNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setProgramPoint(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setProgramPoint(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.util.HashSet.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterPropertyNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.setKey(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.setValue(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.setGetter(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.setSetter(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 220, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1541, OSR_BCI: 90 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isOptimisticUndecidedType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Property.getSlot() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Class.forName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newConst(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 352, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.Collections$EmptyMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 353, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getScriptEnvironment() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.popDiscardIfCurrent(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.inDynamicScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2048, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlags(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Handle.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newHandle(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getClassName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.findStatic(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.ensureUniqueLabels(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getConstantData() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.getCompilerConstantType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.typeDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 363, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlags(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label.getLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug_label(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.reflect.Field.getModifiers() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getOwner() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Parser.useBlockScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.ParserContextFunctionNode.getId() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContextFunctionNode.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BaseNode.<init>(jlong, jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.System$2.getEnumConstantsShared(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.IdentNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.verifyAssignment(jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MutableCallSite.getTarget() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leavePropertyNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isVarArg() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.Collections$1.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpressionOnEmptyStack(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.access$700(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.isWithBoundary(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.checkTemporalDeadZone(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isDead() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.fixParamStack(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodReturnType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.notNarrowerThan(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.inDynamicContext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter.getUnitClassName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2529, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setStatements(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getSource() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.IntDeque.push(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.prologue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store$1.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$14.evaluate() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.epilogue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store$2.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.isOptimistic(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Expression.getWidestOperationType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator$Store.access$7600(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator$Store.access$7500(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store.isSelfModifying() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: static jint java.util.BitSet.wordIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Enum.getDeclaringClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.EnumSet.getUniverse(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.dropArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.AbstractRelinkableCallSite.getDescriptor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.invoke.util.Wrapper.primitiveType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.foldArguments(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isFlag(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getSetter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.AccessorProperty.needsInvalidator(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Property.setBuiltinSwitchPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LI.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.exactInvoker(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint sun.invoke.util.Wrapper.hashWrap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.CallSite.type() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.findWrapperType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.invoke.util.Wrapper.convert(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.invoke.util.Wrapper.convert(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.invoke.util.Wrapper.wrapperType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forceType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$AsVarargsCollector.getTarget() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getPrototype() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.bindArgumentI(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentI(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L3I.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.lang.Boolean.booleanValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 730, OSR_BCI: -1 :: static jboolean java.util.Objects.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/589446616.invokeStatic_L5_L(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getGlobalConstants() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1201, OSR_BCI: -1 :: virtual jobject java.lang.String.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkRequestImpl.getCallSiteDescriptor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.util.WeakHashMap.maskNull(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.util.WeakHashMap.hash(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 279, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArgumentPrimitive(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 227, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.insertArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6404, OSR_BCI: -1 :: static void java.lang.invoke.MethodType.checkPtype(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jint java.util.WeakHashMap.indexFor(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LILL.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.profile(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeBlockInliningWrapper(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$2.apply(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$2.apply(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleImpl$CountingWrapper.<init>(jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleImpl$CountingWrapper.<init>(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.DelegatingMethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jchar java.net.URI$Parser.charAt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 743, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 714, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 744, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContextFunctionNode.getEndParserState() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.TokenStream.commit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 314, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.JoinPredecessorExpression.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>(jint, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 107, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.lexify() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.createParserContextFunctionNode(jobject, jlong, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.createFunctionNode(jobject, jlong, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1150, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7451, OSR_BCI: -1 :: virtual void java.util.ArrayList.rangeCheck(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenStream.next(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 640, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Parser.isArguments(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.newBlock() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextBlockNode.<init>(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.ReturnNode.isTerminal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.restoreBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jlong, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 311, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.parser.Token.recast(jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.digit(jchar, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.digit(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.digit(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContextExpression.<init>(jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.EnumSet.of(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContextFunctionNode.getKind() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5234, OSR_BCI: -1 :: virtual void java.util.ArrayList.ensureCapacityInternal(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Statement.hasTerminalFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jint, jlong, jint, jint, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Token.descLength(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.ReturnNode.<init>(jint, jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.ExpressionStatement.<init>(jint, jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.expressionStatement() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$PrimitiveLiteralNode.<init>(jlong, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$PrimitiveLiteralNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6345, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer$State.<init>(jint, jint, jint, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner$State.<init>(jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source.data() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getLiteral() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextFunctionNode.setLastToken(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jlong java.lang.Long.parseLong(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.formalParameterList() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.formalParameterList(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.functionBody(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.ParserContextFunctionNode.isStrict() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7470, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierStart(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 745, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.AccessNode.<init>(jlong, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Statement.hasGoto() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.T(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 276, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextFunctionNode.<init>(jlong, jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 275, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.FunctionNode.<init>(jobject, jint, jlong, jint, jlong, jlong, jobject, jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 276, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.printAST(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.returnStatement() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 221, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.JoinPredecessorExpression.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.getLastStatement() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.getDirective(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Collections.singletonList(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.isEscapeCharacter(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.saveState() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner$State.setLimit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 200, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.scanNumber() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 283, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.scanString(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setIsDeclaredHere() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isDeclaredHere() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.variableStatement(jobject, jboolean, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.statement() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.getStatement() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.getFlag(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 248, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$NumberLiteralNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1032, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.ParserContextBaseNode.setFlag(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jint, jlong, jint, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.Lexer.valueOf(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.argumentList() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.Parser.optimizeList(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 335, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.sourceElements(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 334, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.addFunctionDeclarations(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 296, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source.getString(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.variableStatement(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.statementList() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.ParserContext.access$100(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5374, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.isTerminal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.UnaryNode.<init>(jlong, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 8335, OSR_BCI: 0 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 5505, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Token.descPosition(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.CallNode.<init>(jint, jlong, jint, jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.valueOfString(jint, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.UnaryNode.<init>(jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.newExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.AbstractParser.expectDontAdvance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.AbstractParser.isNonStrictModeIdent() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 247, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.Lexer.hexSequence(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5386, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.TokenType.isOperator(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putIfAbsent(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 307, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LiteralNode.newInstance(jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 308, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$NullLiteralNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 308, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$NullLiteralNode.<init>(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jboolean java.lang.ref.Reference.tryHandlePending(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6076, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6077, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6078, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6079, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6080, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6081, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6082, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 383, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LiteralNode$NumberLiteralNode.numberGetType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.getBlock(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6083, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 688, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.primaryExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.detectSpecialFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.functionExpression(jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.ifStatement() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.IfNode.<init>(jint, jlong, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 12463, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 12464, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 179, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Parser.isValidIdentifier(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6084, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextBaseNode.prependStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 300, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContext.prependStatementToCurrentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 76, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2530, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setStatements(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2733, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2734, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2735, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.setInit(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.setModify(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants$BinaryNodeConstantEvaluator.eval() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants$BinaryNodeConstantEvaluator.reduceTwoLiterals() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2049, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1664, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.getTest() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setLHS(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setBase(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2050, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveLiteralNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FoldConstants$ConstantEvaluator.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.leaveUnaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FoldConstants$UnaryNodeConstantEvaluator.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants$UnaryNodeConstantEvaluator.eval() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.leaveIfNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6416, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setRHS(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2531, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setStatements(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower$1.popStatements() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower$1.afterSetStatements(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList$1.hasPrevious() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setIsTerminal(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.WhileNode.isDoWhile() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 17, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 14, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterRuntimeNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IfNode.isTerminal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList$1.previous() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveExpressionStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveVarNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isFunction() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 60416, OSR_BCI: 10 :: virtual jint jdk.nashorn.internal.runtime.Source.getLine(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Source.getLine(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.checkEval(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveReturnNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveASSIGN(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 74, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.checkEval(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 75, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.checkEval(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2050, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockLexicalContext.pop(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.removeFirst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2049, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.appendStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2304, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.appendStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2305, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.appendStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2306, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.appendStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2307, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.appendStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CaseNode.getTest() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Statement.getLineNumber() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setIsFunction() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setIsFunction() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setIsFunction() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5416, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.checkForComodification() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.getIndex() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CaseNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterCaseNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CaseNode.setTest(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CaseNode.setBody(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.BlockLexicalContext.lastStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveNEW(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2049, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveCallNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Lower.markerFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.getValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.setTest(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveIfNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.getTest() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.setTest(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.setTrueExpression(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.setFalseExpression(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.ForNode.isForIn() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.WhileNode.getBody() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveIndexNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Lower.getConstantPropertyName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterADD(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveADD(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 428, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.initialize(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ExpressionStatement.setExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2048, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveVarNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlag(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$4$1.leaveLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 18, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 19, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 47, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.UnaryNode.isAssignment() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ObjectNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1313, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.initialize(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockStatement.setBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.WhileNode.setBody(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.WhileNode.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.WhileNode.setTest(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterWhileNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.WeighNodes.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveVarNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveASSIGN(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveCallNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveNEW(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1345, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveCallNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1408, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveNEW(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveExpressionStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Splitter.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.codegen.WeighNodes.weigh(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.WeighNodes.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.codegen.WeighNodes.weigh(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Splitter.leaveLiteralNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5406, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlag(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1391, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveVarNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leavePropertyNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Splitter$2.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getParentFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Splitter.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Splitter.access$100(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.WeighNodes.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2048, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterASSIGN(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 176, OSR_BCI: -1 :: virtual jint java.util.ArrayList.indexOf(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setCompileUnit(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.setBody(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterObjectNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.keyIterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.getFirstEntry() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeMap$KeyIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 239, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.findUnit(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompileUnit.addWeight(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.TreeMap.setColor(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.finest(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Splitter.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Splitter.split(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Splitter.directChildren(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Splitter$2.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Splitter$1.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Splitter$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.contains(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Splitter$1.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Splitter.findUnit(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveWhileNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveReturnNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBlockStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveCaseNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterEQ_STRICT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BreakNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 43290, OSR_BCI: 36 :: virtual jint java.util.ArrayList.indexOf(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.RegularEnumSet$EnumSetIterator.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.compareWeight(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1291, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveAccessNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBreakNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2048, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIfNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode.setArgs(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveRuntimeNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveIfNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveIndexNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.getCurrentFunctionState() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.leaveBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions$1.afterSetStatements(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.SplitIntoFunctions.inSplitNode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.getInit() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.SplitIntoFunctions.enterVarNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.SplitIntoFunctions.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.SplitIntoFunctions$FunctionState.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.addAll(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 304, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.prependStatements(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 228, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext.isSplitBody() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.leaveReturnNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 335, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isAnonymousFunctionDeclaration() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 334, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isAnonymous() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 285, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.setInit(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 277, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.ForNode.<init>(jobject, jobject, jobject, jobject, jobject, jint, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ProgramPoints.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 283, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.UnaryNode.isAssignment() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2152, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BinaryNode.<init>(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.IntDeque.pop() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1280, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.IntDeque.getAndIncrement() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.CallNode.canBeOptimistic() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ProgramPoints.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setProgramPoint(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setProgramPoint(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContextStatement.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$NumberLiteralNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.widestReturnType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$Entry.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getMostPessimisticType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.BinaryNode.isString(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 244, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.CaseNode.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.BinaryNode.booleanToInt(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 254, OSR_BCI: -1 :: virtual jobject java.util.HashMap$TreeNode.putTreeVal(jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setProgramPoint(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setProgramPoint(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getMostOptimisticType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveUnaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.UnaryNode.canBeOptimistic() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isPropertyName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.newTreeNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 584, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.IndexNode.<init>(jobject, jobject, jobject, jboolean, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveIndexNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setProgramPoint(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setProgramPoint(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: static jobject java.util.Collections.emptyList() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ReturnNode.setExpression(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AstSerializer$1.leaveBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ThrowNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ThrowNode.setExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 895, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBreakNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterThrowNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.drain() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectOutputStream$HandleTable.lookup(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.lookup(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitByte(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ByteVectorImpl.add(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitShort(jshort) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: static jint sun.reflect.UTF8.utf8Length(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: static jobject sun.reflect.UTF8.encode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jshort sun.reflect.ClassFileAssembler.cpi() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 515, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitByte(jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.Class.reflectionData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4575, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3840, OSR_BCI: 19 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolUTF8(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint sun.reflect.ByteVectorImpl.getLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jbyte sun.reflect.ByteVectorImpl.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamField.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeByte(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual jlong java.io.ObjectOutputStream$BlockDataOutputStream.getUTFLength(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeBytes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectOutputStream$HandleTable.assign(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$HandleTable.insert(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.DeflaterOutputStream.write(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.Deflater.setInput(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.DeflaterOutputStream.deflate() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.zip.Deflater.deflate(jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.Deflater.ensureOpen() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeClassDesc(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.io.Bits.putLong(jobject, jint, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.forClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.io.Bits.putInt(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.defaultWriteFields(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflector.getPrimFieldValues(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.write(jobject, jint, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeObject0(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 287, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass$WeakClassKey.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.reflect.ReflectionFactory.langReflectAccess() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 340, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeOrdinaryObject(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeInt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeSerialData(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.reflect.AccessibleObject.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: virtual void java.util.zip.DeflaterOutputStream.deflate() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.Class.checkMemberAccess(jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.Class.checkInitted() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamField.isPrimitive() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jshort sun.reflect.AccessorGenerator.sub(jshort, jshort) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.setStack(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject java.lang.Class.searchMethods(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamField.getField() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Constructor.getDeclaringClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 796, OSR_BCI: 8 :: virtual void java.io.ObjectOutputStream.writeSerialData(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.io.ObjectOutputStream$BlockDataOutputStream.setBlockDataMode(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.zip.Deflater.finished() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.zip.Deflater.needsInput() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.zip.Deflater.deflate(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectOutputStream$ReplaceTable.lookup(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.hasWriteObjectMethod() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.checkDefaultSerialize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.getPrimFieldValues(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeNull() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1282, OSR_BCI: -1 :: virtual jboolean java.util.zip.Deflater.finished() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.io.ObjectStreamClass.processQueue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.hasWriteReplaceMethod() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeHandle(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.checkSerialize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.getClassDataLayout() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.getFields(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.getObjFieldValues(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflector.getObjFieldValues(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeShort(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.io.Bits.putShort(jobject, jint, jshort) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeUTF(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeString(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeObject(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5412, OSR_BCI: -1 :: virtual jboolean java.util.zip.Deflater.needsInput() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 947, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeSerialData(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolMethodref(jshort, jshort) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Throwable.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolNameAndType(jshort, jshort) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.StringJoiner.getChars(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.Class.privateGetDeclaredMethods(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1306, OSR_BCI: -1 :: virtual jint sun.reflect.ByteVectorImpl.getLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolClass(jshort) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint sun.reflect.ClassFileAssembler.getStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jshort sun.reflect.ClassFileAssembler.getLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.incStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.io.ObjectStreamField.getOffset() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 12, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.lookup(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 101, OSR_BCI: -1 :: virtual jint java.util.Properties$LineReader.readLine() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isBmpCodePoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1284, OSR_BCI: -1 :: static jboolean java.lang.Character.isSurrogate(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1090, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 516, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 516, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal$ThreadLocalMap.getEntry(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 219, OSR_BCI: -1 :: static void sun.misc.FDBigInteger.mult(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.misc.FDBigInteger.<init>(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.misc.FDBigInteger.trimLeadingZeros() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.misc.FDBigInteger.makeImmutable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.FDBigInteger.mult(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ExpiringCache.entryFor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Hashtable.put(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Hashtable.addEntry(jint, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Hashtable$Entry.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2306, OSR_BCI: -1 :: static jint java.lang.Character.toLowerCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 4352, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.getProperties(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.toUpperCaseEx(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toUpperCaseEx(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 250, OSR_BCI: -1 :: virtual jobject java.lang.String.toLowerCase(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.util.locale.BaseLocale.getLanguage() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.ReflectionFactory.copyField(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.ReflectAccess.copyField(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.copy() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.reflect.Field.<init>(jobject, jobject, jobject, jint, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Exception.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getDeclaredMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ReflectiveOperationException.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.reflect.Constructor.getModifiers() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 30, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.lookup(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jchar java.io.ObjectStreamField.getTypeCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jint java.util.zip.Deflater.deflate(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: virtual jobject java.io.ObjectOutputStream$ReplaceTable.lookup(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.io.SerialCallbackContext.getDesc() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.invoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.DelegatingMethodAccessorImpl.invoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeInt(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jboolean java.lang.Float.isNaN(jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.hasWriteObjectMethod() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.checkDefaultSerialize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5924, OSR_BCI: 8 :: virtual void java.io.ObjectOutputStream.writeSerialData(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.invokeWriteObject(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.defaultWriteObject() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.SerialCallbackContext.getObj() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.SerialCallbackContext.checkAndSetUsed() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeBlockHeader(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeHandle(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeNull() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.hasWriteReplaceMethod() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.io.Bits.putBoolean(jobject, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.writeObject(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.writeObject(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.HashMap.capacity() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.io.Bits.putFloat(jobject, jint, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Float.floatToIntBits(jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.internalWriteEntries(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.invokeWriteReplace(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.EnumSet.writeReplace() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.EnumSet$SerializationProxy.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.EnumSet.access$000() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.RegularEnumSet.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Long.bitCount(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeArray(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedMethodAccessor1.invoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedMethodAccessor2.invoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedMethodAccessor3.invoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.StringJoiner.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.StringJoiner.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.System$2.newStringUnsafe(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 117, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.append(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 317, OSR_BCI: -1 :: static jobject java.lang.Class.getReflectionFactory() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 358, OSR_BCI: -1 :: static jobject java.lang.Class.argumentTypesToString(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 360, OSR_BCI: -1 :: virtual void java.lang.NoSuchMethodException.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 31, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.lookup(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.opc_invokespecial(jshort, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitInt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 136, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass$Caches.access$200() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$WeakClassKey.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.ObjectStreamClass$WeakClassKey.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1438, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass$Caches.access$200() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 4376, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflector.getObjFieldValues(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 296, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isSplit() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CompilationPhase$6$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5391, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.setExpression(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeUTF(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeUTF(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeByte(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 934, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.checkSerialize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.getSuperDesc() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.reflect.Executable.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1968, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1284, OSR_BCI: -1 :: static jshort sun.reflect.AccessorGenerator.sub(jshort, jshort) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1946, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.lookup(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1947, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.lookup(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveThrowNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeUTFBody(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7680, OSR_BCI: -1 :: static jint java.lang.Math.min(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ByteArrayOutputStream.write(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.getPrimFieldValues(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getFunctionBody(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isBlockScoped() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.VarNode.getSymbolFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isLet() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isConst() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.AssignSymbols.access$100(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.setName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.start(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.isLocal(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.less(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 336, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getDefiningFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setIsScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getDefiningBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getExistingSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 926, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 14, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveUnaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.isUnparsedFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveASSIGN(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.initCompileConstant(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getParameters() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2049, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setState(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6016, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext$1.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$1.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isNamedFunctionExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1118, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.allVarsInScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.usesSelfSymbol() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.clear() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.clear() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.clearSymbols() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getBlocks(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1288, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.increaseUseCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setParameters(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.hasScopeBlock() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.compilerConstant(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.HashSet.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.enterFunctionBody() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.initFunctionWideVariables(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.initParameters(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.acceptDeclarations(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols$1.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.defineFunctionSelfSymbol(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11520, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext$1.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5386, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isConst() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7552, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext$NodeIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 310, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.applyTopFlags(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 312, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.finalizeParameters(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 315, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.createSyntheticInitializers(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 317, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.AssignSymbols.removeUnusedSlots(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 318, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setThisProperties(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 320, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.markProgramBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isLet() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getCurrentBlock() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5506, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isInitializedHere() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.clone() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.info(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.end(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isFunctionSelf() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 184, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.maybeForceScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 185, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesGlobalSymbol() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getFunctions() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 276, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 349, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1349, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeAccess(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 4045, OSR_BCI: 77 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1157, OSR_BCI: 150 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.enterBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5322, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isGlobal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 411, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FindScopeDepths.addExternalSymbol(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6554, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getKind() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10499, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$1.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getContext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptFunctionData.<init>(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.hasOptimisticApplyToCall() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Collections.emptyMap() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FindScopeDepths.leaveBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getAnnotation(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject com.sun.proxy.$Proxy1.name() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context.getLogger(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getLoggerName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptEnvironment.hasLogger(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.hasEval() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.FunctionNode.getLineNumber() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context.getLogger(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.HashMap.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getCodeInstaller() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getSource() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getIdent() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.FunctionNode.getFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.FindScopeDepths.isDynamicScopeBoundary(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.needsDynamicScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.FunctionNode.getThisProperties() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getEndParserState() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.smallMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FindScopeDepths.addInternalSymbols(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Context.useDualFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 415, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.parser.Token.toDesc(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getGlobal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.util.HashSet.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.FindScopeDepths.findGlobalBlock(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FindScopeDepths.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeRemoval(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FindScopeDepths$1.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashSet.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Collections.emptySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7710, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7711, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7712, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getContext(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7713, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 12813, OSR_BCI: 18 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7714, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7715, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7716, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7717, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getContextTrusted() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.parser.Token.withDelimiter(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 289, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isStrict() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.functionName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getDataFlags(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.usesThis() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.tokenFor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.ir.FunctionNode.getFirstToken() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.ir.FunctionNode.getLastToken() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.HashMap$KeySet.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.smallSet(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.createLogger() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.initLogger(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.isGlobalScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 310, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.<init>(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7718, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 12821, OSR_BCI: 18 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$ValueIterator.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.setParent(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5388, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setBase(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5388, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 12, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterUnaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getOptimisticType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeEvaluator.getOptimisticType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getInvalidatedProgramPointType(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeEvaluator.getEvaluatedType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setTest(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setFail(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 285, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeEvaluator.evaluateSafely(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.UnaryNode.getProgramPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BaseNode.getMostOptimisticType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7719, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 287, OSR_BCI: -1 :: virtual void java.util.BitSet.ensureCapacity(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.getObject() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getMostOptimisticType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.Collections$EmptyIterator.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Collections.emptyIterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$EmptySet.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$EmptyMap.values() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 18235, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3663, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.primaryExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1265210847.invokeStatic_LL_L(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.compareAndSetMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$LinkedHashIterator.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Expression.isSelfModifying() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getMostOptimisticType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.getTest() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterIfNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterIndexNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 15, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterUnaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$ArrayLiteralNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$ArrayLiteralNode.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap.init(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedValues.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$LinkedValueIterator.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 269, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.clone() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getSymbols() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.LinkedHashMap$LinkedValues.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 12, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.retainAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 92, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap$KeySet.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 245, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.widestLvarType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.access$900(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 135, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveBinaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedList.checkPositionIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList.isPositionIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 25, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.retainAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 253, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.widestLvarType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.Expression.isAlwaysTrue(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.containsMapping(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$IdentityHashMapIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$IdentityHashMapIterator.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ReturnNode.getExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.calculateReturnType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.jumpToCatchBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntrySet.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$EntryIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$EntryIterator.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8457, OSR_BCI: -1 :: static jobject java.util.IdentityHashMap.maskNull(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.node(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$SymbolConversions.hasConversion(jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 295, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.jumpToLabel(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 295, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getOrCreateJumpTarget(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.JoinPredecessorExpression.isAlwaysTrue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.doesNotContinueSequentially() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.isUndefinedIdent(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.BinaryNode.undefinedToNumber(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 267, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.jumpToLabel(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 238, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createJumpTarget(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.getBody() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.keySet() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterReturnNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5196, OSR_BCI: -1 :: static jint java.util.IdentityHashMap.nextKeyIndex(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBreakable(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterCallNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$SymbolConversions.recordConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.getPass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.getFail() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setReturnType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.visitParameters(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1283, OSR_BCI: -1 :: virtual jint java.util.LinkedHashMap$LinkedValues.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterJoinPredecessorExpression(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getEvalArgs() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.Expression.isAlwaysFalse(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 7424, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.ir.Node.getToken() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.BinaryNode.decideType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getEntryLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getLocalVariableTypeOrNull(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CaseNode.getBody() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.SwitchNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.SwitchNode.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.isBreakableWithoutLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JumpStatement.getLabelName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BreakableStatement.getBreakLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BreakableStatement.isBreakableWithoutLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.SwitchNode.getTag() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterSwitchNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$LvarType.values() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 319, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterUnaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Expression.isAlwaysTrue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 274, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$NullLiteralNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.UnaryNode.isSelfModifying() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.symbolIsConverted(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isAlwaysFalse() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.getTrueExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.getFalseExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterIfNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.processIfNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$KeySet.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$KeyIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$KeyIterator.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.IdentityHashMap$KeySet.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$BooleanLiteralNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode$Request.getReturnType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Expression.isAlwaysFalse() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.pushExpressionType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 153, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.getContinueLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterIndexNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.decideType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$SymbolConversions.calculateTypeLiveness(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.access$800(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createIsUndefined(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.virtualCallNoLookup(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$3.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.create(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptRuntime.apply(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.invoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.zip.Inflater.inflate(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.Inflater.ensureOpen() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$PeekInputStream.readFully(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$PeekInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.zip.InflaterInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.io.ObjectInputStream$BlockDataInputStream.setBlockDataMode(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.peek() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.zip.InflaterInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual jlong java.io.ObjectInputStream$BlockDataInputStream.readUTFSpan(jobject, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$PeekInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.readUnsignedShort() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream$BlockDataInputStream.readUTFBody(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$HandleTable.assign(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 290, OSR_BCI: -1 :: virtual void java.util.zip.Inflater.ensureOpen() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$HandleTable.finish(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readClassDesc(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong java.io.Bits.getLong(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$BlockDataInputStream.refill() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.readBlockHeader(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.io.ObjectStreamClass$FieldReflectorKey.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: static jint java.io.Bits.getInt(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream.defaultReadFields(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$BlockDataInputStream.readFully(jobject, jint, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.read(jobject, jint, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflector.setPrimFieldValues(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readHandle(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.readInt() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jlong java.lang.Long.longValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 639, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.findBootstrapClassOrNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream.readSerialData(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$HandleTable.markDependency(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.checkResolve(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 111, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readClassDesc(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflector.setObjFieldValues(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readObject() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong java.io.ObjectStreamClass.getSerialVersionUID() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamField.getSignature() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamField.isUnshared() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor11.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 16, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.read(jobject, jint, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.io.ObjectInputStream$BlockDataInputStream.getBlockDataMode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jbyte java.io.ObjectInputStream$BlockDataInputStream.readByte() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$PeekInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 44, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.readInt() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.io.ObjectStreamClass.getPrimDataSize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.io.ObjectStreamClass.getNumObjFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.hasWriteObjectData() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$PeekInputStream.peek() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jbyte java.io.ObjectInputStream$BlockDataInputStream.peekByte() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual void java.util.ArrayList.readObject(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.hasReadObjectMethod() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readObject0(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.setPrimFieldValues(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.isExternalizable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.getResolveException() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jshort java.io.Bits.getShort(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Constructor.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream$HandleTable.lookupException(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 292, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readNull() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 214, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readOrdinaryObject(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream$HandleTable.lookupObject(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.isInstantiable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.newInstance() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.setObjFieldValues(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.hasReadResolveMethod() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream$BlockDataInputStream.readUTF() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.Math.min(jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor10.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 308, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.currentBlockRemaining() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 319, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readString(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 12, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.readBlockHeader(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor8.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1408, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2020, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 263, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream.defaultReadObject() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getCompileUnit() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isFunctionDeclaration() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1166726978.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isVar() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MapTuple.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MapTuple.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.arrays.ArrayIndex.isValidArrayIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ObjectCreator.hasArguments() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setFieldIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.visitField(jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.getFieldName(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.EnumSet.of(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.field(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.FieldWriter.getSize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isPublic(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isVolatile(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 5274, OSR_BCI: -1 :: virtual jbyte java.lang.invoke.MemberName.getReferenceKind() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.DirectMethodHandle.ftypeKind(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.DirectMethodHandle.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.DirectMethodHandle.afIndex(jbyte, jboolean, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.resolveOrFail(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.<init>(jobject, jobject, jobject, jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectField(jbyte, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkField(jbyte, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.preparedFieldLambdaForm(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isVolatile() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.preparedFieldLambdaForm(jbyte, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.DirectMethodHandle$Accessor.<init>(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.DirectMethodHandle$Accessor.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 295, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectFieldCommon(jbyte, jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.AccessorProperty.access$000() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaFormEditor$Transform.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 346, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullReferenceConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1281, OSR_BCI: -1 :: virtual jint java.lang.invoke.MemberName.getModifiers() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.findGetter(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterSlotCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 309, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.methodType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindIsSetter(jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.getter(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.setter(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.findSetter(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isSetter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isProtected(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.lookupClassOrNull() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isResolved() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1282, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.AccessorProperty.access$000() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.ClassValue.match(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$Entry.value() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassValue$Entry.assertNotPromise() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MapTuple.getValueType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.initializeType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Symbol.getFieldIndex() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isFunctionDeclaration() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.<init>(jobject, jint, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.<init>(jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.initGetterSetter(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isParameter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.MapCreator.getPropertyFlags(jobject, jboolean, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.dynGetOperation(jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1281, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.markLocalLoad(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L3.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.dropArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.dropArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L3.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3.copyWith(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.AccessorProperty.bindTo(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.bindTo(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Property.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isSpill() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.cloneMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.checkForComodification() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.updateFreeSlots(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.immutableAdd(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.updateFlagsAndBoundaries(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Property.<init>(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.addPropertyNoHistory(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.addBoundProperty(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.addPropertyBind(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1296, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.PropertyHashMap.threeQuarters(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isLexicalBinding() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.insertName(jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.growNames(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.TypeConverterFactory.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.Bootstrap$2.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.access$000(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.unboxReturnType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isWrapperType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableMap.containsKey(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamField.setOffset(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 88, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$HandleTable.markDependency(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass$Caches.access$2500() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2034, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 454, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$HandleTable.markDependency(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedMethodAccessor4.invoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jbyte java.io.ObjectInputStream$BlockDataInputStream.readByte() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$PeekInputStream.read() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$PeekInputStream.peek() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readObject0(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8449, OSR_BCI: -1 :: virtual jbyte java.io.ObjectInputStream$BlockDataInputStream.peekByte() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream.readInt() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream.skipCustomData() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$BlockDataInputStream.skipBlockData() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.hasReadObjectMethod() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.DataInputStream.readInt() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor6.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.invokeReadObject(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5442, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.setPrimFieldValues(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream$HandleTable.lookupObject(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1280, OSR_BCI: -1 :: static jshort java.io.Bits.getShort(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream$HandleTable.lookupException(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$HandleTable.setObject(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.invokeReadResolve(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.io.Bits.getBoolean(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor4.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor5.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor12.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor13.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor19.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.readObject(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jfloat java.io.Bits.getFloat(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.reinitialize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.reinitialize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor22.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readArray(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.EnumSet$SerializationProxy.readResolve() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor28.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedMethodAccessor5.invoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedMethodAccessor6.invoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2046, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.net.URLClassLoader.findClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.net.URLClassLoader$1.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.net.URLClassLoader$1.run() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.net.URLClassLoader$1.run() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.String.concat(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.String.getChars(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor29.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$ClassDataSlot.<init>(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5206, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readOrdinaryObject(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Constructor.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ReplaceCompileUnits.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ReplaceCompileUnits.getExistingReplacement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$12$1.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.restoreFlags(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.hasNestedEval() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$12$1.getReplacement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ReplaceCompileUnits.leaveLiteralNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Collections.singletonIterator(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Collections$1.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableSet.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Collections.unmodifiableSet(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getExternalSymbolNames() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty$Accessors.getCached(jint, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.SpillProperty$Accessors.ensure(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SpillProperty$Accessors.getOrCreate(jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SpillProperty$Accessors.getInner(jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.TreeMap.leftOf(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.getKeyName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toString(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.getValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getExternalSymbolDepth(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1298, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1164, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.getTopLocalLoad() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 245, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getElementType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 248, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Type.getDimensions() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.ConstantData.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$2.invoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants.descriptor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getStatic(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.dynamicSet(jobject, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.dynSetOperation(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadConstants() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.skipFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.newFunctionObject(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.isLocalVariable(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.pushDiscard(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadConstantsAndIndex(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator$Store.access$7502(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitIntInsn(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.pop(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.storeFastScopeVar(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$8000(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterNEW(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadNEW(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.BitSet.nextSetBit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.getPropertyName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.dup(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$7.getValueType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 346, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toStringImpl(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CompilerConstants.slot() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1416233903.invokeStatic_L4_L(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5387, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.useDualFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getSymbolBoundaryCopy() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.BitSet.trimToSize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getLocalVariableTypesCopy() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.ObjectType.getBytecodeStackType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.initTransients(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Context$ContextCodeInstaller.isCompatibleWith(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 296, OSR_BCI: -1 :: virtual void java.util.TreeMap$PrivateEntryIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 21, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$PrivateEntryIterator.nextEntry() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1282, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.intrinsicName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getProperty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LIL.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.objects.Global.isGlobal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5393, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L.make(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.getInvocation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jbyte java.lang.invoke.LambdaFormEditor$Transform.bval(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaFormEditor$Transform.packedBytes(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.concurrent.atomic.AtomicReference.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentType(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 8460, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.constructor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl$Lazy.access$500() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asCollector(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandle.asCollectorChecks(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MutableCallSite.setTarget(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.checkTargetChange(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.setTargetNormal(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LI.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1938056729.invokeStatic_L3IL_L(jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getFunctionPrototype() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 238, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.filterArguments(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getPrototype() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LIL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1241276575.invokeStatic_L3ILL_L(jobject, jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/245672235.invokeStatic_L6_L(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentL(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.CallSite.maybeReBox(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandles.filterArgumentsCheckArity(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.filterArgument(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandles.filterArgumentChecks(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SetMethodCreator.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.misc.Cleaner.create(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants$Access.getSwitchPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives$CallSiteContext.make(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleNatives$CallSiteContext.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: static void java.lang.ThreadLocal$ThreadLocalMap.access$100(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context.getEnv() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isFlag(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual void java.lang.ThreadLocal.set(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.rebind() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3.copyWithExtendI(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/876563773.invokeStatic_L5I_L(jobject, jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.createRelinkAndInvokeMethod(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkRequestImpl.getReceiver() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.internal.dynalink.support.LinkRequestImpl.isCallSiteUnstable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.checkCache(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.replaceMethodsOrThis(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.linker.LinkerCallSite.getMaxChainLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.makePruneAndInvokeMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LIL3.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.speciesData_LLLL() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.guardWithTest(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithTest(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithTestForm(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1347870667.invokeStatic_L3I_L(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 368, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.filterArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.Guards.asType(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.Guards.getTestType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.linker.GuardedInvocation.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.concurrent.atomic.AtomicBoolean.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SetMethodCreator.access$100(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SetMethodCreator.access$200(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L4.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MutableCallSite.dynamicInvoker() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.CallSite.makeDynamicInvoker() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.createSetter(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.SwitchPoint.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MutableCallSite.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.cachedMethodHandle(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.FindProperty.isInherited() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.getGuard() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodHandles$Lookup.lookupModes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isBound() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.getException() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jint java.util.SubList$1.nextIndex() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.access$300(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.mayRetry() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1280, OSR_BCI: -1 :: virtual jobject java.lang.invoke.Invokers.cachedInvoker(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 313, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.SwitchPoint.hasBeenInvalidated() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 203, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.NameCodec.decode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.DirectMethodHandle.fieldOffset(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.checkBase(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.isScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.viewAsType(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.checkGenericType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5388, OSR_BCI: -1 :: virtual void java.util.AbstractList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: static jint java.lang.Integer.numberOfLeadingZeros(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.findProperty(jobject, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives.linkCallSite(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.CallSite.makeSite(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.CallSite.maybeReBoxElements(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MutableCallSite.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.CallSite.makeUninitializedCallSite(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.concurrent.atomic.AtomicReference.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/992768706.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.bootstrap(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.LinkerCallSite.newLinkerCallSite(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isProfile() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isTrace() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.linker.LinkerCallSite.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/913190639.invokeStatic_LI_I(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.support.LinkRequestImpl.<init>(jobject, jobject, jint, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkerServicesImpl.getGuardedInvocation(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.CompositeGuardingDynamicLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.CompositeTypeBasedGuardingDynamicLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkRequestImpl.withoutRuntimeContext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornLinker.getGuardedInvocation(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.lookup(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.CallSiteDescriptorFactory.tokenizeOperators(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/644166178.invokeSpecial_LLIL_L(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.relink(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkerServicesImpl.asTypeLosslessReturn(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.linker.LinkerServices$Implementation.asTypeLosslessReturn(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.concurrent.atomic.AtomicReference.compareAndSet(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.Bootstrap$1.filter(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.OptimisticReturnFilters.filterOptimisticReturnValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.ChainedCallSite.relink(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.relinkInternal(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.getPruneSwitchpoints() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.LinkerCallSite.getPruneCatches() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.getPruneCatches() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LILL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/36333492.invokeStatic_L3IL3_L(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.compose(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.hasWithScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isStrict() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants.getOrCreateSwitchPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.access$700(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.hasBeenInvalidated() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornGuards.getMapGuard(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5345, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.findPrimitiveType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findBuiltinSwitchPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornGuards.getGuard(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.needsGuard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/342597804.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/413601558.linkToCallSite(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1371006431.exactInvoker(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findSetMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.SetMethodCreator.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SetMethodCreator.createGuardedInvocation(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SetMethodCreator.createSetMethod(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isStrict(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.SetMethodCreator$SetMethod.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.info(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 304, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.replaceProperty(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.immutableReplace(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.cloneMap() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.replaceNoClone(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1510067370.invokeStatic_L7_L(jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L5.make(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L5.<init>(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.SwitchPoint.invalidateAll(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.findSetMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.GlobalConstants.isGlobalSetter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L4.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Integer.toHexString(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Integer.toUnsignedString0(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.Integer.formatUnsignedInt(jint, jint, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2075495587.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/627185331.invokeSpecial_L3_L(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants.invalidateSwitchPoint(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.GlobalConstants$Access.access$200(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.GlobalConstants$Access.invalidateOnce() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.GlobalConstants$Access.invalidate(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.GlobalConstants$Access.access$400(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.GlobalConstants$Access.newSwitchPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1652149987.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.AccessorProperty.replaceMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/477289012.putObjectField(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getSetter(jobject, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.copy(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/206835546.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getWiderMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.debugReplace(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 270, OSR_BCI: -1 :: virtual jobject java.lang.Object.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.String.valueOf(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1286, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaFormBuffer.ownedCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.BytecodeDescriptor.parseSig(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.BoundMethodHandle$Factory.typeLoadOp(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 525, OSR_BCI: -1 :: static jobject java.lang.String.valueOf(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxBoolean(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6085, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6086, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: virtual jboolean java.util.TreeMap$PrivateEntryIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$KeyIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1821, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.enterBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.BitSet.previousSetBit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Long.numberOfLeadingZeros(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$400(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.security.Permission.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 342, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.cloneWithIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.replaceName(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.oldSpeciesData() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.speciesData(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put122(jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormEditor$Transform.<init>(jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 399, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 383, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.asTypeSafeReturn(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1998269275.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ObjectArrayData.<init>(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/828441346.invokeExact_MT(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.invokeSetter(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 660, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 661, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 662, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.putInCache(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor$Transform.withResult(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 663, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.buffer() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.setNames(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.startEdit() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.lambdaForm() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.nameArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaFormBuffer.resultIndex() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList.listIterator(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.lookupClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getLookup() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readUTF() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jbyte java.io.ObjectInputStream.readByte() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2068, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2080, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.getVariantFor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass$FieldReflector.getFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor32.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$EmptyMap.keySet() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterPropertyNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadNEW(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpressionAsObject(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$500(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BaseNode.isIndex() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$100(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Access.className() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Access.descriptor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Access.name() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FieldObjectCreator.getClassName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.MapTuple.isPrimitive() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newString(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.AssertsEnabled.assertsEnabled() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.ensureUniqueLabels(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$11$1.getReplacement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1299, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.ensureUniqueLabels(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5505, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isLong() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isNumber() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.getTable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5353, OSR_BCI: -1 :: static jboolean java.util.WeakHashMap.eq(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadConstant(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getCurrentContinuationEntryPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$2100(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.types.Type.invokestatic(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Call.className() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Call.descriptor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Call.name() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Class.forName(jobject, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 331, OSR_BCI: -1 :: virtual void java.util.HashSet.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamField.<init>(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.util.zip.InflaterInputStream.ensureOpen() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2100, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflectorKey.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList.checkForComodification() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.util.Collections$SynchronizedMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.label(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$SubList$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isOtherUppercase(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3145, OSR_BCI: 376 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.generateUnwarrantedOptimismExceptionHandlers(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicArrayPopulatorCall(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getInternalType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle.getTarget() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual void java.util.SubList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.addProperty(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 383, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SetMethodCreator$SetMethod.createGuardedInvocation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SetMethodCreator.getMap() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.checkHistory(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 380, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2134, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.getReflector(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.computeFieldOffsets() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptEnvironment.isTimingEnabled() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$EmptyList.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$8100(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$1.enterAccessNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store$1.enterBaseNode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$2.enterAccessNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1293, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator$Store.access$7502(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.narrowerThan(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isOtherUppercase(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 274, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isOtherUppercase(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 275, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isOtherUppercase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.MethodEmitter.isThisSlot(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7445, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.isCurrentDiscard(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getBreakLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompileUnit.getClassEmitter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass$FieldReflectorKey.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readTypeString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jshort java.io.ObjectInputStream$BlockDataInputStream.readShort() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor16.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 254, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.initNonProxy(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readNonProxyDesc(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readClassDescriptor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.readNonProxy(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong java.io.ObjectInputStream.readLong() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jshort java.io.ObjectInputStream.readShort() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.io.ObjectInputStream.isCustomSubclass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.resolveClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getOutermostFunction() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.unindent() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.canBeNarrowerThan(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterAccessNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$1.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$1.loadStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$1.consumeStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.security.ProtectionDomain.getCodeSource() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeMap$Entry.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList$1.checkForComodification() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLocalVariable(jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.joinTo(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompileUnit.getUnitClassName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CompileUnit.isUsed() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.type(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.lookup.MethodHandleFactory.access$300() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.toString(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 32911, OSR_BCI: 0 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 292, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.functionExpression(jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.MagicAccessorImpl.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.JD4.allocate(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Timing.accumulateTime(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 3200, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$CountingWrapper.getTarget() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 884, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getFunctionFlag(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase.begin(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.indent() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.hasState(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.reflect.AccessibleObject.setAccessible(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.reflect.AccessibleObject.setAccessible0(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getGetter(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.SimpleMethodHandle.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/95395916.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1280, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl$Lazy.access$500() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.ensureSpillSize(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_LI.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.guardFailed() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.access$100(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.transformFunction(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Symbol.<init>(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/861842890.invokeExact_MT(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L.copyWithExtendI(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LI.make(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.uniqueName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 28, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.addProperty(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getFunctionNodeId() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getObjectValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: virtual jlong java.io.ObjectInputStream$BlockDataInputStream.readLong() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.StructureLoader.isSingleFieldStructure(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 214, OSR_BCI: -1 :: virtual jobject java.lang.Class.newReflectionData(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.useDualFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1413653265.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandleImpl$CountingWrapper.countDown() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/439928219.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/125622176.exactInvoker(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1627428162.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$reinvoker/1300393335.dontInline(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isApplyToCall(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 365, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SetMethodCreator.createExistingPropertySetter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7330, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readNull() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor14.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.invoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.ByteArrayInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.zip.Inflater.finished() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.zip.Inflater.needsDictionary() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.zip.Inflater.needsInput() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.zip.Inflater.setInput(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor48.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.zip.InflaterInputStream.fill() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1281, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$NullLiteralNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isOptimisticOrRestOf() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1284, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Expression.getWidestOperationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 169, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isOptimisticOrRestOf() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.ref.ReferenceQueue.enqueue(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 271, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadNull() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.inDynamicScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6403, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newConst(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Handle.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator.appendType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5344, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.coerceStackTop(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6409, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newHandle(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: virtual jobject java.lang.ref.ReferenceQueue.reallyPoll() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findGetMethod(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6403, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1280, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodHandles$Lookup.lookupModes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 305, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.isExtensible() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 305, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.PropertyMap.isExtensible() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.internal.dynalink.support.AbstractCallSiteDescriptor.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.internal.dynalink.support.AbstractCallSiteDescriptor.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.AbstractCallSiteDescriptor.lookupsEqual(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getObjectValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getGetterReceiver() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.bindSingle(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.fine(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1707488498.delegate(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.identity(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArgumentsChecks(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.constant(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1753447031.invokeVirtual_LIL_I(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.extensionCheck(jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/760563749.invokeSpecial_L3_I(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isPrimitive(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.SimpleMethodHandle.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.constant(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.findGetMethod(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.access$800(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants.constantGetter(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.GlobalConstants.staticConstantGetter(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.unboxConstant(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1995619265.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/532087022.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 272, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.linker.GuardedInvocation.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.isRecompilable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.CompiledFunction.getFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/36202360.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1268650975.identity_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1711574013.getObjectField(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/2032251042.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.dropArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/796684896.invokeStatic_LL_I(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.isMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/436546048.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 289, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isFastScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1158, OSR_BCI: -1 :: static jobject java.util.Collections.emptyList() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.security.PermissionCollection.isReadOnly() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 664, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Access.methodHandle() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 323, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants.findGetMethod(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 325, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.lookup.Lookup.filterReturnType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.CompiledFunction.isVarArgsType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.canBeDeoptimized() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isBuiltin() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10499, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.pickFunction(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.foldArguments(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 251, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.getSwitchPoints() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.getBest(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setInitialProto(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.getValidOptimisticInvocation(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction$HandleAndAssumptions.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.isVarArg() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.isApplyToCall() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$HandleAndAssumptions.createInvocation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.linker.GuardedInvocation.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptObject.pairArguments(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptObject.pairArguments(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getFunctionGuard(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.ClassMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1809787067.invokeVirtual_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getBest(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.findNewMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.getBestConstructor(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isConstructor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.createConstructorInvocation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$3.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$3.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.access$300(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.getConstructor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.allocate() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.getAllocatorMap() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.newFilter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.allocate(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AllocationStrategy.allocate(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/801197928.invokeStatic_L3_L(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1106131243.linkToCallSite(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/48914743.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/758013696.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2089817542.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$27$11503AA$earley_boyer.sc_Pair(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.CompiledFunction.getParamCount(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1475998599.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1799583457.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1265210847.invokeStatic_LL_L(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/589446616.invokeStatic_L5_L(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.TypeConverterFactory.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.unboxReturnType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.PropertyHashMap.binIndex(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean java.lang.ClassValue.match(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1166726978.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeBlockInliningWrapper(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.type() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5393, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findProperty(jobject, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.needsCallee() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual void java.util.LinkedList.checkPositionIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5271, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArgumentPrimitive(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5384, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1627428162.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jint sun.invoke.util.Wrapper.hashWrap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LI.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LIL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3856, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 4059, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asCollector(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3.copyWithExtendI(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.createRelinkAndInvokeMethod(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.makePruneAndInvokeMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.bindArgumentL(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1707488498.delegate(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jobject sun.invoke.util.Wrapper.convert(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6405, OSR_BCI: -1 :: virtual jobject sun.invoke.util.Wrapper.wrapperType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6405, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forceType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.checkTargetChange(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentI(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1938056729.invokeStatic_L3IL_L(jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1241276575.invokeStatic_L3ILL_L(jobject, jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandle.asCollectorChecks(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 665, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.Invokers.basicInvoker() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.security.BasicPermission.getCanonicalName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.getDeclaringClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.insertExpression(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.insertParameter(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue.version() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$Entry.version() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.toInt32Optimistic(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArguments.G$length(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.privateGetDeclaredFields(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.ObjectArrayData.has(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.addExact(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunction.isFunctionMH(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.isScriptObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 434, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitIconstInsn(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 301, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.shortenSignature(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jlong java.lang.Math.min(jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream.skipCustomData() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesGlobalSymbol() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 186, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.encodeUTF8(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isFunction() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7424, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.widerThan(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.getCompilerConstantType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.checkTemporalDeadZone(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.isGlobalScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getExternalSymbolDepth(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 142, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.generateUnwarrantedOptimismExceptionHandlers(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadCompilerConstant(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5182, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.isOptimistic(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.dynGetOperation(jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$400(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpressionAsObject(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$2100(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.onLocalStore(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.storeHidden(jobject, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2781, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2782, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6149, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaFormEditor$Transform.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8448, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$Entry.value() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makePairwiseConvertByEditor(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asTypeUncached(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11525, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaFormEditor$Transform.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7425, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/876563773.invokeStatic_L5I_L(jobject, jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/245672235.invokeStatic_L6_L(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6166, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.viewAsType(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6403, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.node(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 672, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCode(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2783, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2784, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 672, OSR_BCI: -1 :: virtual jobject java.lang.invoke.InvokerBytecodeGenerator.loadMethod(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10504, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.methodType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.append(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 285, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.basicTypeSignature(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5384, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameterType(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6405, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forBasicType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/655381473.getObjectFieldCast(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.checkCast(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle$Accessor.checkCast(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.peekType(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.NashornLoader.checkPackageAccess(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 263, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6410, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.isParam() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormEditor$Transform.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.fullBytes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2785, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2786, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArguments.allocate(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.NativeArguments.<init>(jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.toInt32Optimistic(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.subExact(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Math.subtractExact(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1566723494.invokeVirtual_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty.primitiveGetter(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty.primitiveSetter(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty.objectGetter(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty.objectSetter(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1273765644.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.MethodEmitter.getUsedSlotsWithLiveTemporaries() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 221, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.end() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 222, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.begin() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 222, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.newStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getLocalLoadsOnStack(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getReturnType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3028, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.maybeCustomize(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.Collections.swap(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jint java.io.DataInputStream.readInt() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.invokeReadObject(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.Collections.reverse(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.getClassDataLayout0() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$100(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.logging.Level.intValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newString(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.storeTemp(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.defineTemporaryLocalVariable(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.defineTemporaryLocalVariable(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor14.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2307, OSR_BCI: -1 :: virtual jboolean java.lang.ClassLoader.checkName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.getListeners() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 372, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants.findSetMethod(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5230, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.filterArguments(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3029, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.createSymbol(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap.closeDeletion(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.logging.Logger.getLevel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.generic(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1282, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitEnd() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1508646930.invokeStatic_LIL_V(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandleImpl$ArrayAccessor.setElementL(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.staticField(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.staticField(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$6.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$FieldAccess.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.equalsWithoutType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.getKey() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$7.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FieldObjectCreator.putField(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ObjectCreator.loadTuple(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ObjectCreator.loadTuple(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$8.loadValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$8.loadValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.putField(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invalidateSpecialName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 207, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter.method(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1234776885.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1310, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveExpressionStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void sun.reflect.ReflectionFactory.checkInitted() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6021, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getExternalSymbolDepth(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 400, OSR_BCI: 53 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 112, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5481, OSR_BCI: -1 :: static jboolean java.util.WeakHashMap.eq(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2126, OSR_BCI: 670 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getCompileUnits() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 544, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.equalSameTypeValues(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 16642, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.exactInvoker(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 844, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 845, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 846, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 847, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 848, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 849, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 850, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 851, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 852, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 853, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 854, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.defineBlockLocalVariable(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3030, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 8194, OSR_BCI: 2 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ref.ReferenceQueue.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ref.ReferenceQueue$Lock.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ref.ReferenceQueue$Lock.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.put(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.getEntry(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 220, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.listIterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 225, OSR_BCI: -1 :: virtual void java.util.ArrayList$ListItr.<init>(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode.getRequest() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractList.clear() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList.removeRange(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.removeRange(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3171, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3172, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2439, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3173, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3174, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 736, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.invalidateGlobalConstant(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2305, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getTypesFromStack(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.arrayload() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 206, OSR_BCI: -1 :: static jobject sun.reflect.Reflection.filter(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3340, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3341, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 3401, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 3332, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.useCount(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.newTable(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.WeakHashMap.<init>(jint, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.security.CodeSource.getLocation() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.length(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 322, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.PropertyMap.getFreeSpillSlot() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 322, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.SpillProperty.<init>(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.addOwnProperty(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isThis() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.init(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Class.searchFields(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label.getStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getDeclaredField(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContextStatement.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.addSpillProperty(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.SpillProperty.<init>(jobject, jint, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.setInitialValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Compiler.declareLocalSymbol(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.TypeEvaluator.declareLocalSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.getElem(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Vector.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Vector.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Vector.<init>(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._catch(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.newarray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.put(jobject, jobject, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.TreeMap.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$9200(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getLocalVariableConversion() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.ConstantData$ArrayWrapper.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.CallNode.getLineNumber() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1280, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.loadClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 249, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.File.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 250, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.Type$6.getBytecodeStackType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.access$9800(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 251, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 245, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 18964, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.init(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.security.Permissions.getPermissionCollection(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.EnumMap.unmaskNull(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.hasGetterFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getLocalVariableTypes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.getLocalVariableConversion() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 904, OSR_BCI: 53 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.BasicPermissionCollection.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Compiler.isStrict() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.field(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.mergeVariableTypes(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.joinFrom(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setFlag(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 356, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.addReference(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6145, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.util.WeakHashMap.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.EnumMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.EnumMap.isValidKey(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1741, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$StringLiteralNode.<init>(jlong, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1741, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$StringLiteralNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 19, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.convert(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.BitSet.recalculateWordsInUse() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 331, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jboolean sun.reflect.misc.ReflectUtil.isVMAnonymousClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 350, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.symbolIsUsed(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 229, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.specialCallNoLookup(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 229, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$1.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 229, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$1.invoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 229, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invokespecial(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.IntType.getBytecodeStackType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.access$9900(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean java.util.RegularEnumSet.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void java.util.EnumSet.typeCheck(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 368, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.addToHistory(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterCOMMARIGHT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitTryCatchBlock(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Handler.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Label$Stack.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.cloneWithEmptyStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getWidestLiveLocals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$SubList.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.<init>(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Compiler$CompilationPhases.isRestOfCompilation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ObjectCreator.isScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.getFirstDeadLocal(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 308, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$3.invoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.doesNotContinueSequentially() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 19550, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 19552, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 19556, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 8064, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.maybeForceScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptEnvironment.getNamespace() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._try(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.joinFromTry(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.addUnwarrantedOptimismHandlerLabel(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2048, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$ListItr.hasPrevious() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.markSymbolBoundariesInLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.access$10000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.checkcast(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.checkcast(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.Writer.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.IntDeque.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.newSpeciesData(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.replaceFunctions(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.renameParameter(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.invoke.util.ValueConversions$WrapperCache.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7168, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.TypeConverterFactory.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 304, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isString(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint sun.misc.Unsafe.getAndAddInt(jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.getFieldAccessor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.acquireFieldAccessor(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.getFieldAccessor(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.ReflectionFactory.newFieldAccessor(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.UnsafeStaticFieldAccessorImpl.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.UnsafeFieldAccessorImpl.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.FieldAccessorImpl.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 17665, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeConverterFactory.canAutoConvert(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterNE_STRICT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FunctionSignature.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 332, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadConstant(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.toObjectArray(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$Version.promise() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.ClassValue$Entry.isPromise() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2048, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Symbol.getUseCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.getHandlerLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.ObjectType._return(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.RuntimeNode$Request.requestFor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.loadUndefined(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.initLocals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.onEnterBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.pushFreeSlots(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.leaveBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.popBlockScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.releaseSlots() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.setLength(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.setLength(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.BooleanType.convert(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.concurrent.atomic.AtomicInteger.getAndIncrement() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterCallNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.access$2000(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.loadCallNode(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2.<init>(jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator.access$5000(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.dynamicCall(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicCall(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadUndefined(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newNameType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 318, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toPrimitive(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 20132, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 369, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.access$10002(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 631, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$NumberLiteralNode.<init>(jlong, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1166, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Parser.useBlockScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getEndParserState() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Parser$ParserState.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Parser$ParserState.access$100(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 390, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 391, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 208, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Compiler.binaryName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5325, OSR_BCI: -1 :: static jint java.lang.Character.getType(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 412, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.returnVoid() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 4352, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.lastUseIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Source$URLData.isEvalCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.popDiscardIfCurrent(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$13.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$14.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.security.CodeSource.getCertificates() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.reflect.Field.set(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.UnsafeStaticObjectFieldAccessorImpl.set(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$14.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.ConstantData$PropertyMapWrapper.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode.getArgs() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadMaybeDiscard(jboolean, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompileUnit.setUsed() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: virtual void java.lang.Class.checkPackageAccess(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 940, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5387, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.expectValue(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompileUnit.getCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle.intrinsicName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.getDefaultFunctionName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setPass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.initializeInternalFunctionParameter(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.initializeInternalFunctionOrSplitParameter(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 356, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.findStatic(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.IntType.store(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection.toArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5521, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L3IL.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$ClassValueMap.getCache() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.arrays.ArrayData.allocate(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$ClassValueMap.startEntry(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$ClassValueMap.finishEntry(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.ClassValue$ClassValueMap.checkCacheLoad() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.ClassValue$ClassValueMap.addToCache(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$ClassValueMap.placeInCache(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug_label(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ArrayType.newarray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.getInternalName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.DeletedRangeArrayFilter.set(jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.set(jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.toLongOptimistic(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 413, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.Guards.isIdentical(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.getLinkerServices() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 226, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.createGetter(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 226, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.createGetterInner(jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.ConstantCallSite.getTarget() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2306, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.binaryNodeWeight(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 434, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 435, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LiteralNode.objectAsConstant(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newMethod(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put112(jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.LongType.getBytecodeStackType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.comparator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$SubList$1.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getSymbolBoundaryCopy() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5403, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getLocalVariableTypesCopy() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Type.<init>(jint, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.access$500(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1911728085.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 370, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.appendParameterTypes(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/158453976.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setObject(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getPropertyName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 456, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 457, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 361, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.getOptimisticCoercedType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 361, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.getOptimisticFlags(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$2.enterIdentNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList$1.<init>(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList$1.checkForComodification() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2$2.loadStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2$2.consumeStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6403, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label.getLabel() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 478, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.types.Type.getWeight() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.undefinedToNumber(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.ProtectionDomain$Key.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 479, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CompileUnit.compareTo(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CompileUnit.compareTo(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.LongType.convert(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5436, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator.appendType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.guardWithTest(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar java.lang.invoke.LambdaForm$BasicType.basicTypeChar() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithTest(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 289, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.getDefaultValidFunctionName(jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.<init>(jobject, jint, jint, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source.getContent() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.<init>(jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BlockStatement.isTerminal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ApplySpecialization$1.enterCallNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.ApplySpecialization.access$100(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.ApplySpecialization.isApply(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 348, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ClassEmitter.getArrayMethodName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.subExact(jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.returnType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithTestForm(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LoopNode.isTerminal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ApplySpecialization$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setIdentifierLvarType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxExact(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6408, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.putSymbol(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.TreeSet.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.getProgramPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1347870667.invokeStatic_L3I_L(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.clone() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonSet.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1028, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.LongType.load(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.net.URL.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 789, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 789, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.peek() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$SpeciesData.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isGetter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.security.CodeSource.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeMap.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 373, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$NamedFunction.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 77058, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor.lambdaFormEditor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 209, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.getProperties() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 232, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.getProperties() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5396, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newFieldItem(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.addExact(jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.ProtectionDomain.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isMethod() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 269, OSR_BCI: -1 :: static jobject java.lang.Integer.toString(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1281, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5386, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isCategory2() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.canConvertParameters(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.joinPredecessorExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source.getExplicitURL() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.getModify() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.visitEnd() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 439, OSR_BCI: -1 :: virtual void java.lang.ref.WeakReference.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.getInit() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 302, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Call.methodHandle() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.misc.Cleaner.clean() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.misc.Cleaner.remove(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleNatives$CallSiteContext.run() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandleNatives.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 201, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.forStructureClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 318, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.remove(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 320, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.replaceNode(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.clear() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.replaceParameterByCopy(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.noteDuplicate(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Compiler.useOptimisticTypes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.JoinPredecessorExpression.isAlwaysFalse() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.popUnwarrantedOptimismHandlers() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 285, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._return() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jchar jdk.nashorn.internal.codegen.types.Type.getShortSignatureDescriptor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jboolean java.lang.Character.isUpperCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.store(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 2279, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.initInputFrame(jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.PermissionCollection.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.pop() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.BranchOptimizer.branchOptimizer(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isUnknown() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterDECINC(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$7.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$8.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$9.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptEnvironment.getErr() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$10.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1280, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeRemoval(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isRepresentableAsInt(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.ScriptFunctionData.getArity() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context.getErrorManager() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.addClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$ContextCodeInstaller.getOwner() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$ContextCodeInstaller.getOwner() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.addType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ObjectArrayData.setElem(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$BasicType.basicTypeClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.isSerialized() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5386, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedValues.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LI.copyWith(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.begin() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.set(jint, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.arrays.ContinuousArrayData.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3I.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1558686575.invokeStatic_L5IL_L(jobject, jobject, jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L3IL.make(jobject, jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L3IL.<init>(jobject, jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.getScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.logging.DebugLogger.getLevel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.logging.DebugLogger.levelFinerThanOrEqual(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler$CompilationPhases.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.end() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FunctionSignature.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FunctionSignature.<init>(jboolean, jboolean, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.FunctionSignature.typeArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FunctionSignature.getMethodType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.getTargetLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 268, OSR_BCI: -1 :: static jobject java.nio.charset.Charset.lookup(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Namespace.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.UnwarrantedOptimismException.getProgramPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.access$400(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isJSPrimitive() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.endFrame() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.MethodWriter.startFrame(jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RewriteException.getUOE() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Throwable.getCause() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.charset.Charset.name() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getBuiltinFunction() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.charset.CharsetEncoder.charset() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContextStatement.<init>(jint, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1045, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.peek() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Source$URLData.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.EnumSet.of(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.storeCompilerConstant(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.nextCompileUnitName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.createCompileUnit(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.<init>(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter$1.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ClassEmitter.pathName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.defineCommonStatics(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompileUnit.<init>(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.lookupCodeMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$1.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$2.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$3.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$4.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$5.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$6.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getSymbols() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5387, OSR_BCI: -1 :: static jint java.lang.Integer.stringSize(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 337, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.access$200(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 337, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.setStates(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterReturnNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11521, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadBinaryOperands(jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.noToPrimitiveConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popNumeric() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/542060780.reinvoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/152005629.invokeStatic_L_I(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.access$700(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonMap.keySet() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7425, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.hasDualFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 105, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.resize(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.Class.forName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getClassName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.LocalVariableConversion.isAnyLive(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.RuntimeNode$Request.isUndefinedCheck(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Enum.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.addSwitchPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FunctionInitializer.getMethodType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FunctionInitializer.getCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.ConstantCallSite.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.ConstantCallSite.dynamicInvoker() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 220, OSR_BCI: -1 :: static jfloat java.lang.Math.min(jfloat, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.TreeMap.colorOf(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.Class.getSimpleBinaryName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnclosingClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.defineGetArrayMethod(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.emitBranch(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.BranchOptimizer.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.BranchOptimizer.execute(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.LocalVariableConversion.hasLiveConversion(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$600(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeMap.getParameterTypes(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 272, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.ConstantData$ArrayWrapper.calcHashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 263, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getProgramPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.linker.GuardedInvocation.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BreakableStatement.<init>(jint, jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BreakableStatement.getLocalVariableConversion() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1280, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getLocalVariableTypes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/2141179775.exactInvoker(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: static jobject java.util.Collections.singletonIterator(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ArrayType.load(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 989, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.remove(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty$Accessors.getCached(jint, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SpillProperty$Accessors.getOrCreate(jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1663619914.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.Collections.eq(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeSet.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeSet.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.joinTo(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5249, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.label(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompileUnit.createCompileUnitSet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/992768706.reinvoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 41103, OSR_BCI: 0 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 786, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.formalParameterList(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 208, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Parser.skipFunctionBody(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 441, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator.nonOptimisticFlags(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getCurrentContinuationEntryPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.arraystore() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.ArrayType.astore(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5198, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.MethodEmitter.isThisSlot(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1282, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/913190639.invokeStatic_LI_I(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 206, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.setCachedMethodHandle(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LoopNode.<init>(jint, jlong, jint, jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveADD(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter.toByteArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.DumpBytecode.dumpBytecode(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.defineClass(jobject, jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.preDefineClass(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.checkCerts(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.defineClassSourceLocation(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockStatement.getBlock() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 241, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.generateContinuationHandler() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11523, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.checkExactType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/124407148.invokeStatic_LIL_L(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpressionOnEmptyStack(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.resetJoinPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 242, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.initializeMethodParameters(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1375, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.mergeVariableTypes(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 267, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.makeArgumentCombinationForm(jint, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5409, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isBlockScoped() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 267, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.TypeEvaluator.evaluatePropertySafely(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterTestFirstLoop(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BreakableStatement.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 272, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LocalVariableConversion.isLive() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getKey() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getLogger() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 270, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.checkEscape(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.Lower.controlFlowEscapes(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Lower$5.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2051, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jobject, jint, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6403, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.narrowest(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.methodType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.asCollector(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 271, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.restoreState(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.restoreState(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5393, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.SplitIntoFunctions.appendStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5261, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.clone() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LocalVariableConversion.getFrom() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LocalVariableConversion.getTo() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LocalVariableConversion.getSymbol() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.storeElement(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5522, OSR_BCI: -1 :: static jboolean java.lang.Character.isUpperCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.notNarrowerThan(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getInternalName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/592959754.dontInline(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 272, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RewriteException.populateArray(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RewriteException.populateArrayBootstrap(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6027, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives.linkCallSite(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextLoopNode.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.tagNeverOptimisticLoopTest(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterDefault(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2094, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jobject, jint, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterIndexNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$2.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$2.loadStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$2.consumeStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.dynamicGetIndex(jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicGetIndex(jobject, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.WhileNode.hasPerIterationScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2095, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jobject, jint, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.Arrays$LegacyMergeSort.access$000() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6272, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.initIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2442, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putVal(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2049, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setBody(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6417, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableCollection.contains(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5325, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.cloneMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$13.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Source.isEvalCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.initLogger(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isDead() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.markDeadLocalVariable(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.getScopeCalls() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Collections.unmodifiableCollection(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Compiler.addClass(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CompileUnit.increaseEmitCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$ContextCodeInstaller.install(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptLoader.installClass(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.security.SecureClassLoader.defineClass(jobject, jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.security.SecureClassLoader.getProtectionDomain(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$ContextCodeInstaller$1.run() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$ContextCodeInstaller$1.run() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompileUnit.initializeFunctionsCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setRootClass(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.fixParamStack(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 51, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 52, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 53, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 54, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 55, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextBaseNode.appendStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 237, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setBody(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.athrow() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 56, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.getLinkerServices() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 281, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.filterReturnForm(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.needsCallee() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.popCompileUnit(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.popMethodEmitter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.popMethodEmitter(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.lineNumber(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.Collections.sort(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.add(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.get2() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject java.util.RegularEnumSet$EnumSetIterator.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/89414722.identity_I(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.runtime.arrays.ArrayData.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.toUint32(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ArrayData.setLength(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1840663231.linkToTargetMethod(jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1626803358.reinvoke(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1387228415.invokeStatic_I3_I(jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 838, OSR_BCI: -1 :: virtual jint java.util.ArrayList.indexOf(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5406, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.start(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.RuntimeNode$Request.isEQ(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.changeReturnType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RewriteException.instanceOrNull(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.OptimisticReturnFilters.filterOptimisticReturnValue(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/55909012.invokeStatic_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.fixParamStack(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean java.lang.Class.isAnonymousClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isPrivate() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5204, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl$ArrayAccessor.getElementL(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.InvokerBytecodeGenerator.assertStaticType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadMaybeDiscard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$7100(jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/406752394.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Math.getExponent(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1447689627.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1307096070.invokeStatic_I_L(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5760, OSR_BCI: -1 :: virtual jboolean java.lang.Class.isAnonymousClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitReferenceCast(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6016, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makePairwiseConvertByEditor(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 377, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.markDeadLocalVariables(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 211, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.nio.Buffer.position(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 319, OSR_BCI: -1 :: virtual void java.util.TreeMap.fixAfterInsertion(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 13568, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.maybeForceScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 233, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.expandParameterSlots(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isEvalCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterRuntimeNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$4200(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadRuntimeNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.nullCheck(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 188, OSR_BCI: -1 :: static void java.util.TimSort.binarySort(jobject, jint, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeMap.get(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterRuntimeNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.MethodEmitter.getUsedSlotsWithLiveTemporaries() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5396, OSR_BCI: -1 :: virtual void java.util.ArrayList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void java.util.AbstractList.clear() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void java.util.ArrayList.removeRange(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.getLocalVariableConversion() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterGE(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterBlockStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jint java.util.BitSet.nextSetBit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.enterForOrWhile(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.getLocalVariableConversion() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.WeakHashMap.containsKey(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.getEntry(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5219, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.insertArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5422, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.less(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.speciesData_LLLLL() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 13952, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.maybeForceScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.LongType.store(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.emitLocalVariableConversion(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.toArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Label.isReachable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.getCommonSuperClass(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1688019098.invokeSpecial_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 322, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getGetter(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.cachedMethodHandle(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 337, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$BooleanLiteralNode.<init>(jlong, jint, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 337, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$BooleanLiteralNode.<init>(jlong, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveCOMMARIGHT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.VarNode.getSymbolFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jint java.util.BitSet.previousSetBit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.logLookup(jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 338, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser$ParserState.createLexer(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.WhileNode.mustEnter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1461149300.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getLocalLoadsOnStack(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithCatch(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithCatchForm(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Hashtable.<init>(jint, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Dictionary.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterADD(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadADD(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$13.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$13.loadStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$13.consumeStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.TimSort.sort(jobject, jint, jint, jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.prologue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.epilogue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.nio.charset.Charset.atBugLevel(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.buildFromSorted(jint, jint, jint, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.ClassValue.getMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.ClassValue.makeEntry(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Hashtable.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1330, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7424, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Statement.<init>(jint, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.position(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 595, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isDeclared() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getObjectPrototype() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.catchException(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.catchException(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.nio.Buffer.limit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1013103333.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 205, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.NashornLoader.getPermissions(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.TreeSet.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 217, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.BranchOptimizer.branchOptimizer(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.sort(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.Arrays.sort(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L5.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.arrays.ArrayIndex.toLongIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.<init>(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/935715558.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.getObject(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.ofNoFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1355387800.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jdouble java.lang.Integer.doubleValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/63390.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 290, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1819912129.linkToCallSite(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.toUint32(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 9992, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1627428162.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1669938422.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/1915058446.invokeStatic_LI_J(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/422881217.linkToCallSite(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1010467398.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/743792379.guard(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/50421901.guard(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/796684896.invokeStatic_LL_I(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$SetFromMap.contains(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 373, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.defineCommonUtilities() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5391, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.arrays.ArrayIndex.isValidArrayIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.lookup() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandles$Lookup.checkUnprivilegedlookupClass(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/192319053.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/2090675927.invokeVirtual_LILI_V(jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.DeletedRangeArrayFilter.has(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.ArrayFilter.has(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.DeletedRangeArrayFilter.isDeleted(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.doesNotHaveCheckArrayKeys(jlong, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.PropertyMap.containsArrayKeys() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.doesNotHaveEnsureLength(jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.DeletedRangeArrayFilter.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.doesNotHaveEnsureDelete(jlong, jlong, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/1561722966.dontInline(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1131316523.invokeSpecial_LIL_V(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1352397525.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/348100441.invokeSpecial_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/179809345.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.doesNotHave(jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1426329391.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ArrayFilter.set(jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ArrayFilter.setLength(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: static jobject java.lang.Double.valueOf(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual void java.lang.Double.<init>(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/795372831.delegate(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.EQ_STRICT(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.strictEquals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/315771971.guardWithCatch(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1753365355.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$reinvoker/83331807.dontInline(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1644584210.linkToTargetMethod(jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1725899109.reinvoke(jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/167185492.invokeStatic_JJI_J(jobject, jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/961994506.linkToCallSite(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1939144888.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptRuntime.ADD(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1329003565.invokeVirtual_LL_L(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.NE_STRICT(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1924582348.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/147903786.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.isMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1751779572.linkToCallSite(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1622740947.reinvoke(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/917681894.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.INSTANCEOF(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1925023490.guardWithCatch(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/782954342.guard(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/887895028.reinvoke(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/520016214.dontInline(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/687241927.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2082991407.linkToCallSite(jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1191935951.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/114804898.invokeVirtual_LJ_L(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1921022047.guard(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1292, OSR_BCI: -1 :: virtual jdouble java.lang.Integer.doubleValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1792190683.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jboolean java.lang.Class.isLocalClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 213, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$NamedFunction.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 213, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$NamedFunction.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1329, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isConfigurable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 65761, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.TokenStream.isFull() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveBlockStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 587, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.ObjectClassGenerator.getPaddedFieldCount(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5393, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.isLocalVariable(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5395, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.pushDiscard(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$14.evaluate() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 224, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitNewArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/122360746.invokeStatic_J_L(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxLong(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.add(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 358, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getObjectType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.nio.Bits.byteOrder() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 337, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LiteralNode.newInstance(jlong, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 328, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.getterForType(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.ClassLoader.checkCreateClassLoader() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.CodeSource.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.ClassLoader$ParallelLoaders.isRegistered(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveCOMMARIGHT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterCOMMARIGHT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$3200(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadCOMMARIGHT(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter$1.getCommonSuperClass(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassValue$ClassValueMap.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassValue$ClassValueMap.sizeCache(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 224, OSR_BCI: -1 :: virtual void java.lang.invoke.DelegatingMethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 224, OSR_BCI: -1 :: static jobject java.lang.invoke.DelegatingMethodHandle.chooseDelegatingForm(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.nio.Buffer.<init>(jint, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$1.enterIndexNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$2.enterIndexNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.dynamicSetIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.limit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkRequestImpl.getArguments() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L3ILL.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 343, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.undefinedCheck(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 364, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 364, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.BooleanType.ldc(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LILL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/36333492.invokeStatic_L3IL3_L(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.compose(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.relinkInternal(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.LinkerCallSite.getPruneCatches() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.linker.LinkerServices$Implementation.asTypeLosslessReturn(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/644166178.invokeSpecial_LLIL_L(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.relink(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 275, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.TypeEvaluator.getPropertyType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.OptimisticReturnFilters.filterOptimisticReturnValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.ChainedCallSite.relink(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$200(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.booleanToInt(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$300(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.objectToNumber(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1076496284.delegate(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.LinkerCallSite.newLinkerCallSite(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 351, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicTypes(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 20736, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.checkCustomized(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1284, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.util.EnumSet.getUniverse(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveWhileNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.foldArguments(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Exception.<init>(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Throwable.<init>(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RewriteException.getRuntimeScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$11.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.valueConversion(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.RewriteException.getProgramPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction.logRecompile(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterWhileNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.UnwarrantedOptimismException.getReturnType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.NumberType.convert(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual void java.nio.ByteBuffer.<init>(jint, jint, jint, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5387, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getFunctionBody(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.position(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5406, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.BinaryNode.booleanToInt(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 324, OSR_BCI: -1 :: virtual jobject java.lang.invoke.Invokers.setCachedInvoker(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 320, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue.getFromBackup(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 310, OSR_BCI: -1 :: static jobject java.lang.ClassValue$ClassValueMap.probeBackupLocations(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 289, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue.getFromHashMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.get2n() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.limit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.initTable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 374, OSR_BCI: -1 :: virtual jobject java.net.URLStreamHandler.toExternalForm(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getProperty(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jboolean java.lang.String.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveNE_STRICT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.linker.LinkerServices$Implementation.asTypeLosslessReturn(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 298, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.addAll(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$reinvoker/478373165.dontInline(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5504, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.LinkerCallSite.newLinkerCallSite(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1410, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ArrayData.setLength(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1998269275.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterIfNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 49295, OSR_BCI: 0 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 429, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.ifStatement() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 383, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.generateScopeCalls() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BinaryNode.<init>(jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.createRewriteExceptionHandler() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isFinal(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/1860250540.dontInline(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1795960102.getLongField(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandleImpl$CountingWrapper.countDown() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.ensureSpillSize(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7168, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 349, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getWidestOperandType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/822982084.dontInline(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6414, OSR_BCI: -1 :: static jint java.lang.Character.charCount(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5632, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5504, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1998269275.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1284, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.getObject(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1970436060.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/2003534796.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/866237328.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L6.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1849201180.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/706277948.delegate(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/95395916.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1248236698.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/688387469.delegate(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/439928219.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/639872291.guardWithCatch(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1376474236.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunction.isInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.getTargetFunction() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jdouble java.lang.Long.doubleValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/181045667.reinvoke(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1711574013.getObjectField(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/590225254.guard(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/82919847.linkToCallSite(jobject, jdouble, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1167004501.reinvoke(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1983741679.invokeVirtual_LD_L(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1445612460.guard(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/300630516.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1809787067.invokeVirtual_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.objects.Global.useDualFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.concurrent.atomic.AtomicInteger.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.security.BasicPermission.newPermissionCollection() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.BasicPermissionCollection.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaFormEditor$Transform.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.Global.newEmptyInstance() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.newObject() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.JD.getInitialMap() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isPrimitive(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.nio.cs.UTF_8.newEncoder() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.nio.cs.UTF_8$Encoder.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.nio.cs.UTF_8$Encoder.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.nio.charset.CharsetEncoder.<init>(jobject, jfloat, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.nio.charset.CharsetEncoder.replaceWith(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean sun.nio.cs.UTF_8$Encoder.isLegalReplacement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.nio.cs.UTF_8$Encoder.implReplaceWith(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Compiler.<init>(jobject, jobject, jobject, jobject, jobject, jboolean, jboolean, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ConstantData.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.initLogger(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Compiler$1.<init>(jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.TypeEvaluator.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.firstCompileUnitName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Compiler.safeSourceName(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.String.lastIndexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockStatement.setBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$7.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.initLogger(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$8.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FindScopeDepths.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FindScopeDepths.initLogger(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$9.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$10.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1518864111.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.nio.charset.CharsetEncoder.onMalformedInput(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.nio.charset.CharsetEncoder.implOnMalformedInput(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.nio.charset.CharsetEncoder.onUnmappableCharacter(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.nio.charset.CharsetEncoder.implOnUnmappableCharacter(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: static jobject java.nio.charset.Charset.forName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2556, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.WhileNode.<init>(jobject, jobject, jobject, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor$1.computeValue(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor$1.computeValue(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1596000437.invokeStatic_LIJ_V(jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandleImpl$ArrayAccessor.setElementJ(jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setProto(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.changeProto(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.checkProtoHistory(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.reparse() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getCompiler(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.typeMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.OptimisticTypesPersistence.getLocationDescriptor(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getInstallerForNewCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$ContextCodeInstaller.withNewLoader() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getEffectiveInvalidatedProgramPoints(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaFormEditor$Transform.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1280, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.access$10002(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.internArguments() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5334, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.cloneWithIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$4.getValueType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterSUB(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.createCompileUnit(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.nio.charset.Charset.defaultCharset() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.nio.ByteBuffer.allocate(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.nio.HeapByteBuffer.<init>(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.whileStatement() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.WhileNode.<init>(jint, jlong, jint, jboolean, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandles.filterReturnValueChecks(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.OutputStreamWriter.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.nio.cs.StreamEncoder.forOutputStreamWriter(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 320, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.storeHidden(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap$TreeBin.find(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap$TreeNode.findTreeNode(jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.BufferedWriter.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.BufferedWriter.<init>(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Source.getLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.RuntimeNode.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5510, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.MethodEmitter.getStackSize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual void java.util.BitSet.trimToSize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.PrintWriter.<init>(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1446, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.mergeVariableTypes(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.AbstractParser.<init>(jobject, jobject, jboolean, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContext.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.TokenStream.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.program(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$1.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FoldConstants.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.initLogger(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$2.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Lower.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Lower$1.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.initLogger(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$3.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ApplySpecialization.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ApplySpecialization.initLogger(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ApplySpecialization.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.SplitIntoFunctions.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getTypesFromStack(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.CallSite.makeSite(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.SecureClassLoader.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.filterReturnValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.NashornLoader.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ApplySpecialization$1.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$6.run() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$6.run() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptLoader.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5888, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.relink(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 270, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.addCompileUnit(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RecompilableScriptFunctionData$1.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 267, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter.method(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.unaryNodeWeight(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$reinvoker/1324578393.dontInline(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveGE(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: virtual jint java.lang.Enum.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 329, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadComparisonOperands(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 329, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.conditionalJump(jobject, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 335, OSR_BCI: -1 :: static jint java.util.TimSort.countRunAndMakeAscending(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 277, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.objects.Global.isBuiltinFunctionProperty(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.ArrayType.getBytecodeStackType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 281, OSR_BCI: -1 :: virtual void java.io.PrintWriter.<init>(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 178, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RewriteException.mergeSlotsWithScope(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.usePersistentCodeCache() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7426, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.needsParentScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$Entry.getKey() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$Entry.getValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 232, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.RuntimeNode.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterWhileNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5412, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.canBeNarrowerThan(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1295, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BaseNode.getMostOptimisticType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9486, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.typeDescriptor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5263, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.verifyAssignment(jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1280, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$BooleanLiteralNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11525, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getInternalName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.block() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 218, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.immutableAdd(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLocalVariable(jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.newOptimisticAssumptions() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getOptimisticType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeEvaluator.getOptimisticType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.getParameterTypes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jint sun.invoke.util.VerifyAccess.getClassModifiers(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.getElementType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2709, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Parser.checkIdentLValue(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.ForNode.mustEnter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptEnvironment.isTimingEnabled() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.isSpecialization() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 369, OSR_BCI: -1 :: static jobject java.lang.ClassValue.initializeMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveNE_STRICT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1461149300.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5250, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context.getLogger(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getLoggerName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 151, OSR_BCI: -1 :: static void java.util.Arrays.fill(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/218007578.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5466, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants$BinaryNodeConstantEvaluator.eval() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsWrappedThis() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/381707837.delegate(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5389, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.initializeType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.defineBlockLocalVariable(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5212, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.listIterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.findCallMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunction.needsWrappedThis() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5497, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants$BinaryNodeConstantEvaluator.reduceTwoLiterals() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveEQ_STRICT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FunctionInitializer.getInvalidatedProgramPoints() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.FunctionInitializer.getFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.access$300(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.createNewCompileUnit(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getOptimisticGetter(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.unindent() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 210, OSR_BCI: -1 :: static jint java.util.Arrays.hashCode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.findVirtual(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$BinaryArith.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$BinaryArith.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$BinaryArith.evaluate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.booleanToInt() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.objectToNumber() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$BinaryArith$1.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$BinaryArith$1.loadStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$BinaryArith$1.consumeStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$2.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$2.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.access$200(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$700(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$IdentityHashMapIterator.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterSUB(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$2400(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadSUB(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$29.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$29.op(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.sub(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 235, OSR_BCI: -1 :: virtual jboolean java.lang.ClassLoader.compareCerts(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.erase() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeMap.buildFromSorted(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.TreeMap.computeRedLevel(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$SelfModifyingStore.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterDECINC(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$4400(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadDECINC(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11.<init>(jobject, jobject, jobject, jobject, jobject, jboolean, jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11.evaluate() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11.loadRhs() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$6500(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11.storeNonDiscard() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator$11.access$6800(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11.loadMinusOne() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator$11.access$6900(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11.doDecInc(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveGE(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.findVirtual(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.isWithBoundary(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 282, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.Condition.toBinary(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.setProgramPoint(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.setProgramPoint(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.setType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.setType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 281, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.createInvoker(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveDECINC(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1215109224.linkToTargetMethod(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1345177914.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.onSelfAssignment(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.toInt32(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.toInt32(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveDECINC(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterTernaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandle.updateForm(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.sub(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptObject.findOwnMH_V(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterForNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.ForNode.hasPerIterationScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterJoinPredecessorExpression(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$4500(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 383, OSR_BCI: -1 :: virtual void java.nio.charset.CharsetEncoder.<init>(jobject, jfloat, jfloat, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveSUB(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1691875296.putLongField(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1114935129.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1427762784.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 375, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.<init>(jobject, jobject, jobject, jboolean, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 375, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.parse(jobject, jint, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 365, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.extractFunctionFromScript(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 372, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setName(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveSUB(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterForNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getSetter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Timing.accumulateTime(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptObject.getScriptObjectGuard(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornGuards.getScriptObjectGuard(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase.begin(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveForNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 381, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ApplySpecialization.hasApplies(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$4.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilationPhase$4$1.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$5.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ProgramPoints.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$6.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilationPhase$6$1.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ConstantData$ArrayWrapper.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Compiler.replaceCompileUnits(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeSet.clear() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeMap.clear() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.TreeSet.addAll(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeSet.comparator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeMap.addAllForTreeSet(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ReplaceCompileUnits.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveForNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveForNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterForNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.ForNode.<init>(jint, jlong, jint, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1296, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveIndexNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 4984, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.AccessorProperty.isUndefined() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 4984, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.generateSetter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual void java.util.BitSet.recalculateWordsInUse() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.lookup(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.CallSiteDescriptorFactory.tokenizeOperators(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getSetter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/2117269355.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/1018937824.invokeStatic_I_J(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong sun.invoke.util.ValueConversions.intToLong(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.uniqueName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.access$100(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.access$8902(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.access$4602(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.mathBootstrap(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveEQ_STRICT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11$2.loadStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11$2.consumeStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.RuntimeException.<init>(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.UnwarrantedOptimismException.<init>(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RewriteException.create(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RewriteException.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1704064279.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.handleRewriteException(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.handleRewriteException(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.reparse() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.isSerialized() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.getCompiler(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.getEntryPoints(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RewriteException.getPreviousContinuationEntryPoints() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 19712, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.maybeForceScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$11.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Compiler.clearBytecode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilationPhase$11$1.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.markAsOptimisticContinuationHandlerFor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RewriteException.getByteCodeSlots() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RewriteException.getReturnValueDestructive() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.UnwarrantedOptimismException.getReturnValueDestructive() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5632, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getSetter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RewriteException.getReturnType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter.restOfMethod(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.globalAllocateArguments() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/865261211.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.initArguments(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/342576236.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.Parser.incDecExpression(jlong, jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 3076, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.mergeVariableTypes(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$4$1.leaveLiteralNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/655381473.getObjectFieldCast(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle$Accessor.checkCast(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.compilerConstantIdentifier(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.dup(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.lookup(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5368, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.createSetter(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 15508, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.symbolNeedsToBeScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.put(jobject, jobject, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/917887967.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.getContinuationEntryPoints() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/324457684.guardWithCatch(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.forStatement() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 317, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.emitContinueLabel(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1550261631.exactInvoker(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/662267010.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 86047, OSR_BCI: 0 :: virtual void jdk.nashorn.internal.parser.Lexer.lexify() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 192, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FieldObjectCreator.makeObject(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findGetIndexMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findGetIndexMethodHandle(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1726118601.guard(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/188529678.dontInline(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.clone() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.superClone() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asFixedArity() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleImpl$AsVarargsCollector.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleImpl$AsVarargsCollector.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.useDualFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeVarargsCollector(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jobject java.lang.invoke.CallSite.makeUninitializedCallSite(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jint, jlong, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6913, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.foldArguments(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1663619914.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.isLocal(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 17024, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5328, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getDefiningFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/477289012.putObjectField(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L6.<init>(jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5136, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.linker.GuardedInvocation.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1282, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenStream.last() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5186, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.PropertyMap.getFreeSpillSlot() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1566723494.invokeVirtual_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1495591569.linkToCallSite(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1740035246.invokeStatic_J_I(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint sun.invoke.util.ValueConversions.longToInt(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 369, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.explicitParams(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 369, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.TypeMap.<init>(jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.NashornLoader.checkPackageAccess(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 288, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.createSyntheticInitializer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L5.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1164175787.invokeStatic_L8_L(jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L6.make(jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/521398971.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1940245575.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/214212829.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setIsScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.FunctionScope.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6272, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.relink(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/362497553.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 57487, OSR_BCI: 0 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3429, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.argumentList() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/603200739.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1124290846.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/596108811.guard(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/264502619.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.addOwnProperty(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.addSpillProperty(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Compiler.declareLocalSymbol(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.TypeEvaluator.declareLocalSymbol(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.setInitialValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.jumpToCatchBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$3.apply(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$3.apply(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2026062163.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/436546048.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.joinFrom(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1161542555.exactInvoker(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isVarArg(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1664994873.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isVarArg(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/280973084.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/725271149.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.util.LinkedList$ListItr.checkForComodification() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/121295574.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1918627686.delegate(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/798524826.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/800680282.linkToCallSite(jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.Global.allocateArguments(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunction.isStrict() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/500129592.guardWithCatch(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/542060780.reinvoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10496, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.compareAndSetMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/354405891.guard(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/2032251042.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/869928877.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/89414722.identity_I(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5387, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/687241927.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/805838836.delegate(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.invoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.getGenericInvoker(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.ensureGenericInvokers() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.DebuggerSupport.notifyInvoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/80893664.invokeExact_MT(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1268650975.identity_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.extensionCheck(jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/760563749.invokeSpecial_L3_I(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/281796497.delegate(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1859619422.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5387, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/532087022.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$482$earley_boyer.sc_list(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 15624, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1627428162.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD3P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD4P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1416777329.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/152005629.invokeStatic_L_I(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD10P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1714872797.invokeStatic_LLJIIL5J_L(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$313$171279AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2$loop3(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1769672798.exactInvoker(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1385790668.linkToCallSite(jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/707313445.reinvoke(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/908732422.guardWithCatch(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$290$168720JIIAAAAAJ$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees(jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$290$168720JIIAAAAAJ$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7554, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitStoreInsn(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5124, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.ofNoFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6196, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$3.invoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.internal.dynalink.linker.GuardedInvocation.hasBeenInvalidated() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntrySet.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.addUninitializedType(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkerServicesImpl.getGuardedInvocation(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.CompositeGuardingDynamicLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.CompositeTypeBasedGuardingDynamicLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornLinker.getGuardedInvocation(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6399, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.asTypeSafeReturn(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5402, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/592959754.dontInline(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/406752394.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.equalsWithoutType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$78$12734AA$earley_boyer.sc_cons(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.invokeSetter(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/258675339.invokeExact_MT(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$reinvoker/531511436.dontInline(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ContinuousArrayData.getOptimisticType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5141, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5327, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isAnonymousFunctionDeclaration() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/527652030.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/740977868.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1293, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveReturnNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isVariableArity() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5237, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getElementType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 816, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.lexify() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 55566, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenType.getLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getCompiler(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.newLocals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getInvalidatedProgramPoints() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.AbstractMap.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.FunctionInitializer.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.addCode(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction.<init>(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$SubList.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5126, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList$1.<init>(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getWidestLiveLocals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5182, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toPrimitive(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.getFirstDeadLocal(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 383, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.restOfHandle(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 381, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.requestRecompile(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1347473278.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/2003534796.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.ArrayType.store(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/801197928.invokeStatic_L3_L(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1281, OSR_BCI: -1 :: static jint sun.invoke.util.ValueConversions.longToInt(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 21760, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList.checkForComodification() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5504, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.getFirstDeadLocal(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2240, OSR_BCI: -1 :: static jboolean java.lang.Character.isDigit(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2240, OSR_BCI: -1 :: static jboolean java.lang.Character.isDigit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.ensureUniqueLabels(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 386, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/152728727.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 860, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.lexify() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 276, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.compileTypeSpecialization(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 276, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.addCode(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/2141179775.exactInvoker(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveASSIGN(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5407, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitIntInsn(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 387, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$313$171279AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2$loop3(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1970436060.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5348, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9472, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/413601558.linkToCallSite(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$79$20832A$earley_boyer.sc_reverse(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1561855528.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$308$19996AA$earley_boyer.sc_dualAppend(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1634834140.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$307$19829AA$earley_boyer.sc_reverseAppendBang(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1518864111.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 303, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2131025559.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 301, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/268468188.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/935715558.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1795960102.getLongField(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$554$168720JIIAAAAAJ$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1387228415.invokeStatic_I3_I(jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 327, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1136174814.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1819912129.linkToCallSite(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/743792379.guard(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 336, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$554$168720JIIAAAAAJ$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees(jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1726118601.guard(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 277, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/54648658.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1688019098.invokeSpecial_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/513638711.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1355387800.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/112893921.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$485$earley_boyer.sc_append(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1840663231.linkToTargetMethod(jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1626803358.reinvoke(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5389, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1918627686.delegate(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/63390.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1076496284.delegate(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1248236698.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1352397525.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/348100441.invokeSpecial_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1849201180.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.allocate() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.newFilter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1753365355.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.allocate(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1799583457.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1652149987.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.NE_STRICT(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 14597, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findProperty(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7429, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1495591569.linkToCallSite(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1740035246.invokeStatic_J_I(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5384, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/214212829.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.INSTANCEOF(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7428, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1940245575.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1191935951.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5388, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1792190683.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1161542555.exactInvoker(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/725271149.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8448, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/315771971.guardWithCatch(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/688387469.delegate(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1920, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2050, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/114804898.invokeVirtual_LJ_L(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9472, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.AccessorProperty.replaceMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9472, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getObjectPrototype() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/218007578.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7436, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1921022047.guard(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1644584210.linkToTargetMethod(jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1725899109.reinvoke(jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/167185492.invokeStatic_JJI_J(jobject, jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/596108811.guard(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2026062163.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunction.isStrict() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.invoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitTryCatchBlock(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.methodType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1621, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldWriter.visitEnd() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7425, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.toMethodDescriptorString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LLI.fieldCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 73, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.reflect.Method.getModifiers() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.getReturnType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.getDeclaringClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.Class$MethodArray.matchesNameAndDescriptor(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.Class$MethodArray.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.reflect.Method.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1281, OSR_BCI: -1 :: virtual jint java.util.IdentityHashMap$KeySet.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterTernaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$2200(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadTernaryNode(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5393, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBlockStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TryNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TryNode.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6528, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkerServicesImpl.getGuardedInvocation(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives.findMethodHandleType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6912, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.relink(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5358, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.filterArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandles.filterArgumentChecks(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 183, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$reinvoker/1524006274.dontInline(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.joinFromTry(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._try(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.addUnwarrantedOptimismHandlerLabel(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.markSymbolBoundariesInLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5639, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.internArguments() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.toBoolean(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isSigned() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.NativeArray.findGetIndexMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ContinuousArrayData.findFastGetIndexMethod(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1280, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.expandCapacity(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 3072, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.toUint32(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8456, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2082991407.linkToCallSite(jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3IL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/760487425.invokeStatic_L5ILL_L(jobject, jobject, jobject, jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L3ILL.make(jobject, jobject, jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L3ILL.<init>(jobject, jobject, jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/609943706.guard(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/2058013216.delegate(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/244355908.guard(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 21760, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/381707837.delegate(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1861206309.linkToCallSite(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1480806944.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/2008362258.invokeVirtual_L3I_V(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/590578720.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/364954228.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1263845074.delegate(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1944389077.guard(jobject, jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1835492991.linkToCallSite(jobject, jobject, jobject, jobject, jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/134112362.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$DMH/2081303229.invokeStatic_J_D(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$BMH/944586917.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2140341780.reinvoke(jobject, jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1689934449.guardWithCatch(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/2035509662.linkToCallSite(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/2112430778.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1286783232.invokeVirtual_LLII_V(jobject, jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 676, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isWritable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1553451030.invokeStatic_L4JL_L(jobject, jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1185334206.reinvoke(jobject, jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1181946054.guard(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1178923988.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/185845248.delegate(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2130300459.delegate(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1612953298.guard(jobject, jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1823472420.guard(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11521, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1426329391.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5764, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/596108811.guard(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/1629826799.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2008764899.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1447499999.delegate(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1878033156.linkToCallSite(jobject, jobject, jobject, jobject, jobject, jdouble, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1073348732.guardWithCatch(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/114891172.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1877059833.invokeStatic_L5DI_I(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1125292271.exactInvoker(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1871196571.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 16640, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1106131243.linkToCallSite(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$241$187566A$earley_boyer.BgL_makezd2parserzd2$L:3965$loop1$sc_loop1_127(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/552895644.delegate(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1290739366.delegate(jobject, jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.internalMemberName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1280, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.changeReturnType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2946, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/354405891.guard(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getFunctionPrototype() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/281796497.delegate(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$482$earley_boyer.sc_list(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/527652030.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 14593, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isStrict() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD3P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$313$171279AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2$loop3(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1280, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl$ArrayAccessor.getElementL(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 222, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.OptimisticReturnFilters.getOptimisticTypeGuard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 537, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.createInvoker(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1878413454.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.arrays.ArrayData.getIntOptimistic(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jint, jlong, jint, jint, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6528, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.CompositeGuardingDynamicLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getGetter(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RewriteException.toObjectArray(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12545, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.foldArguments(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1288296050.linkToCallSite(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 4491, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.runtime.arrays.ArrayData.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1893078564.reinvoke(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1321697288.delegate(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 222, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$104$33027AZ$earley_boyer.sc_vectorFillBang(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getArrayPrototype() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setIsArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.NativeArray.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.NativeArray.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.convertToObject() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.NativeArray.<init>(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/99361890.invokeStatic_L3IJ_L(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$181$155022AIJ$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2getza2_44za2(jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1616835353.linkToCallSite(jobject, jobject, jobject, jint, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1761324386.guardWithCatch(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1932340057.exactInvoker(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/464424542.reinvoke(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.IntArrayData.has(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.set(jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isRepresentableAsInt(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1478042950.exactInvoker(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1955915048.invokeStatic_LLI_L(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1575588264.delegate(jobject, jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/384763898.guardWithCatch(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/126560570.delegate(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1924582348.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1939144888.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/147903786.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/778078611.guard(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1875574014.reinvoke(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$208$155853AAJA$earley_boyer.BgL_makezd2parserzd2$L:3965$conf_set_adjoin(jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 357, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$251$157494AAADI$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2adjoinza2za2_46z00(jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1223851531.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.scripts.Script$Recompilation$191$155602A$earley_boyer.BgL_makezd2parserzd2$L:3965$conf_set_merge_new_bang(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7424, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1691875296.putLongField(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11528, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/805838836.delegate(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5507, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$313$171279AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2$loop3(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6019, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 17671, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/500129592.guardWithCatch(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7428, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/869928877.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5200, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$554$168720JIIAAAAAJ$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees(jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6658, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6403, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD4P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$78$12734AA$earley_boyer.sc_cons(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8449, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/800680282.linkToCallSite(jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 21761, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/917681894.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5295, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2131025559.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2008764899.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1669938422.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6406, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/1915058446.invokeStatic_LI_J(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9477, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1416777329.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6404, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1714872797.invokeStatic_LLJIIL5J_L(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6407, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1385790668.linkToCallSite(jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6407, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/908732422.guardWithCatch(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6408, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1769672798.exactInvoker(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6407, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/707313445.reinvoke(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7296, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6317, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/268468188.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.sameObject(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jlong, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1048994595.linkToCallSite(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1880646506.exactInvoker(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1544982424.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1935820073.invokeVirtual_LII_I(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.ScriptObject.getInt(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L5.copyWith(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/345603257.linkToCallSite(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/206287129.guard(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7429, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/961994506.linkToCallSite(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7426, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1329003565.invokeVirtual_LL_L(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1170152270.invokeStatic_L3JJ_L(jobject, jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$216$155022AJJ$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2getza2_44za2(jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1521331541.linkToCallSite(jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1608372476.guardWithCatch(jobject, jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual jdouble java.lang.Double.doubleValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1145662988.exactInvoker(jobject, jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/79941718.reinvoke(jobject, jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1669712678.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 288, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$245$157494AAJJA$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2adjoinza2za2_46z00(jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/886877453.delegate(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/1712669532.invokeStatic_D_J(jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/750597618.linkToCallSite(jobject, jdouble, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/882402449.guard(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8320, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8195, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$313$171279AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2$loop3(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5269, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/54648658.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$79$20832A$earley_boyer.sc_reverse(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5408, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$307$19829AA$earley_boyer.sc_reverseAppendBang(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7760, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$554$168720JIIAAAAAJ$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees(jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5428, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$308$19996AA$earley_boyer.sc_dualAppend(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5559, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$485$earley_boyer.sc_append(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5500, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/513638711.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5503, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/112893921.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8450, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD10P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8461, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$554$168720JIIAAAAAJ$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8451, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/706277948.delegate(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Throwable.getMessage() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/912252532.linkToTargetMethod(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1560290331.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1281, OSR_BCI: -1 :: virtual jdouble java.lang.Long.doubleValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jint java.lang.Math.getExponent(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/795372831.delegate(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$205$158378AAJA$earley_boyer.BgL_makezd2parserzd2$L:3965$conf_set_union(jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$207$164383A$earley_boyer.BgL_makezd2parserzd2$L:3965$forw$sc_loop1_75(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 18434, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.EQ_STRICT(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6408, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptRuntime.ADD(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/1364866418.linkToCallSite(jobject, jdouble, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$BMH/525246190.reinvoke(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$DMH/2066825183.invokeVirtual_LDI_D(jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jdouble jdk.nashorn.internal.runtime.ScriptObject.getDouble(jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jdouble jdk.nashorn.internal.runtime.arrays.ObjectArrayData.getDouble(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.toUint32(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/16440664.guard(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 379, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$231$155022AAD$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2getza2_44za2(jobject, jobject, jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD6P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/2022835295.delegate(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1131316523.invokeSpecial_LIL_V(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/801918227.dontInline(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11522, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1998538070.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.getPrefixName(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1911728085.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$reinvoker/1113168772.dontInline(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11523, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5126, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.doesNotHave(jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1408075340.guard(jobject, jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/850555841.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/133250414.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.construct(jboolean, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/706197430.invokeStatic_ILI_L(jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1952266650.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$180$31807IZ$earley_boyer.sc_makeVector(jobject, jobject, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.DeletedRangeArrayFilter.has(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.doesNotHaveEnsureLength(jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.doesNotHaveEnsureDelete(jlong, jlong, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5388, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.doesNotHaveCheckArrayKeys(jlong, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/2145970759.exactInvoker(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 12291, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1795569369.guardWithCatch(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$247$185687$earley_boyer.BgL_makezd2parserzd2$L:3965$loop1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$247$185687$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/889448078.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1685232414.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.construct(jboolean, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/510464020.invokeStatic_ILJ_L(jobject, jint, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2083341208.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 340, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RewriteException.create(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 248, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1547425104.invokeSpecial_LLI_L(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 248, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.prune(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 373, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/716910678.delegate(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8451, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/422881217.linkToCallSite(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 222, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$243$155853AADI$earley_boyer.BgL_makezd2parserzd2$L:3965$conf_set_adjoin(jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 271, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$102$31807JZ$earley_boyer.sc_makeVector(jobject, jobject, jlong, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 25864, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1664994873.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.OptimisticReturnFilters.ensureInt(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.OptimisticReturnFilters.isPrimitiveNumberWrapper(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.PropertyMap.newMap(jobject, jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornLinker.isNashornTypeOrUndefined(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornPrimitiveLinker.isJavaScriptPrimitive(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/907681414.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$73$74656AA$earley_boyer.sc_isEqual(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.CompiledFunction.getParamCount(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/591137559.identity_I(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.unlink(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedList$ListItr.remove() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1953789681.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1227983914.linkToCallSite(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9478, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/50421901.guard(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8450, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1307096070.invokeStatic_I_L(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5440, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.setName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 511, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.restOfHandle(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/400265383.delegate(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/2054147987.delegate(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1357379723.delegate(jobject, jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 594, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/900425684.linkToCallSite(jobject, jint, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 589, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/793770805.guardWithCatch(jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 589, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/195465343.guard(jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 589, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/676846563.reinvoke(jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 523, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1061804750.delegate(jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 594, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1863786744.reinvoke(jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1751779572.linkToCallSite(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6405, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/887895028.reinvoke(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 17667, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/1745317719.invokeStatic_L4JI_J(jobject, jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.scripts.Script$Recompilation$184$155853AAJI$earley_boyer.BgL_makezd2parserzd2$L:3965$conf_set_adjoin(jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/693192214.exactInvoker(jobject, jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/312501701.reinvoke(jobject, jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1755275498.linkToCallSite(jobject, jobject, jobject, jobject, jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1790143726.guardWithCatch(jobject, jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1495154270.reinvoke(jobject, jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 18947, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/397262543.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 221, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$230$31807AZ$earley_boyer.sc_makeVector(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 223, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.construct(jboolean, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6145, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.BlockLexicalContext.lastStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 101, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$195$159141AIAAAAA$earley_boyer.BgL_makezd2parserzd2$L:3965$forw(jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5504, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.ChainedCallSite.relink(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 321, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/922151033.invokeStatic_D_L(jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 321, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxDouble(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/257153818.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1769064119.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 522, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/31639297.linkToCallSite(jobject, jobject, jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 516, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/545841977.guard(jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 516, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1575824892.reinvoke(jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 522, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/568607185.reinvoke(jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 527, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1039332523.invokeStatic_LLJI_L(jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5319, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1136174814.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jdouble, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5504, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.relinkInternal(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.NativeArray$Prototype.G$push() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7425, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 15624, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1010467398.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 440, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2117912418.delegate(jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5341, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.remove(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.ClassEmitter.isScriptObject(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 475, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1595953398.invokeStatic_L3_I(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/256757005.guard(jobject, jobject, jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/358781145.guard(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10496, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1925023490.guardWithCatch(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10497, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/782954342.guard(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5760, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.invoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsWrappedThis() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isVarArg(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6418, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/80893664.invokeExact_MT(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 6427, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.DebuggerSupport.notifyInvoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getObjectValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5135, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadNull() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 301, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.<init>(jobject, jobject, jint, jint, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1960423402.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1166, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitAstoreInsn(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11520, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.invoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11520, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.getGenericInvoker(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1970, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$104$33027AZ$earley_boyer.sc_vectorFillBang(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 14593, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1859619422.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2052, OSR_BCI: -1 :: virtual jdouble java.lang.Double.doubleValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$127$145019AA$earley_boyer.BgL_makezd2parserzd2$ind(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1802598046.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$reinvoker/1782910133.dontInline(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1381895283.delegate(jobject, jobject, jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2060825992.delegate(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1280, OSR_BCI: -1 :: static jlong sun.invoke.util.ValueConversions.intToLong(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1263845074.delegate(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 41216, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1753447031.invokeVirtual_LIL_I(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/356904775.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1510954343.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.objects.NativeArray.pushObject(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.getContinuousArrayDataCCE(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.runtime.arrays.ObjectArrayData.fastPush(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.runtime.arrays.ArrayData.increaseLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/391618063.invokeStatic_LL_J(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/921760190.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5126, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.toBoolean(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6408, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/244355908.guard(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1711756103.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1653072658.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/2126814619.invokeStatic_L3IL5_L(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1933773958.linkToCallSite(jobject, jobject, jobject, jint, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/361064184.guardWithCatch(jobject, jobject, jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1475038091.linkToCallSite(jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/401299544.guardWithCatch(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$167$153481AA$earley_boyer.BgL_makezd2parserzd2$L:3965$sc_ind_43(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/215451422.invokeStatic_L3ILI_L(jobject, jobject, jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$185$156231AIAI$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2adjoinza2_45za2(jobject, jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/330639443.exactInvoker(jobject, jobject, jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1745631023.reinvoke(jobject, jobject, jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/786743336.exactInvoker(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1377076841.reinvoke(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/654971199.guard(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1689934449.guardWithCatch(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1191491178.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1608621326.linkToCallSite(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1408337297.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$29$11503IA$earley_boyer.sc_Pair(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 764, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/841283083.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1805162633.linkToCallSite(jobject, jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/263688769.reinvoke(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/503546835.invokeStatic_LJL_L(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$128$11503JA$earley_boyer.sc_Pair(jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1731824557.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/316564138.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/889844525.guard(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2024041851.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.convert(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.convert(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1456035721.guard(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/660103401.reinvoke(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5349, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$251$157494AAADI$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2adjoinza2za2_46z00(jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$241$187566A$earley_boyer.BgL_makezd2parserzd2$L:3965$loop1$sc_loop1_127(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/515713563.delegate(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 25860, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/2058013216.delegate(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 19712, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/192319053.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 19712, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/2090675927.invokeVirtual_LILI_V(jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/638407283.guard(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3624, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1817886095.linkToCallSite(jobject, jobject, jobject, jobject, jlong, jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3621, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1820917741.exactInvoker(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3618, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/60657033.reinvoke(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3624, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1252368698.guardWithCatch(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3624, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/602874477.reinvoke(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3624, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/2049813033.invokeStatic_L4JJL_I(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6020, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$241$187566A$earley_boyer.BgL_makezd2parserzd2$L:3965$loop1$sc_loop1_127(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 19714, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/179809345.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1587306957.guard(jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7425, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1823472420.guard(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 21762, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/521398971.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12546, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/300630516.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7424, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/552895644.delegate(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12545, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/590225254.guard(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12553, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/1629826799.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12554, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/185845248.delegate(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1878033156.linkToCallSite(jobject, jobject, jobject, jobject, jobject, jdouble, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1073348732.guardWithCatch(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/114891172.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1877059833.invokeStatic_L5DI_I(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1125292271.exactInvoker(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1871196571.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11520, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$DMH/2081303229.invokeStatic_J_D(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11520, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$BMH/944586917.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.convertToObject() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2033998618.delegate(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5386, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$181$155022AIJ$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2getza2_44za2(jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1006363302.invokeStatic_L3I_I(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1007251739.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1246947340.delegate(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 13568, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/134112362.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/622406510.delegate(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 35074, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1622740947.reinvoke(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 4846, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/506635245.linkToCallSite(jobject, jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 4832, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/761356729.guard(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 4832, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1437252722.reinvoke(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 4846, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/2115995874.reinvoke(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 4846, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1585095294.invokeVirtual_LJLI_V(jobject, jobject, jlong, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.create(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$208$155853AAJA$earley_boyer.BgL_makezd2parserzd2$L:3965$conf_set_adjoin(jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jint jdk.nashorn.internal.scripts.Script$Recompilation$191$155602A$earley_boyer.BgL_makezd2parserzd2$L:3965$conf_set_merge_new_bang(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD2P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5288, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1817886095.linkToCallSite(jobject, jobject, jobject, jobject, jlong, jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5282, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/60657033.reinvoke(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5288, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1252368698.guardWithCatch(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/331849229.linkToCallSite(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1026281226.guardWithCatch(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1843187428.linkToCallSite(jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/445763935.reinvoke(jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/956303508.invokeVirtual_LJJI_V(jobject, jobject, jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.set(jint, jlong, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.arrays.ArrayData.allocate(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2100088191.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$216$155022AJJ$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2getza2_44za2(jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.InvokeByName.getGetter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.NativeDate$Prototype.G$valueOf() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.InvokeByName.getInvoker() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$72$22009AA$earley_boyer.sc_member(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$98$33027AA$earley_boyer.sc_vectorFillBang(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/418974680.delegate(jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/2066406366.guard(jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1478800517.reinvoke(jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/569927998.guard(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/660566924.guard(jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1286383725.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 274, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ObjectCreator.<init>(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FieldObjectCreator.countFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FieldObjectCreator.findClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ObjectCreator.newMapCreator(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MapCreator.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MapCreator.makeFieldMap(jboolean, jboolean, jint, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.MethodEmitter.defineTemporaryLocalVariable(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.defineTemporaryLocalVariable(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 267, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadNEW(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 283, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 284, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$2.invoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.getParamType(jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getMostOptimisticType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.leaveTernaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterTernaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 355, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$8100(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7319, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArgumentPrimitive(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.joinFrom(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 282, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1692827845.exactInvoker(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.IntDeque.push(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveRuntimeNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 65679, OSR_BCI: 0 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2596, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.newExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.RuntimeNode.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveRuntimeNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 4372, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions$1.afterSetStatements(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveINSTANCEOF(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 270, OSR_BCI: -1 :: virtual void java.util.TreeMap.rotateLeft(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterNOT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.setTest(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.setTrueExpression(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.setFalseExpression(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.loadUndefined(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6456, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1561855528.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$946$22556AA$earley_boyer.sc_assq(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 20737, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$27$11503AA$earley_boyer.sc_Pair(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$943$131184A$earley_boyer.BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$970$129816A$earley_boyer.translate_args_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 15616, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2089817542.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$966$129490A$earley_boyer.translate_term_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6462, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1634834140.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 809, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$946$22556AA$earley_boyer.sc_assq(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.isUnparsedFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.UnwarrantedOptimismException.getReturnType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6528, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.CompositeTypeBasedGuardingDynamicLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5760, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.joinFrom(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._catch(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.newarray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1299, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getMostOptimisticType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FindScopeDepths.leaveBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.keyIterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode.setArgs(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.BranchOptimizer.branchOptimizer(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 101, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap.transfer(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.type() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1331649514.reinvoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 285, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 290, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.JSType.typeName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1019$136637AA$earley_boyer.one_way_unify1_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 291, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 296, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 325, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1836797772.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 297, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/514296946.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 350, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.OptimisticReturnFilters.getProvableTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 303, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6420, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.visitField(jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1117886685.exactInvoker(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void sun.misc.Cleaner.clean() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jboolean sun.misc.Cleaner.remove(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.of(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/168967566.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1518735658.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 317, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1321102372.linkToCallSite(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 267, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptRuntime.TYPEOF(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 333, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/483244772.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1039$136637AA$earley_boyer.one_way_unify1_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 233, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1525409936.delegate(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5443, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1331649514.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 323, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1204700331.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 323, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$1020$3664A$earley_boyer.sc_isNumber(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1032$136299A$earley_boyer.rewrite_args_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/206287129.guard(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5386, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/2054147987.delegate(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6436, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1039$136637AA$earley_boyer.one_way_unify1_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1037$138958AA$earley_boyer.is_term_equal_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/1018937824.invokeStatic_I_J(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1953789681.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1227983914.linkToCallSite(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 297, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1028$132564AA$earley_boyer.apply_subst_lst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 137218, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.strictEquals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5392, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7824, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11333, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1836797772.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8448, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/168967566.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8452, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1518735658.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5387, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1032$136299A$earley_boyer.rewrite_args_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6539, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1032$136299A$earley_boyer.rewrite_args_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5431, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList$1.hasPrevious() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9483, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1032$136299A$earley_boyer.rewrite_args_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 32784, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 49680, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6403, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1037$138958AA$earley_boyer.is_term_equal_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7555, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 79632, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5289, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1028$132564AA$earley_boyer.apply_subst_lst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.AssignSymbols.access$100(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 304, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 316, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Statement.hasTerminalFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10497, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/36202360.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5304, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setIsFunction() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 14593, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/725271149.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 317, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 322, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 323, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.initLocals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 330, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5195, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.NameCodec.decode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1050$138958AA$earley_boyer.is_term_equal_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/745160567.invokeStatic_L4_I(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/216855579.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$1049$140263AA$earley_boyer.is_term_member_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.Collections$EmptySet.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6526, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.asTypeSafeReturn(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 13, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 14, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6528, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 642, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$966$129490A$earley_boyer.translate_term_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 18980, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1039$136637AA$earley_boyer.one_way_unify1_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5673, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1028$132564AA$earley_boyer.apply_subst_lst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 80218, OSR_BCI: 158 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$73$74656AA$earley_boyer.sc_isEqual(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5259, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptRuntime.TYPEOF(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5309, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1321102372.linkToCallSite(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5225, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1525409936.delegate(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9987, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6185, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1028$132564AA$earley_boyer.apply_subst_lst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6211, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1204700331.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6211, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$1020$3664A$earley_boyer.sc_isNumber(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6349, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/483244772.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 44580, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1039$136637AA$earley_boyer.one_way_unify1_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 112912, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6697, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1028$132564AA$earley_boyer.apply_subst_lst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 14851, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 170128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.G$undefined() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 43054, OSR_BCI: 96 :: virtual void java.util.concurrent.ConcurrentHashMap.transfer(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5400, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isVar() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5504, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.put(jobject, jobject, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 330, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.Global.allocate(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 15, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 21891, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 17, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.security.Permissions.getPermissionCollection(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 30211, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 348560, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 744576, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1663619914.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual void java.security.BasicPermissionCollection.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 19, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5440, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1050$138958AA$earley_boyer.is_term_equal_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5446, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$970$129816A$earley_boyer.translate_args_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 21, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$943$131184A$earley_boyer.BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 45955, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 29865, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1028$132564AA$earley_boyer.apply_subst_lst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6464, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1050$138958AA$earley_boyer.is_term_equal_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5353, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.getOptimisticCoercedType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 23, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 537360, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7360, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1050$138958AA$earley_boyer.is_term_equal_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2966, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.storeCompilerConstant(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6403, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.BinaryNode.isString(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 23809, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/866237328.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 23810, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/639872291.guardWithCatch(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 23812, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1376474236.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 25, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 65411, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 253, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.UnwarrantedOptimismException.<init>(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 27, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$966$129490A$earley_boyer.translate_term_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Throwable.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Throwable.getLocalizedMessage() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 16606, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.allVarsInScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 320, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FieldObjectCreator.makeMap() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 320, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ObjectCreator.helpOptimisticRecognizeDuplicateIdentity(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/379836839.guard(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setProgramPoint(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 325, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FieldObjectCreator.<init>(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 294, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$5.<init>(jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.add(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/54182405.guard(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.IntType._return(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/819869420.invokeStatic_L5_I(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1956246582.linkToCallSite(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/498444561.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$1048$132894AAA$earley_boyer.tautologyp_nboyer(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1074638035.guard(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/768745280.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5384, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/745160567.invokeStatic_L4_I(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/216855579.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6407, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$1049$140263AA$earley_boyer.is_term_member_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/953872127.linkToCallSite(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/1819833443.dontInline(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5310, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toPrimitive(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toPrimitive(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getDefaultValue(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getDefaultValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/402269681.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.Bootstrap.isCallable(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/553871028.invokeExact_MT(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.requirePrimitive(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2007411359.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.swap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.types.Type.swap(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5386, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.storeTemp(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.swap() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 331, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 337, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 16610, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isRepresentableAsInt(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.NumberType.getBytecodeStackType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5348, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.addReference(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 252, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 941, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodVisitor.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6146, OSR_BCI: -1 :: virtual jint java.io.DataInputStream.readInt() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.misc.URLClassPath.access$000(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1778, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.MethodEmitter.hasScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$2.enterAccessNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.CallNode.isApplyToCall() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2$4.<init>(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2$4.loadStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2$4.consumeStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getOptimisticType(jobject) <<<<<<<
EarleyBoyer: 581
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeEvaluator.getOptimisticType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 3, Hotcount: 16612, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isRepresentableAsInt(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.initLocals(jobject) <<<<<<<
----
Score (version 9): 581
>>> DEOPT COUNTER: 522 <<<
