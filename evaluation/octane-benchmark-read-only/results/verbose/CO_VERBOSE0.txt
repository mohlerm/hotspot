run-benchmark-1op.sh: line 1: !/bin/sh: No such file or directory
use profiles with mode 0
NOTE: no explicit compiler cache profiles file specified, uses -XX:CacheProfilesFile=cached_profiles.dat.
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1280, OSR_BCI: -1 :: virtual jint java.lang.String.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 377, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2432, OSR_BCI: -1 :: virtual void java.lang.Object.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 676, OSR_BCI: -1 :: virtual jint java.lang.String.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.concurrent.ConcurrentHashMap.tabAt(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12800, OSR_BCI: -1 :: virtual jchar java.lang.String.charAt(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2560, OSR_BCI: -1 :: virtual void java.lang.Object.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.concurrent.ConcurrentHashMap.setTabAt(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 413, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jobject java.lang.System.getSecurityManager() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 186, OSR_BCI: -1 :: virtual jobject java.io.UnixFileSystem.normalize(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 867, OSR_BCI: -1 :: virtual jboolean java.lang.String.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.expandCapacity(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 356, OSR_BCI: -1 :: virtual jint sun.nio.cs.UTF_8$Encoder.encode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.ensureCapacityInternal(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2304, OSR_BCI: -1 :: static jint java.lang.Math.min(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.jar.Attributes$Name.isValid(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.jar.Attributes$Name.isAlpha(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jint sun.nio.cs.UTF_8$Decoder.decode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.StringCoding$StringDecoder.requestedCharsetName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ref.SoftReference.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1024, OSR_BCI: -1 :: virtual jobject java.lang.ref.Reference.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jint java.lang.StringCoding.scale(jint, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.getMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 512, OSR_BCI: -1 :: static jint java.lang.ThreadLocal.access$400(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jobject java.lang.StringCoding.deref(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jint java.lang.StringCoding.access$000(jint, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jobject java.lang.ThreadLocal$ThreadLocalMap.access$000(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal$ThreadLocalMap.getEntry(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jint java.util.HashMap.hash(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint sun.misc.ASCIICaseInsensitiveComparator.toLower(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.misc.ASCIICaseInsensitiveComparator.isUpper(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.jar.Manifest$FastInputStream.readLine(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.String.checkBounds(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.getNode(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.nio.cs.UTF_8.historicalName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.jar.Manifest.toLower(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.put(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap$Node.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.HashMap.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.StringCoding.decode(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.jar.Manifest$FastInputStream.readLine(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.jar.Attributes$Name.isDigit(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jbyte java.util.jar.Manifest$FastInputStream.peek() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.LinkedHashMap.removeEldestEntry(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.StringCoding$StringDecoder.decode(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jfloat java.nio.charset.CharsetDecoder.maxCharsPerByte() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.StringCoding.access$100(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.StringCoding.safeTrim(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.jar.Manifest.getEntries() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 167, OSR_BCI: -1 :: virtual void java.util.jar.Attributes.read(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.CharacterData.of(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.getProperties(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.toLowerCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toLowerCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 181, OSR_BCI: -1 :: static jint sun.misc.ASCIICaseInsensitiveComparator.lowerCaseHashCode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 368, OSR_BCI: -1 :: static jboolean java.lang.Character.isSurrogate(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 350, OSR_BCI: -1 :: virtual jobject java.lang.StringCoding$StringDecoder.charsetName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1204, OSR_BCI: -1 :: virtual jint java.lang.String.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.newNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.String.getChars(jint, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 768, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 768, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 444, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 444, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 110, OSR_BCI: -1 :: virtual jboolean sun.security.util.ManifestDigester.findSection(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 280, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 280, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isBmpCodePoint(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 219, OSR_BCI: -1 :: static void sun.misc.FDBigInteger.mult(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.misc.FDBigInteger.<init>(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.misc.FDBigInteger.trimLeadingZeros() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.misc.FDBigInteger.makeImmutable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.FDBigInteger.mult(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint sun.security.util.ObjectIdentifier.pack7Oid(jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint sun.security.util.ObjectIdentifier.pack7Oid(jobject, jint, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.security.util.ObjectIdentifier.pack(jobject, jint, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void sun.security.util.ObjectIdentifier.checkOtherComponent(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.UnixFileSystem.prefixLength(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jfloat java.nio.charset.CharsetEncoder.maxBytesPerChar() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.io.File.getPrefixLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.newNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$Entry.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.linkNodeLast(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.toUpperCaseEx(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toUpperCaseEx(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1319, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.getProperties(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 142, OSR_BCI: -1 :: virtual jobject java.lang.String.toLowerCase(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 212, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.util.locale.BaseLocale.getLanguage() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5387, OSR_BCI: -1 :: static jobject java.lang.CharacterData.of(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5360, OSR_BCI: -1 :: static jboolean java.lang.Character.isSurrogate(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap$Node.getValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.ByteArrayInputStream.read() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.ByteArrayInputStream.available() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractMap.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Float.isNaN(jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Math.max(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.jar.Attributes$Name.isValid(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>(jint, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.HashMap.tableSizeFor(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.jar.Attributes$Name.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 801, OSR_BCI: -1 :: virtual jint sun.nio.cs.UTF_8$Decoder.decode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.jar.Attributes.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.jar.Manifest.getAttributes(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.jar.Manifest.parseName(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.jar.Attributes.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 319, OSR_BCI: -1 :: virtual void java.util.jar.Attributes$Name.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 949, OSR_BCI: -1 :: virtual jint java.util.jar.Manifest$FastInputStream.readLine(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 279, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap$Node.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Hashtable.put(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Hashtable.addEntry(jint, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Hashtable$Entry.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.Number.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Byte.<init>(jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.concurrent.ConcurrentHashMap.spread(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Integer.reverseBytes(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1392, OSR_BCI: -1 :: static jint java.lang.Integer.reverseBytes(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 100, OSR_BCI: -1 :: virtual void sun.security.provider.SHA.implCompress(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 241, OSR_BCI: -1 :: static void sun.security.provider.ByteArrayAccess.b2iBig64(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 113, OSR_BCI: -1 :: static jint java.math.BigInteger.mulAdd(jobject, jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.math.BigInteger.addOne(jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 772, OSR_BCI: -1 :: static jint java.math.BigInteger.mulAdd(jobject, jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5444, OSR_BCI: -1 :: static jint java.math.BigInteger.addOne(jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject java.math.BigInteger.montReduce(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 112, OSR_BCI: -1 :: static jobject java.math.BigInteger.squareToLen(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 115, OSR_BCI: -1 :: static void java.math.BigInteger.primitiveLeftShift(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: static jint java.math.BigInteger.intArrayCmpToLen(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 61440, OSR_BCI: 138 :: virtual jobject java.math.BigInteger.multiplyToLen(jobject, jint, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 71, OSR_BCI: -1 :: virtual jobject java.math.BigInteger.multiplyToLen(jobject, jint, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 105, OSR_BCI: -1 :: virtual jint java.math.MutableBigInteger.mulsub(jobject, jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 56280, OSR_BCI: 279 :: virtual void sun.security.provider.SHA.implCompress(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap$Node.getKey() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Hashtable.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.ArrayList.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 187, OSR_BCI: -1 :: virtual jobject java.lang.String.toUpperCase(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5444, OSR_BCI: -1 :: static jboolean java.lang.Character.isBmpCodePoint(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 287, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5397, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toLowerCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.security.Provider$ServiceKey.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.Provider$ServiceKey.<init>(jobject, jobject, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.Provider$ServiceKey.<init>(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.LinkedHashMap$LinkedHashIterator.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedEntryIterator.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedEntryIterator.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedHashIterator.nextNode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.ClassLoader.checkName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 3584, OSR_BCI: -1 :: virtual jint java.lang.String.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1224, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.concurrent.ConcurrentHashMap.casTabAt(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.StringCoding.safeTrim(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 97240, OSR_BCI: 12 :: virtual void sun.security.provider.SHA.implCompress(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 733, OSR_BCI: -1 :: virtual void sun.security.provider.SHA.implCompress(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putVal(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putIfAbsent(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitByte(jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.ByteVectorImpl.add(jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getHost() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.rangeCheck(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.elementData(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.getClassLoadingLock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.findLoadedClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 378, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap.addCount(jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getProtocol() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong java.util.zip.ZStreamRef.address() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1029, OSR_BCI: -1 :: virtual jobject java.lang.StringCoding$StringDecoder.decode(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.getMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1420, OSR_BCI: -1 :: virtual jfloat java.nio.charset.CharsetDecoder.maxCharsPerByte() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1287, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5603, OSR_BCI: -1 :: virtual jboolean java.lang.String.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1521, OSR_BCI: -1 :: virtual void java.util.jar.Attributes.read(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: static void java.lang.String.checkBounds(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1670, OSR_BCI: -1 :: static jint sun.misc.ASCIICaseInsensitiveComparator.lowerCaseHashCode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1662, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getPath() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getAuthority() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.io.File.isInvalid() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.String.getBytes(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.StringCoding.encode(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.StringCoding$StringEncoder.encode(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.StringCoding.access$300(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.StringCoding$StringEncoder.requestedCharsetName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.Vector.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getRef() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.String.endsWith(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getFile() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5387, OSR_BCI: -1 :: static jint java.lang.Math.max(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1755, OSR_BCI: -1 :: static jboolean java.util.jar.Attributes$Name.isValid(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5392, OSR_BCI: -1 :: virtual jobject java.util.HashMap.put(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject java.util.zip.ZipFile.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.<init>(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.security.util.ManifestDigester$Entry.<init>(jint, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean sun.security.util.ManifestDigester.isNameAttr(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5436, OSR_BCI: -1 :: static jobject java.lang.StringCoding.decode(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 60005, OSR_BCI: 20 :: virtual jboolean sun.security.util.ManifestDigester.findSection(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ByteArrayInputStream.mark(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7517, OSR_BCI: -1 :: virtual jint java.util.jar.Manifest$FastInputStream.readLine(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: virtual jbyte java.util.jar.Manifest$FastInputStream.peek() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6453, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6533, OSR_BCI: -1 :: virtual jobject java.lang.StringCoding$StringDecoder.decode(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.math.MutableBigInteger.compare(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.math.BigInteger.bitLengthForInt(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 344, OSR_BCI: -1 :: static jint java.lang.Integer.numberOfLeadingZeros(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 133, OSR_BCI: -1 :: static jint java.math.BigInteger.subN(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 104318, OSR_BCI: 138 :: virtual jobject java.math.BigInteger.multiplyToLen(jobject, jint, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.math.MutableBigInteger.unsignedLongCompare(jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.HashMap$HashIterator.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.security.util.SignatureFileVerifier.updateSigners(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$EntryIterator.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$EntryIterator.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$HashIterator.nextNode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.security.util.SignatureFileVerifier.matches(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 286, OSR_BCI: -1 :: virtual void java.lang.ref.Reference.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1390, OSR_BCI: -1 :: static void java.util.concurrent.ConcurrentHashMap.setTabAt(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.String.replace(jchar, jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractCollection.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.nio.Buffer.checkIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong java.nio.DirectLongBufferU.ix(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.zip.Inflater.ensureOpen() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jint java.util.BitSet.wordIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7680, OSR_BCI: -1 :: static jint java.lang.Math.min(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.security.ProtectionDomain.getCodeSource() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getQuery() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.String.toCharArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual void java.util.BitSet.checkInvariants() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.loadClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.Launcher$AppClassLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 210, OSR_BCI: -1 :: virtual jobject java.nio.charset.CharsetEncoder.reset() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 210, OSR_BCI: -1 :: virtual void java.nio.charset.CharsetEncoder.implReset() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.zip.Inflater.inflate(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 817, OSR_BCI: -1 :: virtual jboolean sun.security.util.ManifestDigester.findSection(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractList.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint sun.security.util.DerInputStream.getLength(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 200, OSR_BCI: -1 :: static jint java.util.Arrays.hashCode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.math.MutableBigInteger.getLowestSetBit() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Integer.numberOfTrailingZeros(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.math.MutableBigInteger.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.math.MutableBigInteger.normalize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.math.MutableBigInteger.primitiveRightShift(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.math.MutableBigInteger.rightShift(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.math.MutableBigInteger.isZero() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.math.MutableBigInteger.leftShift(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.math.MutableBigInteger.isOne() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.math.MutableBigInteger.subtract(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 167, OSR_BCI: -1 :: virtual jobject java.math.BigInteger.multiplyToLen(jobject, jint, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 892, OSR_BCI: -1 :: static jobject java.math.BigInteger.montReduce(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 752, OSR_BCI: -1 :: static jobject java.math.BigInteger.squareToLen(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 769, OSR_BCI: -1 :: static void java.math.BigInteger.primitiveLeftShift(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.Provider.checkInitialized() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5233, OSR_BCI: -1 :: static void sun.security.provider.ByteArrayAccess.b2iBig64(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 861, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.net.URL.getPort() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.InputStream.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.String.equalsIgnoreCase(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.zip.ZipFile.ensureOpen() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.zip.ZipCoder.getBytes(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.zip.ZipCoder.encoder() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jchar java.lang.Character.toUpperCase(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.toUpperCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toUpperCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jchar java.lang.Character.toLowerCase(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 113, OSR_BCI: -1 :: virtual jint sun.security.provider.DigestBase.implCompressMultiBlock(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ref.ReferenceQueue.poll() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 368, OSR_BCI: -1 :: virtual void java.util.ArrayList.ensureCapacityInternal(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 368, OSR_BCI: -1 :: virtual void java.util.ArrayList.ensureExplicitCapacity(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath.getLoader(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.net.URLStreamHandler.getDefaultPort() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 228, OSR_BCI: -1 :: virtual void java.util.ArrayList.grow(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.util.zip.ZipFile.access$400(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.zip.InflaterInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.zip.InflaterInputStream.ensureOpen() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.misc.URLClassPath$JarLoader.ensureOpen() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 121, OSR_BCI: -1 :: static jobject sun.net.www.ParseUtil.encodePath(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject sun.misc.URLClassPath$JarLoader.access$500(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong java.nio.DirectLongBufferU.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.nio.DirectLongBufferU.put(jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.security.CodeSource.getLocation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject java.net.URLClassLoader.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.jar.JarFile.getJarEntry(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.jar.JarFile.getEntry(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.zip.ZipFile.getEntry(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.WeakHashMap.maskNull(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.WeakHashMap.hash(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.getTable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.WeakHashMap.expungeStaleEntries() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.WeakHashMap.indexFor(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath$JarLoader.getResource(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Vector.addElement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Vector.ensureCapacityHelper(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.jar.JarVerifier.update(jint, jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3411, OSR_BCI: -1 :: virtual jobject java.util.jar.Manifest.getAttributes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3410, OSR_BCI: -1 :: virtual jint java.util.jar.Attributes.size() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2048, OSR_BCI: 3 :: static jint sun.nio.cs.ISO_8859_1$Encoder.encodeISOArray(jobject, jint, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.security.provider.DigestBase.engineUpdate(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5448, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toUpperCaseEx(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 111, OSR_BCI: -1 :: static jint sun.nio.cs.ISO_8859_1$Encoder.encodeISOArray(jobject, jint, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2048, OSR_BCI: 76 :: virtual jint java.util.Base64$Decoder.outLength(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2048, OSR_BCI: 28 :: virtual jint java.util.Base64$Decoder.decode0(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3584, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3584, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 115, OSR_BCI: -1 :: virtual jint java.util.Base64$Decoder.outLength(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.String.concat(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.String.getChars(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 349, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 117, OSR_BCI: -1 :: virtual jint java.util.Base64$Decoder.decode0(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject spec.harness.Util.getPropertyHelper(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject spec.harness.Util.getProperty(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4474, OSR_BCI: -1 :: static jobject java.util.concurrent.ConcurrentHashMap.tabAt(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1281, OSR_BCI: -1 :: static jboolean java.util.concurrent.ConcurrentHashMap.casTabAt(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.MethodType.checkPtype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalize(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.makeImpl(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType.<init>(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: static jobject java.util.Objects.requireNonNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType$ConcurrentWeakInternSet.expungeStaleElements() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Class.getClassLoader0() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnclosingMethodInfo() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.Short.<init>(jshort) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.Long.<init>(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindIsField(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isInvocable() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isTypeVisible(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterType(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.initResolved(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 126, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isResolved() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 272, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.testFlags(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 110, OSR_BCI: -1 :: virtual jobject java.lang.Class.getClassLoader() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isStatic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isStatic(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.testAllFlags(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jbyte java.lang.invoke.MemberName.getReferenceKind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 72, OSR_BCI: -1 :: virtual jobject java.lang.Class.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint java.lang.invoke.MethodType.checkPtypes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void java.lang.invoke.MethodType.checkSlotCount(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalize(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.Object.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 108, OSR_BCI: -1 :: virtual void java.lang.ref.WeakReference.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.insertParameterTypes(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterSlotCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodTypeForm.parameterSlotCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jchar java.lang.invoke.MethodTypeForm.unpack(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint java.lang.invoke.MemberName.flagsMods(jint, jint, jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.init(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName$Factory.resolveOrFail(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName$Factory.resolve(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.checkForTypeAlias() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MemberName.access$002(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void java.lang.invoke.MemberName.access$200(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.argument(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodOrFieldType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isConstructor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.initIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forPrimitiveType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getInvocationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.methodType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject java.lang.Class.getReflectionFactory() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject sun.reflect.ReflectionFactory.langReflectAccess() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.lang.reflect.AccessibleObject.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isPublic(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.lookupClassOrNull() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isMethod() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.basicType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isSamePackage(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.cachedLambdaForm(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static void java.lang.Class.checkInitted() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Class.reflectionData() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableCollection$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameterType(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$BasicType.basicTypeSlots() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint sun.invoke.util.Wrapper.stackSlots() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putByte(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.AbstractList$Itr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.util.Arrays$ArrayList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forBasicType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.AbstractList$Itr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.checkForComodification() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void sun.invoke.util.BytecodeDescriptor.unparseSig(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ByteVector.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 31, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ByteVector.enlarge(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: static jint jdk.internal.org.objectweb.asm.Type.getArgumentsAndReturnSizes(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putShort(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putShort(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.MethodWriter.visitAnnotation(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 9, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationWriter.<init>(jobject, jboolean, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationVisitor.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.toMethodDescriptorString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newClassItem(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 11, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.put12(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put122(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.execute(jint, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean sun.reflect.misc.ReflectUtil.isVMAnonymousClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.push(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.getInternalName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.addType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.pop(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getType(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint jdk.internal.org.objectweb.asm.Frame.type(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Item.isEqualTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putInt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationWriter.visitEnd() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putByteArray(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 390, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 503, OSR_BCI: 74 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Label.resolve(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn(jint, jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newMethodItem(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newNameType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newNameTypeItem(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getArgumentTypes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getDescriptor() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.StringBuffer.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.StringBuffer.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Type.getDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.append(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.visitMethod(jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodVisitor.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitInsn(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.noSuccessor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMaxs(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitEnd() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.MethodWriter.getSize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.put11(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkAccess(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 102, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isProtected(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.String.toString() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 416, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 55, OSR_BCI: -1 :: virtual jobject java.util.AbstractList$Itr.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint java.util.SubList.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.AbstractList$ListItr.nextIndex() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint java.util.SubList.access$200(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 508, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.testAnyFlags(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint java.util.ArrayList.access$100(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 11032, OSR_BCI: 76 :: virtual jobject java.lang.String.replace(jchar, jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.returnType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$Itr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$Itr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isCallerSensitive() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isClassAccessible(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint sun.invoke.util.VerifyAccess.getClassModifiers(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getDeclaringClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.lang.Class.checkMemberAccess(jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jboolean java.lang.Class.arrayContentsEq(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.Enum.ordinal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1335, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 513, OSR_BCI: -1 :: virtual jobject java.lang.String.replace(jchar, jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.type() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar java.lang.invoke.LambdaForm$BasicType.basicTypeChar() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.access$100(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.form() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.compileToBytecode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.index() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1280, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.expandCapacity(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1282, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.util.Arrays.rangeCheck(jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.arity() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jshort java.lang.invoke.LambdaForm$Name.access$000(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.CallSite.maybeReBox(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.String.valueOf(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.toArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.internalMemberName(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$Itr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$Itr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.checkForComodification() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3390, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3393, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3458, OSR_BCI: -1 :: virtual void java.lang.String.getChars(jint, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jint java.lang.Integer.stringSize(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: static void java.lang.Integer.getChars(jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: static void java.lang.Integer.getChars(jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2211, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 395, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Type.<init>(jint, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.castReference(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.AbstractValidatingLambdaMetafactory.isAdaptableTo(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.InnerClassLambdaMetafactory.getOpcodeOffset(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 7184, OSR_BCI: -1 :: virtual jobject java.util.HashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7184, OSR_BCI: -1 :: virtual jobject java.util.HashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2862, OSR_BCI: -1 :: virtual jobject java.util.jar.Attributes.putValue(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2862, OSR_BCI: -1 :: virtual jobject java.util.jar.Attributes.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2858, OSR_BCI: -1 :: virtual void java.util.jar.Attributes.read(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3351, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.zip.ZipFile$ZipFileInflaterInputStream.fill() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.zip.ZipFile$ZipFileInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static void java.util.zip.ZipFile.access$1300(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.zip.ZipFile.ensureOpenOrZipException() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jint java.util.zip.ZipFile.access$1400(jlong, jlong, jlong, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.zip.Inflater.setInput(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 197, OSR_BCI: -1 :: virtual void java.util.zip.ZipFile$ZipFileInputStream.close() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.File.getPath() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 165, OSR_BCI: -1 :: virtual void sun.misc.PerfCounter.addElapsedTimeFrom(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 330, OSR_BCI: -1 :: virtual void sun.misc.PerfCounter.add(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 330, OSR_BCI: -1 :: virtual jlong sun.misc.PerfCounter.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.misc.URLClassPath.access$000(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.Reader.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.nio.ByteBuffer.arrayOffset() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.nio.ByteBuffer.arrayOffset() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.nio.CharBuffer.arrayOffset() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.nio.CharBuffer.position(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.nio.CharBuffer.position(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.nio.CharBuffer.position(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.nio.Buffer.remaining() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.array() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.array() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.nio.CharBuffer.array() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void sun.nio.cs.UTF_8.access$200(jobject, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void sun.nio.cs.UTF_8.updatePositions(jobject, jint, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 284, OSR_BCI: -1 :: virtual jobject java.nio.Buffer.position(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 284, OSR_BCI: -1 :: virtual jobject java.nio.Buffer.position(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierPart(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isJavaIdentifierPart(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.BufferedReader.readLine() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.BufferedReader.readLine() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.BufferedReader.readLine(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.BufferedReader.readLine(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.BufferedReader.fill() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.BufferedReader.fill() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.InputStreamReader.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.nio.CharBuffer.limit(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 285, OSR_BCI: -1 :: virtual jobject java.nio.Buffer.position(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.nio.cs.UTF_8$Decoder.decodeLoop(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.nio.ByteBuffer.hasArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.nio.CharBuffer.hasArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.nio.charset.CoderResult.isOverflow() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.nio.Buffer.hasRemaining() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.nio.HeapByteBuffer.ix(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.flip() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.flip() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.nio.Buffer.flip() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.lang.reflect.Executable.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath$FileLoader.getResource(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void sun.misc.URLClassPath.check(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.append(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 107, OSR_BCI: -1 :: virtual void java.net.URL.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 109, OSR_BCI: -1 :: virtual void java.net.URL.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 18015, OSR_BCI: 69 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 68, OSR_BCI: -1 :: virtual void java.io.File.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: virtual jobject java.io.UnixFileSystem.resolve(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.net.URLStreamHandler.setURL(jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.net.URL.set(jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 159, OSR_BCI: -1 :: virtual jboolean java.io.File.exists() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1177, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 50176, OSR_BCI: 20 :: virtual jint sun.nio.cs.UTF_8$Encoder.encode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 342, OSR_BCI: -1 :: virtual jint java.io.UnixFileSystem.getBooleanAttributes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 387, OSR_BCI: -1 :: virtual jobject java.io.File.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 286, OSR_BCI: -1 :: virtual jboolean java.lang.String.regionMatches(jboolean, jint, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 617, OSR_BCI: -1 :: virtual jboolean java.util.BitSet.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 18506, OSR_BCI: 10 :: virtual jobject java.io.UnixFileSystem.normalize(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 11743, OSR_BCI: 37 :: virtual jboolean java.lang.String.startsWith(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 630, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jobject java.util.HashMap.newNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 997, OSR_BCI: 147 :: virtual void java.net.URL.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.net.www.protocol.file.Handler.parseURL(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.net.URLStreamHandler.parseURL(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getUserInfo() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ExpiringCache.entryFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.File.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 908, OSR_BCI: -1 :: virtual jint sun.nio.cs.UTF_8$Encoder.encode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3331, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4317, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 412, OSR_BCI: -1 :: virtual void java.net.URL.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 425, OSR_BCI: -1 :: virtual jobject java.io.UnixFileSystem.normalize(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: static jint java.lang.Character.charCount(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: static jint java.lang.Character.charCount(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1024, OSR_BCI: 2 :: virtual jint java.util.StringTokenizer.scanToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.skipDelimiters(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 371, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.scanToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.StringTokenizer.hasMoreTokens() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.StringTokenizer.nextToken() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jboolean sun.util.locale.LocaleUtils.isUpper(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.util.locale.provider.LocaleProviderAdapter.getAdapter(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.util.Locale.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 226, OSR_BCI: -1 :: virtual void java.lang.ref.SoftReference.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.LinkedList.linkLast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.LinkedList$Node.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.util.Locale.getLanguage() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Locale.getCountry() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.concurrent.ConcurrentHashMap.containsKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 15392, OSR_BCI: 29 :: static jobject sun.net.www.ParseUtil.encodePath(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.DataInputStream.readInt() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.io.BufferedInputStream.getBufIfOpen() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.DataInputStream.readFully(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.DataInputStream.readUTF() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.io.DataInputStream.readUTF(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.io.DataInputStream.readUTF(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.io.DataInputStream.readUnsignedShort() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 450, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isTypeVisible(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.nio.cs.StreamDecoder.forInputStreamReader(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamDecoder.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamDecoder.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 20, OSR_BCI: -1 :: virtual jobject java.nio.Buffer.limit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 20, OSR_BCI: -1 :: virtual jobject java.nio.Buffer.limit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.BufferedReader.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint sun.nio.cs.StreamDecoder.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamDecoder.ensureOpen() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint sun.nio.cs.StreamDecoder.implRead(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.nio.CharBuffer.wrap(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.nio.CharBuffer.<init>(jint, jint, jint, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint sun.nio.cs.StreamDecoder.readBytes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.nio.HeapByteBuffer.compact() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 214, OSR_BCI: -1 :: virtual jint java.lang.String.codePointAt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jint java.lang.Character.codePointAtImpl(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jboolean java.lang.Character.isHighSurrogate(jchar) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 268, OSR_BCI: -1 :: virtual jobject java.nio.Buffer.limit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 303, OSR_BCI: -1 :: static jobject sun.net.www.ParseUtil.encodePath(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 69, OSR_BCI: -1 :: static jobject java.lang.Integer.valueOf(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.text.DecimalFormat.expandAffix(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.setLength(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.StringBuffer.setLength(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.Properties.getProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1314, OSR_BCI: -1 :: virtual jobject java.util.Hashtable.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.Long.parseLong(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 298, OSR_BCI: -1 :: static jlong java.lang.Long.parseLong(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 298, OSR_BCI: -1 :: static jlong java.lang.Long.parseLong(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Throwable.fillInStackTrace() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.getPackage(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4361, OSR_BCI: -1 :: virtual jobject java.util.HashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.ref.Finalizer.register(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ref.Finalizer.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ref.FinalReference.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ref.Finalizer.add() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.security.cert.Certificate.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.io.FilterInputStream.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jshort java.io.DataInputStream.readShort() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read1(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5465, OSR_BCI: -1 :: virtual jobject java.io.BufferedInputStream.getBufIfOpen() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.DataInputStream.readFully(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jbyte java.io.DataInputStream.readByte() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.Checksum.update(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.zip.CRC32.update(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.zip.CRC32.update(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Long.stringSize(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Long.stringSize(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.Long.getChars(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.Long.getChars(jlong, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 21, OSR_BCI: -1 :: virtual void java.nio.Buffer.<init>(jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 21, OSR_BCI: -1 :: virtual void java.nio.Buffer.<init>(jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 15, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.limit(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 23, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.position(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 23, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.position(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.BufferedReader.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean sun.nio.cs.StreamDecoder.inReady() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.BufferedReader.close() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.InputStreamReader.close() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamDecoder.close() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamDecoder.implClose() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 641, OSR_BCI: -1 :: virtual void java.lang.ref.WeakReference.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.BufferedWriter.ensureOpen() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.PrintStream.ensureOpen() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.PrintStream.ensureOpen() <<<<<<<

>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.OutputStream.flush() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject spec.harness.Context.getOut() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject spec.harness.Context.getOut() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.Writer.write(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.BufferedWriter.write(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.BufferedWriter.write(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.BufferedWriter.flushBuffer() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.BufferedWriter.flushBuffer() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.OutputStreamWriter.write(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.write(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.nio.cs.UTF_8$Encoder.encodeLoop(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.OutputStreamWriter.flushBuffer() <<<<<<<
SPECjvm2008 Base>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.ensureOpen() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.implWrite(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.flushBuffer() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.flushBuffer() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.implFlushBuffer() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.implFlushBuffer() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.writeBytes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.writeBytes() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.PrintStream.write(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.PrintStream.write(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.BufferedOutputStream.write(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.FileOutputStream.write(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.FileOutputStream.write(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.io.FileDescriptor$1.getAppend(jobject) <<<<<<<

>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.nio.Buffer.clear() <<<<<<<
  Properties file:   none>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.PrintStream.newLine() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.PrintStream.newLine() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.BufferedWriter.newLine() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.System.lineSeparator() <<<<<<<

>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.PrintStream.println(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.PrintStream.println(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.PrintStream.print(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.PrintStream.print(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.PrintStream.write(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.PrintStream.write(jobject) <<<<<<<
  Benchmarks:        compress

  WARNING: Run will not be compliant.
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList$ListItr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList$ListItr.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 11, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.flushBuffer() <<<<<<<
  Not a compliant sequence of benchmarks for publication.
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedList$ListItr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedList$ListItr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedList$ListItr.checkForComodification() <<<<<<<
  Property specjvm.run.type must be 2 for publication.
  Property specjvm.run.checksum.validation must be true for publication.
  Property specjvm.fixed.operations not allowed in publication run.

>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.nio.charset.Charset.defaultCharset() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: static jobject java.nio.ByteBuffer.allocate(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual void java.nio.HeapByteBuffer.<init>(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject spec.harness.results.TestResult.getIndent(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.regex.Pattern.peek() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.regex.Pattern.peek() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.regex.Pattern.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.regex.Pattern.sequence(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 312, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern.has(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.regex.Pattern$CharProperty.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.regex.Pattern$CharProperty.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.regex.Pattern.closure(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.regex.Pattern.atom() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 279, OSR_BCI: -1 :: virtual void java.util.regex.Pattern$Node.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.regex.Pattern.append(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.regex.Pattern.newSingle(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.regex.Pattern$Single.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.regex.Pattern$BmpCharProperty.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.regex.Pattern$BmpCharProperty.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 29, OSR_BCI: -1 :: static jboolean java.util.regex.Pattern.isSupplementary(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.regex.Pattern$Branch.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$CharProperty.study(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$BranchConn.study(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$CharProperty.match(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$CharProperty.match(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jint java.lang.Character.codePointAt(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jint java.lang.Character.codePointAt(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Dot.isSatisfiedBy(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Dot.isSatisfiedBy(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Node.match(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Node.match(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$BmpCharProperty.match(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Curly.match(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Curly.match0(jobject, jint, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 11, OSR_BCI: -1 :: virtual void java.io.PrintStream.write(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 433, OSR_BCI: 73 :: virtual jobject sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 22, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.implFlushBuffer() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject spec.harness.results.TestResult.correctContent(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Matcher.match(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$GroupHead.match(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Branch.match(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$GroupTail.match(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap$KeyIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.regex.Pattern$TreeInfo.reset() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.regex.Pattern$TreeInfo.reset() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 161, OSR_BCI: -1 :: virtual jobject sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Node.study(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1024, OSR_BCI: 17 :: virtual jobject java.util.regex.Matcher.reset() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 51, OSR_BCI: -1 :: virtual jint java.util.regex.Matcher.getTextLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 131, OSR_BCI: -1 :: virtual jobject java.util.regex.Matcher.reset() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Constructor.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jboolean sun.reflect.Reflection.quickCheckMemberAccess(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.harness.results.TestResult.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 300, OSR_BCI: -1 :: static jlong java.lang.Long.parseLong(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject java.util.Objects.requireNonNull(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.reflect.DelegatingConstructorAccessorImpl.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Constructor.getParameterTypes() <<<<<<<

--- --- --- --- --- --- --- --- ---

  Benchmark:   check
  Run mode:    static run
  Test type:   functional
  Threads:     1
  Iterations:  1
  Run length:  1 operation
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.harness.results.TestResult.ptxAttrib(jobject, jint, jobject, jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.harness.results.TestResult.ptxAttrib(jobject, jint, jobject, jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.harness.results.TestResult.ptxAttrib(jobject, jint, jobject, jlong, jboolean, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.Long.toString(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.Long.toString(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6846, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6846, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.position(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean spec.harness.Context.getVerify() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject spec.harness.Context.getSpecBasePath() <<<<<<<

Iteration 1 (1 operation) begins: Mon Jul 13 20:32:33 CEST 2015
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 311, OSR_BCI: -1 :: virtual void java.lang.Integer.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.PrintStream.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.io.ValidityCheckOutputStream.write(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.io.ValidityCheckOutputStream.write(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.OutputStream.write(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.OutputStream.write(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2079, OSR_BCI: 56 :: virtual void java.io.OutputStream.write(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2079, OSR_BCI: 56 :: virtual void java.io.OutputStream.write(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.io.ByteArrayOutputStream.ensureCapacity(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.charset.CharsetEncoder.encode(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Class.privateGetDeclaredConstructors(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.reflect.ReflectionFactory.copyConstructor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.ReflectAccess.copyConstructor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Constructor.copy() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.lang.reflect.Constructor.<init>(jobject, jobject, jobject, jint, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 265, OSR_BCI: -1 :: virtual void java.io.OutputStream.write(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath$Loader.getBaseURL() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Class.getConstructor0(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.Double.<init>(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.BufferedWriter.min(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.WeakHashMap$Entry.<init>(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.lang.Double.doubleValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void sun.misc.VM.addFinalRefCount(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.ref.ReferenceQueue.enqueue(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.PrintStream.close() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void spec.harness.Context.setOut(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject spec.io.ValidityCheckOutputStream.getValidityFileName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.InputStreamReader.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 24, OSR_BCI: -1 :: virtual void java.nio.Buffer.<init>(jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.ref.Finalizer.runFinalizer(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.ref.Finalizer.remove() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jboolean java.lang.ref.Reference.tryHandlePending(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void java.lang.ref.Finalizer.access$100(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.ref.Finalizer.hasBeenFinalized() <<<<<<<
Iteration 1 (1 operation) ends:   Mon Jul 13 20:32:33 CEST 2015
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean spec.harness.results.TestResult.hasErrors() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.System$2.invokeFinalize(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: virtual void java.lang.ref.Reference.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.zip.ZipFile$ZipFileInflaterInputStream.close() <<<<<<<
Iteration 1 (1 operation) result: PASSED
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.harness.results.TestResult.ptxElementStartOpen(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean spec.harness.results.LoopResult.isValid() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean spec.harness.results.LoopResult.isValid() <<<<<<<

Valid run!

>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject java.lang.ref.Finalizer.access$000() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.ref.ReferenceQueue.remove() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.poll() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.ref.ReferenceQueue.remove(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.pollFirst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 129, OSR_BCI: -1 :: virtual jobject java.lang.ref.ReferenceQueue.reallyPoll() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 126, OSR_BCI: -1 :: virtual void java.util.zip.ZipFile.releaseInflater(jobject) <<<<<<<

--- --- --- --- --- --- --- --- ---

  Benchmark:   compress
  Run mode:    static run
  Test type:   multi
  Threads:     16
  Iterations:  1
  Run length:  1 operation
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.nio.charset.CharsetEncoder.<init>(jobject, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.nio.charset.CharsetEncoder.<init>(jobject, jfloat, jfloat, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.charset.CharsetEncoder.replaceWith(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.CRC32.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong java.util.zip.CRC32.getValue() <<<<<<<

Iteration 1 (1 operation) begins: Mon Jul 13 20:32:33 CEST 2015
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1024, OSR_BCI: 9 :: static jint sun.reflect.UTF8.utf8Length(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1024, OSR_BCI: 17 :: static jobject sun.reflect.UTF8.encode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1024, OSR_BCI: 19 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 62, OSR_BCI: -1 :: static jint sun.reflect.UTF8.utf8Length(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 375, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitShort(jshort) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 131, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 132, OSR_BCI: -1 :: static jobject sun.reflect.UTF8.encode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jshort sun.reflect.ClassFileAssembler.cpi() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jint sun.reflect.ByteVectorImpl.getLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jbyte sun.reflect.ByteVectorImpl.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject spec.harness.BenchmarkThread.runLoop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.harness.results.LoopResult.setBmThreadId(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.harness.results.LoopResult.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.harness.results.LoopResult.setStartTime(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void java.io.PrintStream.<init>(jboolean, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 182, OSR_BCI: -1 :: >>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.harness.results.LoopResult.setIteration(jint)static jboolean java.nio.charset.Charset.atBugLevel( <<<<<<<
jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 182, OSR_BCI: -1 :: static jboolean java.nio.charset.Charset.atBugLevel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.io.ValidityCheckOutputStream.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 83, OSR_BCI: -1 :: virtual void java.io.OutputStream.<init>(>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 84, OSR_BCI: -1 :: virtual void java.io.OutputStream.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 84, OSR_BCI: -1 :: virtual void java.io.OutputStream.<init>() <<<<<<<
)>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 85, OSR_BCI: -1 :: virtual void>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 70, OSR_BCI: -1 :: virtual void java.io.ByteArrayOutputStream.<init>(jint) <<<<<<<
 <<<<<<<
 java.io.OutputStream.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 70, OSR_BCI: -1 :: virtual void java.io.ByteArrayOutputStream.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual void java.io.FilterOutputStream.>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: virtual <init>(jobject>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual void>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 261, OSR_BCI: -1 ::  java.io.FilterOutputStream.<init>() <<<<<<<
void java.io.FilterOutputStream.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: virtual void java.io.FilterOutputStream.jobject) <<<<<<<
virtual void java.io.FilterOutputStream.<init>(>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual void java.io.OutputStreamWriter.<init>(>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 11, OSR_BCI: -1 :: virtual void java.io.OutputStreamWriter.<init>>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 11, OSR_BCI: -1 :: virtual void>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual void java.io.OutputStreamWriter.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 16, OSR_BCI: -1 :: virtual void java.io.Writer.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: static jobject sun.nio.cs.StreamEncoder.forOutputStreamWriter(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual void java.io.BufferedWriter.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual voidjobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual void java.io.OutputStreamWriter.>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual void java.io.OutputStreamWriter.<init>(jobject<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Main.harnessMain() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual jlong spec.benchmarks.compress.Main.runBenchmark() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual jlong spec.benchmarks.compress.Main.runBenchmark() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jlong spec.benchmarks.compress.Harness.inst_main(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Harness.runCompress(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Harness.runCompress(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Harness.runCompress(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Harness.runCompress(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: static jobject spec.benchmarks.compress.Compress.performAction(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: static >>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: static jobject spec.benchmarks.compress.Compress.performAction(jobject, jint, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: static jobject spec.benchmarks.compress.Compress.performAction(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.InputBuffer.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.OutputBuffer.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.CompBase.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.CompBase.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.CompBase.getMaxCode() <<<<<<<
 java.io.BufferedWriter.<init>(>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual void java.io.BufferedWriter.<init>(jobject,  java.io.OutputStreamWriter.<init>(jobject) <<<<<<<
(jobject) <<<<<<<
<init>(jobject) <<<<<<<
jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.OutputBuffer.writeByte(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.OutputBuffer.writeByte(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: >>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor$HashTable.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: >>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor$HashTable.<init>() <<<<<<<
jint) <<<<<<<
jobjectvirtual void>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 ::  spec.benchmarks.compress.OutputBuffer.virtual writeByte(jbyte) <<<<<<<
jobject spec.benchmarks.compress.Compress.performAction(>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: , jint) <<<<<<<
) <<<<<<<
virtual jlong spec.benchmarks.compress.Main.runBenchmarkjobject, jint, >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.OutputBuffer.writeByte(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor$HashTable.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual voidvoid spec.benchmarks.compress.OutputBuffer.writeByte>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual void>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual void>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor$HashTable.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor$HashTable.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.CodeTable.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.CodeTable.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.CodeTable.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.CodeTable.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.compress() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.compress() <<<<<<<
virtual void spec.benchmarks.compress.Compressor$HashTable.<init>() <<<<<<<
virtual >>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jintvoid spec.benchmarks.compress.CodeTable. spec.benchmarks.compress.Compressor$HashTable.<init>( spec.benchmarks.compress.CodeTable.(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.CodeTable.<init>() <<<<<<<
<init>()>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor$HashTable.clear(jint, jobject) <<<<<<<
()) <<<<<<<
 <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.OutputBuffer.writeByte(jbyte) <<<<<<<
) <<<<<<<
<init>() <<<<<<<
 spec.benchmarks.compress.InputBuffer.readByte() <<<<<<<
 spec.benchmarks.compress.InputBuffer.>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.InputBuffer. <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jintreadByte() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 8, OSR_BCI: -1 :: virtual void>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 816, OSR_BCI: 2 :: >>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 8, OSR_BCI: -1 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 816, OSR_BCI: 2 :: virtual voidreadByte() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 ::  spec.benchmarks.compress.Compressor$HashTable.clear()>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 816, OSR_BCI: 2 :: virtual void spec.benchmarks.compress.Compressor$HashTable.clear(virtual void spec.benchmarks.compress.Compressor$HashTable.>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: clearvirtual >>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 816, OSR_BCI: 2 :: virtual >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 816, OSR_BCI: 2 :: jint spec.benchmarks.compress.Compressor$HashTable.of spec.benchmarks.compress.Compressor$HashTable.clear() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 8, OSR_BCI: -1 :: virtual  spec.benchmarks.compress.InputBuffer.readByte() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 824, OSR_BCI: 2 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5, OSR_BCI: -1 :: virtual jintvirtual  spec.benchmarks.compress.InputBuffer.readBytevoid spec.benchmarks.compress.Compressor$HashTable.clear()(jint)virtual voidvoid spec.benchmarks.compress.Compressor$HashTable.clear() <<<<<<<
void spec.benchmarks.compress.Compressor$HashTable.clear() <<<<<<<
() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 8, OSR_BCI: -1 :: virtual virtual jintvirtual jint) <<<<<<<
 <<<<<<<
virtual jint spec.benchmarks.compress.InputBuffer. spec.benchmarks.compress.Compressor$HashTable.of(jint) spec.benchmarks.compress.Compressor$HashTable.of(jint) <<<<<<<
void spec.benchmarks.compress.Compressor$HashTable.clear() <<<<<<<
 spec.benchmarks.compress.Compressor$HashTable.clear() <<<<<<<
 <<<<<<<
 <<<<<<<
() <<<<<<<
void spec.benchmarks.compress.Compressor$HashTable.clear() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.output(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.output(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.output(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.output(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.CodeTable.set(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor$HashTable.set(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.CodeTable.of(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 8, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor$HashTable.clear() <<<<<<<
 <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 20, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.<init>(jobject, jobject, jobject) <<<<<<<
readByte() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 25, OSR_BCI: -1 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 25, OSR_BCI: -1 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 25, OSR_BCI: -1 :: virtual virtual void>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 25, OSR_BCI: -1 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 25, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor$HashTable.clear( spec.benchmarks.compress.Compressor$HashTable.clear(void spec.benchmarks.compress.Compressor$HashTable.clear()>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 25, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor$HashTable.clear()virtual void spec.benchmarks.compress.Compressor$HashTable.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 25, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor$HashTable.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 25, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor$HashTable.clear() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1035, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Compressor$HashTable.of(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1537, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.CodeTable.of(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1805, OSR_BCI: 61 :: virtual >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1808, OSR_BCI: 61 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1808, OSR_BCI: 61 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1809, OSR_BCI: 61 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1811, OSR_BCI: 61 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1812, OSR_BCI: 61 :: virtual void <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1823, OSR_BCI: 61 :: virtual void spec.benchmarks.compress.Compressor.compress() <<<<<<<
) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1838, OSR_BCI: 61 :: virtual void)>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1840, OSR_BCI: 61 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1840, OSR_BCI: 61 :: virtual void spec.benchmarks.compress.Compressor.compress(virtual void spec.benchmarks.compress.Compressor$HashTable.clear() <<<<<<<
 <<<<<<<
virtual void spec.benchmarks.compress.Compressor.compress() <<<<<<<
 spec.benchmarks.compress.Compressor.compress() <<<<<<<
 <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1828, OSR_BCI: 61 :: virtual void spec.benchmarks.compress.Compressor.compress() spec.benchmarks.compress.Compressor.compress() <<<<<<<
virtual void spec.benchmarks.compress.Compressor.compress() <<<<<<<
virtual void spec.benchmarks.compress.Compressor.compress() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1811, OSR_BCI: 61 :: virtual void spec.benchmarks.compress.Compressor.compress() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1028, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.CodeTable.set(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1028, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor$HashTable.set(jint, jint) <<<<<<<
virtual void spec.benchmarks.compress.Compressor.compress(virtual void spec.benchmarks.compress.Compressor.compress() <<<<<<<
void) <<<<<<<
 <<<<<<<
) <<<<<<<
 spec.benchmarks.compress.Compressor.compress() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 27, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.compress>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 27, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.compress>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 27, OSR_BCI: -1 :: virtual >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 27, OSR_BCI: -1 :: virtual void>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 27, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.compress>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 27, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.compress>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 27, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.compress() <<<<<<<
() <<<<<<<
() <<<<<<<
 spec.benchmarks.compress.Compressor.compress() <<<<<<<
void spec.benchmarks.compress.Compressor.compress() <<<<<<<
() <<<<<<<
() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.clBlock() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.clBlock() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 44, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Compressor.clBlock() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 7, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.OutputBuffer.writebytes(jobject>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 7, OSR_BCI: -1 :: >>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 7, OSR_BCI: -1 :: virtual >>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 7, OSR_BCI: -1 :: virtual >>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 7, OSR_BCI: -1 :: , jint) <<<<<<<
virtual >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7, OSR_BCI: -1 :: void spec.benchmarks.compress.OutputBuffer.writebytes(void spec.benchmarks.compress.OutputBuffer.writebytes(jobjectvoid spec.benchmarks.compress.OutputBuffer.writebytes(jobjectvirtual void spec.benchmarks.compress.OutputBuffer.writebytes, >>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 8, OSR_BCI: -1 :: jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 7, OSR_BCI: -1 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7, OSR_BCI: -1 :: virtual void, jint) <<<<<<<
jobject>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7, OSR_BCI: -1 :: , jintvirtual void spec.benchmarks.compress.OutputBuffer.writebytes) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7, OSR_BCI: -1 :: virtual virtual void spec.benchmarks.compress.OutputBuffer.writebytes(jobject>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 8, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.OutputBuffer.writebytes(jobject, jint) <<<<<<<
virtual >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7, OSR_BCI: -1 :: virtual voidvirtual void spec.benchmarks.compress.OutputBuffer.writebytes((jobject, jint) <<<<<<<
jobject>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.OutputBuffer.writebytes(jobject, void spec.benchmarks.compress.OutputBuffer.writebytes(jobject spec.benchmarks.compress.OutputBuffer.writebytes(jobject, jint) <<<<<<<
void spec.benchmarks.compress.OutputBuffer.writebytes(jobject, jint(jobject, jint) <<<<<<<
) <<<<<<<
, , jint) <<<<<<<
jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 8, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.OutputBuffer.writebytes(jobject, jint) <<<<<<<
jint) <<<<<<<
 spec.benchmarks.compress.OutputBuffer.writebytes(jobject, jint, ) <<<<<<<
jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 8, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.OutputBuffer.writebytes(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 17, OSR_BCI: -1 :: static jobject spec.benchmarks.compress.Compress.performAction(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 17, OSR_BCI: -1 :: static jobject spec.benchmarks.compress.Compress.performAction(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor.<init>(jobject spec.benchmarks.compress.Decompressor.<init>(, jobject) <<<<<<<
jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.CodeTable.clear(>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual voidjint) <<<<<<<
 spec.benchmarks.compress.CodeTable.>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual voidclear(jint) spec.benchmarks.compress.CodeTable.clear(jint <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: ) <<<<<<<
virtual void spec.benchmarks.compress.CodeTable.clear(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor$SuffixTable.init(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor$SuffixTable.init(jint)>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor$SuffixTable.init(jint) <<<<<<<
 <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor$SuffixTable.init(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 7, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor.decompress(>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 7, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor.decompress()) <<<<<<<
 <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor.decompress() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor.decompress() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jbyte spec.benchmarks.compress.Decompressor$SuffixTable.>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jbyte spec.benchmarks.compress.Decompressor$SuffixTable.of(jintof(jint)) <<<<<<<
 <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor$DeStack.push(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: >>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor$DeStack.push(jbyte)virtual void spec.benchmarks.compress.Decompressor$DeStack. <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: push(jbyte)virtual void spec.benchmarks.compress.Decompressor$DeStack. <<<<<<<
push(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jbyte spec.benchmarks.compress.Decompressor$DeStack.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual jbyte spec.benchmarks.compress.Decompressor$DeStack.pop()>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jbyte spec.benchmarks.compress.Decompressor$DeStack.pop() <<<<<<<
 <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual jbyte spec.benchmarks.compress.Decompressor$DeStack.pop() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jboolean spec.benchmarks.compress.Decompressor$DeStack.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual jboolean spec.benchmarks.compress.Decompressor$DeStack.isEmpty() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jboolean spec.benchmarks.compress.Decompressor$DeStack.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual jboolean spec.benchmarks.compress.Decompressor$DeStack.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor$SuffixTable.set(jint, jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.InputBuffer.readBytes(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.InputBuffer.readBytes(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 26, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor$SuffixTable.set(jint, jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1028, OSR_BCI: -1 :: virtual jbyte spec.benchmarks.compress.Decompressor$SuffixTable.of(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94016, OSR_BCI: 158 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94016, OSR_BCI: 105 :: virtual void>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94016, OSR_BCI: 105 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94016, OSR_BCI: 158 :: virtual void spec.benchmarks.compress.Decompressor.decompressvirtual void>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94016, OSR_BCI: 158 :: virtual void spec.benchmarks.compress.Decompressor.decompress>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94016, OSR_BCI: 158 :: virtual void>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4408, OSR_BCI: 2 :: virtual void spec.benchmarks.compress.CodeTable.clear(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94016, OSR_BCI: 24 :: virtual void spec.benchmarks.compress.Decompressor.decompress()virtual void spec.benchmarks.compress.Decompressor.decompress() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94016, OSR_BCI: 105 :: virtual void spec.benchmarks.compress.Decompressor.decompress <<<<<<<
 spec.benchmarks.compress.Decompressor.decompress() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94024, OSR_BCI: 24 :: virtual void( spec.benchmarks.compress.Decompressor.) <<<<<<<
decompress() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1455, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1455, OSR_BCI: -1 :: virtual jint>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1455, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1455, OSR_BCI: -1 ::  spec.benchmarks.compress.Decompressor.decompress() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1459, OSR_BCI: -1 :: >>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1459, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1459, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1460, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1460, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94016, OSR_BCI: 158 :: virtual void spec.benchmarks.compress.Decompressor.decompress() <<<<<<<
 spec.benchmarks.compress.Decompressor.decompress() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94016, OSR_BCI: 105 :: virtual void spec.benchmarks.compress.Decompressor.decompress() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94016, OSR_BCI: 158 :: virtual void spec.benchmarks.compress.Decompressor.decompress(>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1459, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1459, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1459, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1459, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1459, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Decompressor.getCode() <<<<<<<
virtual jint spec.benchmarks.compress.Decompressor.getCode( spec.benchmarks.compress.Decompressor.getCode()() <<<<<<<
 <<<<<<<
) <<<<<<<
) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 19, OSR_BCI: -1 :: >>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 177624, OSR_BCI: 158 :: virtual void spec.benchmarks.compress.Decompressor.decompress() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 177624, OSR_BCI: 158 :: virtual void spec.benchmarks.compress.Decompressor.decompress>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 177624, OSR_BCI: 24 :: virtual void spec.benchmarks.compress.Decompressor.decompress>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 19, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor.decompress>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 19, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor.decompress>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 19, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor.decompress() <<<<<<<
() <<<<<<<
() <<<<<<<
() <<<<<<<
virtual void spec.benchmarks.compress.Decompressor.decompress(>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 19, OSR_BCI: -1 :: ) <<<<<<<
() <<<<<<<
virtual void spec.benchmarks.compress.Decompressor.decompress() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 20, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.CodeTable.clear(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong spec.benchmarks.compress.Harness$Source.getCRC(>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong spec.benchmarks.compress.Harness$Source.)>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual  <<<<<<<
getCRC>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jlong spec.benchmarks.compress.Harness$Source.getCRC() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong spec.benchmarks.compress.OutputBuffer.getCRC>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong spec.benchmarks.compress.OutputBuffer.getCRC() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jlong spec.benchmarks.compress.OutputBuffer.getCRC() <<<<<<<
jlong spec.benchmarks.compress.Harness$Source.getCRC() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 257, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 125368, OSR_BCI: 61 :: virtual void spec.benchmarks.compress.Compressor.compress() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 125376, OSR_BCI: 61 :: virtual void spec.benchmarks.compress.Compressor.compress() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 287, OSR_BCI: -1 :: static jobject spec.benchmarks.compress.Compress.performAction(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 287, OSR_BCI: -1 :: static jobject spec.benchmarks.compress.Compress.>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 288, OSR_BCI: -1 :: >>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 288, OSR_BCI: -1 :: static jobject spec.benchmarks.compress.Compress.performAction(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 288, OSR_BCI: -1 :: static jobject spec.benchmarks.compress.Compress.performAction(jobject, jint, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 271, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.CompBase.<init>(jobject, jobject) <<<<<<<
() <<<<<<<
() <<<<<<<
static jobject spec.benchmarks.compress.Compress.performAction(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 288, OSR_BCI: -1 :: static jobject spec.benchmarks.compress.Compress.performAction(jobject, jint, jint, jobject) <<<<<<<
performAction(jobject, jint, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 288, OSR_BCI: -1 :: static jobject spec.benchmarks.compress.Compress.performAction(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 288, OSR_BCI: -1 :: static jobject spec.benchmarks.compress.Compress.performAction(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 152, OSR_BCI: -1 :: virtual void spec.benchmarks.compress.Decompressor.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1041, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.CompBase.getMaxCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.OutputBuffer.getLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint spec.benchmarks.compress.Harness$Source.getLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject spec.benchmarks.compress.Harness$Source.getBuffer() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.BufferedWriter.close() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.nio.HeapCharBuffer.<init>(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.OutputStreamWriter.close() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.close() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.implClose() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.flushLeftoverChar(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.io.ValidityCheckOutputStream.validityCheck2(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.io.ValidityCheckOutputStream.validityCheck2(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 198, OSR_BCI: -1 :: static jboolean java.nio.charset.Charset.atBugLevel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject spec.io.FileCache.getByteArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.nio.CharBuffer.allocate(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.nio.charset.CharsetEncoder.implFlush(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.OutputStream.close() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean spec.io.ValidityCheckOutputStream.validityCheck(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 384, OSR_BCI: -1 :: virtual void java.io.OutputStream.close() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.harness.results.LoopResult.setLoopCnt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.harness.results.LoopResult.setLoopCnt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.harness.results.IterationResult.addLoopResults(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void spec.harness.results.IterationResult.addLoopResults(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jlong spec.harness.results.LoopResult.getStartTime() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jlong spec.harness.results.LoopResult.getEndTime() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.io.BufferedReader.ensureOpen() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1920, OSR_BCI: -1 :: virtual jboolean java.nio.charset.CoderResult.isUnderflow() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.ByteArrayInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.ByteArrayInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 145, OSR_BCI: -1 :: static jobject java.nio.charset.Charset.lookup(jobject) <<<<<<<
Iteration 1 (1 operation) ends:   Mon Jul 13 20:32:36 CEST 2015
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.text.DecimalFormat.fastFormat(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.Double.isInfinite(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.text.DontCareFieldPosition$1.formatted(jint, jobject, jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.text.DecimalFormat.append(jobject, jobject, jobject, jobject, jobject) <<<<<<<
Iteration 1 (1 operation) result: 364.46 ops/m
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void spec.harness.results.LoopResult.toXml(jobject, jint) <<<<<<<

Valid run!
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.text.DigitList.set(jboolean, jobject, jboolean, jboolean, jint, jboolean) <<<<<<<
Score on compress: 364.46 ops/m

Results are stored in: 
/disk2/SPECjvm2008_node153/results/SPECjvm2008.014/SPECjvm2008.014.raw
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual jboolean java.util.zip.Inflater.ended() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2048, OSR_BCI: 13 :: static jboolean java.security.MessageDigest.isEqual(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 57951, OSR_BCI: 69 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 899, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.zip.ZipFile.getInputStream(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.zip.ZipCoder.isUTF8() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.zip.ZipFile$ZipFileInputStream.<init>(jobject, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jlong java.util.zip.ZipFile.access$1100(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jlong java.util.zip.ZipFile.access$1200(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.zip.ZipFile.getInflater() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.zip.ZipFile$ZipFileInflaterInputStream.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.zip.InflaterInputStream.<init>(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 104, OSR_BCI: -1 :: static jboolean java.security.MessageDigest.isEqual(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.remove(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.toExternalForm() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.net.URLStreamHandler.toExternalForm(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject sun.misc.URLClassPath$JarLoader.access$400(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.MessageDigest.update(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.MessageDigest$Delegate.engineUpdate(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.security.Provider.getService(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.security.Provider$ServiceKey.matches(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.security.Provider.ensureLegacyParsed() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.security.Provider$ServiceKey.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.jar.JarVerifier$VerifierStream.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Class.getConstructor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject java.security.Provider.access$1000() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.text.DecimalFormat.applyPattern(jobject, jboolean) <<<<<<<
Generating reports in:
/disk2/SPECjvm2008_node153/results/SPECjvm2008.014
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.security.Provider$Service.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.security.Provider$Service.getImplClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.security.Provider$Service.getProvider() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 148, OSR_BCI: -1 :: virtual jboolean java.util.HashMap.containsKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5409, OSR_BCI: -1 :: virtual jobject java.util.HashMap.getNode(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2307, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.util.Arrays.fill(jobject, jint, jint, jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3258, OSR_BCI: 10 :: static void java.util.Arrays.fill(jobject, jint, jint, jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: static void java.util.Arrays.fill(jobject, jint, jint, jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 44178, OSR_BCI: 10 :: static void java.util.Arrays.fill(jobject, jint, jint, jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean com.sun.org.apache.xerces.internal.util.XMLChar.isSpace(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanChar() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanChar() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.setScannerState(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.util.Status.isExceptional() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.peekChar() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.peekChar() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipSpaces() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipSpaces() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean com.sun.org.apache.xerces.internal.util.XMLChar.isContent(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean com.sun.org.apache.xerces.internal.util.XMLChar.isContent(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipChar(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipChar(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanLiteral(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanLiteral(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.xni.XMLString.setValues(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Vector.elementData(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.nio.cs.ISO_8859_1$Decoder.decodeArrayLoop(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.nio.cs.ISO_8859_1$Decoder.decodeArrayLoop(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2560, OSR_BCI: 129 :: virtual jobject sun.nio.cs.ISO_8859_1$Decoder.decodeArrayLoop(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean com.sun.org.apache.xerces.internal.util.XMLChar.isNameStart(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.createNode(jshort) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.createNode(jshort) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.ensureCapacity(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.ensureCapacity(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.setChunkIndex(jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.setChunkIndex(jobject, jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.setChunkValue(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.setChunkValue(jobject, jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.util.XMLStringBuffer.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.xni.XMLString.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.appendChild(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.clearChunkIndex(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.clearChunkIndex(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$ElementStack.nextElement() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.seekCloseOfStartTag() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.seekCloseOfStartTag() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.parsers.AbstractDOMParser.startElement(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getChunkIndex(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getChunkIndex(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanContent(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanContent(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.checkLimit(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer.isTracking(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.getCharacterData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.parsers.AbstractDOMParser.characters(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.createDeferredTextNode(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.util.SymbolTable.addSymbol(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.util.SymbolTable.addSymbol(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.util.SymbolTable.hash(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.util.SymbolTable.hash(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.xni.QName.setValues(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.util.XMLAttributesIteratorImpl.removeAllAttributes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.removeAllAttributes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.checkDepth(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer.addValue(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer.addValue(jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.utils.XMLSecurityManager.isOverLimit(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.utils.XMLSecurityManager.isOverLimit(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.createDeferredElement(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 25, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.setChunkIndex(jobject, jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.clearChunkValue(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.clearChunkValue(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 26, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.setChunkIndex(jobject, jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 27, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.setChunkIndex(jobject, jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 28, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.setChunkIndex(jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$ElementStack.popElement() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.parsers.AbstractDOMParser.endElement(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getParentNode(jint, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 103, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.clearChunkValue(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1256, OSR_BCI: 467 :: virtual jint com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanContent(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 169, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanContent(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 580, OSR_BCI: 141 :: virtual jobject com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 288, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipSpaces() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 288, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipSpaces() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanAttribute(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanAttribute(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.getString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.getString() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.impl.XMLScanner.scanAttributeValue(jobject, jobject, jobject, jobject, jint, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.impl.XMLScanner.scanAttributeValue(jobject, jobject, jobject, jobject, jint, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.addAttribute(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.setValue(jint, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.addAttribute(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.addAttribute(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.getIndexFast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.getIndexFast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.xni.QName.setValues(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.util.AugmentationsImpl.removeAllItems() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.setSpecified(jint, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 7, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.getString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.getString() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 313, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipSpaces() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer.getItem(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer.getItem(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.getQName(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.getQName(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.getValue(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.getValue(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.setDeferredAttribute(jint, jobject, jobject, jobject, jboolean, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.setDeferredAttribute(jint, jobject, jobject, jobject, jboolean, jboolean, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.createDeferredAttribute(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.createDeferredAttribute(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 313, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipSpaces() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 313, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipSpaces() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 258, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 23, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.getIndexFast(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 368, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipSpaces() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 368, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipSpaces() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 10, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.getString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 10, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.getString() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 19, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.getQName(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.parsers.AbstractDOMParser.emptyElement(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 49, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.setDeferredAttribute(jint, jobject, jobject, jobject, jboolean, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.getLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.NodeImpl.needsSyncData(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.dom.NodeImpl.needsSyncChildren() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.dom.NodeImpl.needsSyncChildren() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.NodeImpl.needsSyncChildren(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.ParentNode.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getLastChild(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 513, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.ChildNode.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 513, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.NodeImpl.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.NodeImpl.isOwned(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getPrevSibling(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getPrevSibling(jint, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeObject(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeObject(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DeferredElementImpl.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.ElementImpl.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getPrevSibling(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DeferredTextImpl.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 513, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.TextImpl.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 513, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.CharacterDataImpl.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DocumentImpl.setMutationEvents(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.dom.ParentNode.hasChildNodes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.synchronizeChildren(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 400, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getLastChild(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 400, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getLastChild(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.ParentNode.getFirstChild() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.ElementImpl.getTagName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.dom.NodeImpl.needsSyncData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.dom.NodeImpl.needsSyncData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DeferredElementImpl.synchronizeData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.ElementImpl.setupDefaultAttributes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DeferredElementImpl.synchronizeChildren() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeName(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeName(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeName(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.ElementImpl.getDefaultAttributes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl.getDoctype() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeExtra(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeExtra(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeExtra(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.ChildNode.getParentNode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.dom.NodeImpl.isOwned() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.dom.NodeImpl.isOwned() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 405, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getLastChild(jint, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 27, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeExtra(jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.ChildNode.getNextSibling() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.ElementImpl.getAttributes() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 11, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeName(jint, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 28, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeExtra(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.NodeImpl.isSpecified(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.dom.NodeImpl.isNormalized() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.NodeImpl.hasStringValue(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.NodeImpl.hasStringValue(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.AttributeMap.setNamedItem(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.AttributeMap.setNamedItem(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl.isReadOnly() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getTypeInfo(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getTypeInfo(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl.findNamePoint(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl.findNamePoint(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.AttrImpl.getNodeName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.AttrImpl.getNodeName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.add(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.add(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.NodeImpl.getOwnerDocument() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.NodeImpl.getOwnerDocument() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DeferredAttrImpl.synchronizeData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DeferredAttrImpl.synchronizeData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.NodeImpl.ownerDocument() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DocumentImpl.setAttrNode(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DocumentImpl.setAttrNode(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.NodeImpl.isNormalized(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.NodeImpl.isNormalized(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 704, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeObject(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 704, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeObject(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 9, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.AttrImpl.getNodeName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 9, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.AttrImpl.getNodeName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject spec.reporter.ReportGenerator.getValue(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject spec.reporter.ReportGenerator.getValue(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl.getNamedItem(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.AttrImpl.getNodeValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.AttrImpl.getNodeValue() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.AttrImpl.getValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.AttrImpl.getValue() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DeferredAttrImpl.synchronizeChildren() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DeferredAttrImpl.synchronizeChildren() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.synchronizeChildren(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.dom.NodeImpl.hasStringValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeValueString(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeValueString(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeValueString(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.Hashtable.remove(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.zip.ZipEntry.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.entrySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$LinkedEntrySet.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedEntrySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$LinkedEntryIterator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$LinkedHashIterator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject sun.security.jca.GetInstance.getInstance(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static void sun.security.jca.GetInstance.checkSuperClass(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.security.jca.GetInstance$Instance.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void sun.security.jca.GetInstance$Instance.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong java.util.zip.ZipEntry.getSize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.jar.Attributes$Name.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.jar.Manifest.getMainAttributes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.jar.Attributes.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.jar.Attributes.getValue(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.jar.JarVerifier.beginEntry(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.zip.ZipEntry.isDirectory() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 300, OSR_BCI: -1 :: virtual void sun.security.util.ManifestEntryVerifier.update(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.security.util.ManifestEntryVerifier.getEntry() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject java.security.Security.getSpiClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.security.jca.GetInstance$Instance.toArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.String.getBytes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject java.lang.StringCoding.encode(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.security.provider.SHA.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.security.provider.DigestBase.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.security.provider.SHA.implReset() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.security.MessageDigest$Delegate.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.security.MessageDigest.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void java.security.MessageDigestSpi.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.security.MessageDigest.reset() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void sun.security.provider.ByteArrayAccess.i2bBig4(jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static void sun.security.provider.ByteArrayAccess.i2bBig(jobject, jint, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.toArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.addAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.jar.JarFile.getManifest() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.lang.ClassNotFoundException.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.lang.ReflectiveOperationException.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.lang.Exception.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.lang.Throwable.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject java.util.jar.JarFile.getManifestFromReference() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.security.util.ManifestEntryVerifier.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.jar.Attributes.entrySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject java.util.Base64.getMimeDecoder() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.Base64$Decoder.decode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.nio.cs.ISO_8859_1.newEncoder() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.nio.cs.ISO_8859_1$Encoder.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.nio.cs.ISO_8859_1$Encoder.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean sun.nio.cs.ISO_8859_1$Encoder.isLegalReplacement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.nio.cs.ISO_8859_1$Encoder.implReplaceWith(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.security.CodeSigner.getSignerCertPath() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.security.provider.certpath.X509CertPath.getCertificates() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.security.CodeSource.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.net.URL.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath.getResource(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.net.URLClassLoader.findClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.net.URLClassLoader$1.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.net.URLClassLoader$1.run() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.net.URLClassLoader$1.run() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.net.www.protocol.jar.Handler.parseURL(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.net.www.protocol.jar.Handler.parseContextSpec(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jint sun.net.www.protocol.jar.Handler.indexOfBangSlash(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.net.www.ParseUtil.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.net.www.ParseUtil.canonizeString(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.net.URLStreamHandler.setURL(jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 129, OSR_BCI: -1 :: virtual jobject java.net.URLClassLoader.defineClass(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath$JarLoader$2.getCodeSourceURL() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath$JarLoader$2.getManifest() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.net.URLClassLoader.definePackageInternal(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URLClassLoader.getAndVerifyPackage(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.misc.Resource.getByteBuffer() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.jar.JarFile.getInputStream(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.Resource.cachedInputStream() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.jar.JarVerifier$VerifierStream.close() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath$JarLoader$2.getCodeSigners() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.jar.JarFile$JarFileEntry.getCodeSigners() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static void java.util.jar.JarFile.access$200(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.jar.JarFile.maybeInstantiateVerifier() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.security.CodeSource.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.security.CodeSource.getCertificates() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.net.URLStreamHandler.getHostAddress(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.security.CodeSource.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.net.URLStreamHandler.sameFile(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean sun.net.www.protocol.file.Handler.hostsEqual(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedConstructorAccessor1.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.checkPackageAccess(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.Collections$SynchronizedCollection.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void org.jfree.chart.axis.NumberTickUnit.<init>(jdouble, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void org.jfree.chart.axis.TickUnits.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.util.Arrays.sort(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.util.ComparableTimSort.sort(jobject, jint, jint, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.ArrayList.sort(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void java.util.Arrays.sort(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.util.Arrays$LegacyMergeSort.access$000() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 133, OSR_BCI: -1 :: static jint java.util.ComparableTimSort.countRunAndMakeAscending(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint org.jfree.chart.axis.TickUnit.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint org.jfree.chart.axis.TickUnit.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jdouble org.jfree.chart.axis.TickUnit.getSize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void java.util.ComparableTimSort.binarySort(jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ComparableTimSort.mergeCollapse() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1280, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.lang.ClassLoader.compareCerts(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2313, OSR_BCI: -1 :: virtual jlong java.util.zip.ZStreamRef.address() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Rectangle2D$Double.<init>(jdouble, jdouble, jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Rectangle2D$Double.setRect(jdouble, jdouble, jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.awt.geom.RectangularShape.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6837, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6837, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4183, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4359, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>(jint, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4362, OSR_BCI: -1 :: static jint java.util.HashMap.tableSizeFor(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.jar.Attributes.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.jar.Attributes.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 284, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 439, OSR_BCI: -1 :: virtual void java.util.HashMap.putMapEntries(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.io.ByteArrayOutputStream.write(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 290, OSR_BCI: -1 :: virtual void java.io.ByteArrayInputStream.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint sun.security.util.DerInputStream.available() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 267, OSR_BCI: -1 :: virtual jobject java.util.Vector.elementAt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.EventObject.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.util.ObjectList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.util.ObjectList.get(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.util.AbstractObjectList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.util.AbstractObjectList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void org.jfree.chart.axis.NumberAxis.autoAdjustRange() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.Integer.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Integer.compare(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void org.jfree.data.Range.<init>(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void org.jfree.data.Range.<init>(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void org.jfree.chart.plot.XYPlot.datasetChanged(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.chart.axis.NumberAxis.configure() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint org.jfree.chart.plot.XYPlot.getDomainAxisIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint org.jfree.chart.plot.XYPlot.getDomainAxisIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint org.jfree.util.ObjectList.indexOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint org.jfree.util.AbstractObjectList.indexOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.getEntry(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint org.jfree.chart.plot.XYPlot.getRangeAxisIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint org.jfree.chart.plot.XYPlot.getRangeAxisIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.chart.plot.XYPlot.getRendererForDataset(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.data.xy.XYSeriesCollection.getDomainBounds(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.chart.event.ChartChangeEvent.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.chart.event.ChartChangeEvent.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.chart.plot.XYPlot.getDataRange(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.Integer.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint org.jfree.data.xy.XYSeriesCollection.getSeriesCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint org.jfree.data.xy.XYSeriesCollection.getSeriesCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject org.jfree.data.Range.combine(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jdouble java.lang.Math.max(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jdouble java.lang.Math.max(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.chart.axis.ValueAxis.setRange(jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.chart.plot.XYPlot.configureDomainAxes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 37, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 37, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 37, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 37, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject org.jfree.data.general.DatasetUtilities.findDomainBounds(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject org.jfree.data.general.DatasetUtilities.iterateDomainBounds(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject org.jfree.data.general.DatasetUtilities.iterateDomainBounds(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 435, OSR_BCI: -1 :: static jdouble java.lang.Math.max(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.chart.plot.XYPlot.configureRangeAxes() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 409, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 409, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 436, OSR_BCI: -1 :: static jdouble java.lang.Math.max(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 113, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.chart.event.PlotChangeEvent.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.chart.plot.Plot.notifyListeners(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 206, OSR_BCI: -1 :: virtual void java.util.zip.ZipEntry.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 206, OSR_BCI: -1 :: virtual jobject java.util.zip.ZipFile.getZipEntry(jobject, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 206, OSR_BCI: -1 :: virtual void java.util.jar.JarVerifier.processEntry(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 196, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath$JarLoader.checkResource(jobject, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1028, OSR_BCI: -1 :: virtual jint java.util.Arrays$ArrayList.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1027, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1024, OSR_BCI: 66 :: virtual void java.util.regex.Pattern.compile() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 567, OSR_BCI: -1 :: virtual jobject java.lang.Class.getComponentType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.type() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.time.ZoneOffset.getTotalSeconds() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.time.temporal.ChronoField.range() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 4580, OSR_BCI: -1 :: static jobject java.lang.System.getSecurityManager() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.reflect.MagicAccessorImpl.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.lang.reflect.Constructor.setConstructorAccessor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Constructor.getDeclaringClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.reflect.ConstructorAccessorImpl.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 287, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationWriter.put(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1026, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject java.lang.invoke.InnerClassLambdaMetafactory.access$300(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle.internalMemberName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1307096070.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1935637221.invokeStatic_LL_L(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2310, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterType(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 880, OSR_BCI: -1 :: static jint jdk.internal.org.objectweb.asm.Type.getArgumentsAndReturnSizes(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 205, OSR_BCI: -1 :: virtual void sun.security.provider.DigestBase.engineReset() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1284, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual void java.awt.geom.Rectangle2D.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 710, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeObject(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.ParentNode.getLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.ParentNode.getLength() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.ParentNode.nodeListGetLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.ParentNode.nodeListGetLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.ParentNode.item(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.ParentNode.nodeListItem(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.ParentNode.getChildNodes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.ElementImpl.getNodeName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jshort com.sun.org.apache.xerces.internal.dom.TextImpl.getNodeType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 711, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeObject(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 9, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.AttributeMap.setNamedItem(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 9, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.AttributeMap.setNamedItem(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.lang.Double.isNaN(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.lang.Double.isNaN(jdouble) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 9, OSR_BCI: -1 :: virtual jint com.sun.org.apache.xerces.internal.dom.ParentNode.nodeListGetLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean spec.reporter.ReportGenerator.checkName(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.digit(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.digit(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 146, OSR_BCI: -1 :: static jobject org.jfree.data.general.DatasetUtilities.iterateDomainBounds(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint org.jfree.data.xy.XYSeries.getItemCount() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: virtual jint org.jfree.chart.plot.XYPlot.getRangeAxisIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6, OSR_BCI: -1 :: virtual jint org.jfree.chart.plot.XYPlot.getRangeAxisIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject org.jfree.data.general.DatasetUtilities.findRangeBounds(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject org.jfree.data.general.DatasetUtilities.iterateXYRangeBounds(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject org.jfree.data.general.DatasetUtilities.iterateXYRangeBounds(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.data.xy.XYSeries.getDataItem(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 410, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 124, OSR_BCI: -1 :: virtual void java.util.regex.Pattern.compile() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void org.jfree.data.general.AbstractDataset.fireDatasetChanged() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 446, OSR_BCI: -1 :: virtual void java.util.zip.Inflater.reset() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.ArrayDeque.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayDeque.addLast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void org.jfree.chart.event.ChartChangeEvent.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.chart.JFreeChart.plotChanged(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.chart.event.ChartChangeEvent.setChart(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.chart.JFreeChart.notifyListeners(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Point2D.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual void java.awt.image.SinglePixelPackedSampleModel.<init>(jint, jint, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual void java.awt.image.SinglePixelPackedSampleModel.<init>(jint, jint, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.awt.image.SunWritableRaster.stealData(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.awt.image.SunWritableRaster.stealTrackable(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.AffineTransform.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint sun.java2d.loops.GraphicsPrimitive.makeUniqueID(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.loops.GraphicsPrimitive.<init>(jlong, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.java2d.loops.GraphicsPrimitiveMgr$1.compare(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.java2d.loops.GraphicsPrimitiveMgr$1.compare(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.java2d.loops.GraphicsPrimitiveMgr$1.compare(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 512, OSR_BCI: -1 :: virtual jint sun.java2d.loops.GraphicsPrimitive.getUniqueID() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5124, OSR_BCI: -1 :: virtual jint sun.java2d.loops.GraphicsPrimitiveMgr$1.compare(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.java2d.loops.GraphicsPrimitiveMgr$2.compare(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.java2d.loops.GraphicsPrimitiveMgr.locate(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.util.Arrays.binarySearch0(jobject, jint, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint java.util.Arrays.binarySearch(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2472, OSR_BCI: 21 :: static jint java.util.Arrays.binarySearch0(jobject, jint, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 270, OSR_BCI: -1 :: static jint java.util.Arrays.binarySearch0(jobject, jint, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.java2d.loops.CompositeType.getSuperType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 146, OSR_BCI: -1 :: static jint java.awt.image.DataBuffer.getDataTypeSize(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.Rectangle.<init>(jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.awt.image.SunWritableRaster.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.awt.image.SinglePixelPackedSampleModel.getBitOffsets() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.awt.image.IntegerComponentRaster.verify() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Rectangle2D$Double.getWidth() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Rectangle2D$Double.getX() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jdouble java.lang.Math.floor(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Math.getExponent(jdouble) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jdouble java.lang.StrictMath.floorOrCeil(jdouble, jdouble, jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jdouble java.lang.StrictMath.floorOrCeil(jdouble, jdouble, jdouble, jdouble) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jdouble java.lang.Math.ceil(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jdouble java.lang.Math.ceil(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jdouble java.lang.StrictMath.ceil(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.SunGraphics2D.validateColor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Rectangle2D$Double.getHeight() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Rectangle2D$Double.getY() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 253, OSR_BCI: -1 :: virtual void sun.security.util.ManifestEntryVerifier.setEntry(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.MessageDigest$Delegate.engineReset() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.security.MessageDigest.digest() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.security.MessageDigest$Delegate.engineDigest() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.security.provider.DigestBase.engineDigest() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint sun.security.provider.DigestBase.engineDigest(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.security.provider.SHA.implDigest(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble org.jfree.ui.RectangleInsets.calculateLeftInset(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jdouble org.jfree.ui.RectangleInsets.calculateRightInset(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble org.jfree.ui.RectangleInsets.calculateTopInset(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual jdouble org.jfree.data.Range.getLowerBound() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual jdouble org.jfree.data.Range.getUpperBound() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint sun.nio.cs.ISO_8859_1$Encoder.encode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection.toArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 159, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.security.util.DerInputStream.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong java.io.ByteArrayInputStream.skip(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.security.util.DerValue.isPrintableStringChar(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isWhitespace(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isWhitespace(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isWhitespace(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 416, OSR_BCI: -1 :: virtual void java.math.MutableBigInteger.primitiveLeftShift(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.math.SignedMutableBigInteger.signedSubtract(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4096, OSR_BCI: 39 :: virtual jobject java.util.Properties.loadConvert(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 119, OSR_BCI: -1 :: virtual jobject java.util.Properties.loadConvert(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.jar.JarVerifier$VerifierStream.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.security.Security.getImpl(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.security.jca.GetInstance.getInstance(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.security.jca.GetInstance.getService(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.addClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 255, OSR_BCI: -1 :: virtual jobject java.security.SecureClassLoader.getProtectionDomain(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 252, OSR_BCI: -1 :: virtual jboolean java.net.URLStreamHandler.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 255, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.defineClass(jobject, jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath$JarLoader$2.getInputStream() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.Resource.getBytes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Thread.interrupted() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint sun.misc.URLClassPath$JarLoader$2.getContentLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.checkCerts(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject org.jfree.util.Log.getInstance() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jshort sun.util.locale.provider.RuleBasedBreakIterator.getShort(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 537, OSR_BCI: -1 :: static jshort sun.util.locale.provider.RuleBasedBreakIterator.getShort(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jchar java.text.StringCharacterIterator.current() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.util.locale.provider.RuleBasedBreakIterator.getCurrentCodePointCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1864, OSR_BCI: -1 :: virtual jobject java.nio.CharBuffer.limit(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$5.isSatisfiedBy(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Single.isSatisfiedBy(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$BitClass.isSatisfiedBy(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Ctype.isSatisfiedBy(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.util.regex.ASCII.getType(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.util.regex.ASCII.isType(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.regex.Matcher.groupCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong java.nio.DirectByteBuffer.ix(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.nio.Buffer.position() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$BranchConn.match(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Constructor.getConstructorAccessor() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 7182, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7182, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1155, OSR_BCI: -1 :: virtual void java.util.AbstractSet.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.awt.geom.AffineTransform.isIdentity() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.font.FontManagerFactory.getInstance() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.awt.font.FontRenderContext.getTransform() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.Double.doubleToLongBits(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 119, OSR_BCI: -1 :: virtual jint java.awt.geom.AffineTransform.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jbyte java.nio.DirectByteBuffer.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.nio.Buffer.nextGetIndex() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.font.Font2D.getStrike(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.AffineTransform.getScaleX() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.AffineTransform.getShearY() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.java2d.SunGraphics2D.getFontRenderContext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.font.FontUtilities.getFont2D(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.awt.Font.access$000(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jfloat java.awt.Font.getSize2D() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 173, OSR_BCI: -1 :: virtual jdouble java.awt.geom.AffineTransform.getTranslateX() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 173, OSR_BCI: -1 :: virtual jdouble java.awt.geom.AffineTransform.getTranslateY() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.font.CompositeGlyphMapper.getCachedGlyphCode(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 341, OSR_BCI: -1 :: virtual jdouble java.awt.geom.AffineTransform.getShearX() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 342, OSR_BCI: -1 :: virtual jdouble java.awt.geom.AffineTransform.getScaleY() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.font.StandardGlyphVector.setFRCTX() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jfloat sun.font.StandardGlyphVector.getTracking(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.awt.font.FontRenderContext.getAntiAliasingHint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.awt.font.FontRenderContext.getFractionalMetricsHint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.font.FontStrikeDesc.<init>(jobject, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.font.Font2D.getStrike(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 225, OSR_BCI: -1 :: virtual jboolean sun.font.FontStrikeDesc.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.font.CompositeStrike.getStrikeForSlot(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Point2D$Float.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.font.StandardGlyphVector$GlyphStrike.addDefaultGlyphAdvance(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.font.CompositeStrike.getGlyphMetrics(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.font.CompositeStrike.getStrikeForGlyph(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.font.FileFontStrike.getGlyphMetrics(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong sun.font.FileFontStrike.getGlyphImagePtr(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong sun.font.FileFontStrike.getCachedGlyphPtr(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.awt.Font.getFont2D() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 373, OSR_BCI: -1 :: virtual jboolean java.awt.geom.AffineTransform.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint sun.font.FontStrikeDesc.getAAHintIntVal(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.awt.Font.getLineMetrics(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.awt.Font.defaultLineMetrics(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.awt.font.FontRenderContext.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Rectangle2D$Float.getWidth() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2607, OSR_BCI: -1 :: virtual void java.net.URL.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.font.FontUtilities.isComplexText(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.font.StandardGlyphVector.init(jobject, jobject, jint, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.awt.Font$FontAccessImpl.getFont2D(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.font.StandardGlyphVector.resetDTX(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.font.CompositeFont.getMapper() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.font.StandardGlyphVector.getLogicalBounds() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 311, OSR_BCI: -1 :: static jboolean sun.font.StandardGlyphVector.equalNonTranslateTX(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.font.StandardGlyphVector.getGlyphStrike(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.font.StandardGlyphVector.getDefaultStrike() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.font.FileFontStrike.getGlyphMetrics(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: virtual jlong sun.font.FileFontStrike.getCachedGlyphPtrInternal(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jfloat sun.font.FontLineMetrics.getDescent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Rectangle2D$Float.<init>(jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Rectangle2D$Float.setRect(jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Rectangle2D$Float.getY() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jfloat sun.font.FontLineMetrics.getHeight() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.net.URLStreamHandler.hostsEqual(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.security.CodeSource.matchCerts(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.append(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void sun.misc.FloatingDecimal.appendTo(jdouble, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void org.jfree.ui.Size2D.<init>(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble org.jfree.ui.Size2D.getHeight() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 279, OSR_BCI: -1 :: static jobject sun.misc.FloatingDecimal.getBinaryToASCIIConverter(jdouble, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.misc.FloatingDecimal$BinaryToASCIIBuffer.appendTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jdouble org.jfree.ui.Size2D.getWidth() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble org.jfree.ui.RectangleInsets.extendWidth(jdouble) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.SunGraphics2D.setPaint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.SunGraphics2D.setPaint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.SunGraphics2D.setColor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint sun.java2d.SurfaceData.pixelFor(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint sun.java2d.loops.SurfaceType.pixelFor(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint sun.awt.image.PixelConverter$Xrgb.rgbToPixel(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject org.jfree.text.TextUtilities.getTextBounds(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.awt.FontMetrics.getStringBounds(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.awt.Font.getStringBounds(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.awt.Font.getStringBounds(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.font.StandardGlyphVector.<init>(jobject, jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.awt.font.GlyphVector.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.font.StandardGlyphVector.initFontData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.awt.geom.AffineTransform.getScaleInstance(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.awt.geom.AffineTransform.setToScale(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject sun.font.StandardGlyphVector.getNonTranslateTX(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.font.CompositeGlyphMapper.charsToGlyphs(jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.font.StandardGlyphVector.initPositions() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.awt.geom.Point2D$Float.<init>(jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 59, OSR_BCI: -1 :: static jobject sun.font.StandardGlyphVector$GlyphStrike.create(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Rectangle2D$Float.getX() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.awt.geom.Rectangle2D$Float.setRect(jdouble, jdouble, jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 14, OSR_BCI: -1 :: virtual void sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(jint, jlong, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 303, OSR_BCI: -1 :: virtual jint sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 25, OSR_BCI: -1 :: static jint java.lang.Long.numberOfTrailingZeros(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: virtual void sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(jint, jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual jfloat sun.font.FontLineMetrics.getAscent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jfloat sun.font.FontLineMetrics.getLeading() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.SurfaceData.markDirty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.SunGraphics2D.invalidateTransform() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.SunGraphics2D.validateBasicStroke(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jfloat java.awt.BasicStroke.getLineWidth() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean org.jfree.ui.RectangleEdge.isTopOrBottom(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6844, OSR_BCI: -1 :: static jobject java.lang.StringCoding.decode(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6844, OSR_BCI: -1 :: static jobject java.lang.StringCoding.decode(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.util.Collections.binarySearch(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble org.jfree.chart.axis.NumberAxis.valueToJava2D(jdouble, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble org.jfree.chart.axis.NumberAxis.valueToJava2D(jdouble, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.RectangularShape.getMinY() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 511, OSR_BCI: -1 :: static jint java.util.Collections.indexedBinarySearch(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 289, OSR_BCI: -1 :: static jobject sun.misc.FloatingDecimal.getBinaryToASCIIConverter(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 234, OSR_BCI: -1 :: virtual jboolean java.net.URLClassLoader.isSealed(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.awt.geom.RectIterator.isDone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.awt.geom.RectIterator.isDone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.awt.geom.RectIterator.currentSegment(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Path2D$Double.needRoom(jboolean, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Path2D$Double.needRoom(jboolean, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.RectIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.awt.geom.AffineTransform.transform(jobject, jint, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.awt.geom.AffineTransform.transform(jobject, jint, jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Path2D$Double.lineTo(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Path2D$Double.lineTo(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject org.jfree.chart.plot.Plot.resolveDomainAxisLocation(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Path2D$Double.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Path2D.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.awt.geom.Rectangle2D.getPathIterator(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Path2D$Double.append(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Path2D.closePath() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.awt.geom.RectIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.awt.geom.Path2D$Double.moveTo(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.SunGraphics2D.fill(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pipe.PixelToParallelogramConverter.fill(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pipe.AlphaColorPipe.fillParallelogram(jobject, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject org.jfree.chart.plot.Plot.resolveRangeAxisLocation(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Line2D$Double.setLine(jdouble, jdouble, jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Line2D$Double.setLine(jdouble, jdouble, jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble sun.java2d.pipe.PixelToParallelogramConverter.normalize(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1412, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.SunGraphics2D.setStroke(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pipe.PixelToParallelogramConverter.draw(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Line2D$Double.getX1() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Line2D$Double.getY1() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Line2D$Double.getX2() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Line2D$Double.getY2() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean sun.java2d.pipe.PixelToParallelogramConverter.drawGeneralLine(jobject, jdouble, jdouble, jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.awt.BasicStroke.getDashArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.StringBuffer.length() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble org.jfree.chart.axis.ValueTick.getValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.SunGraphics2D.draw(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jdouble sun.java2d.pipe.PixelToParallelogramConverter.len(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.RectangularShape.getMaxX() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1024, OSR_BCI: 5 :: static void java.util.Arrays.fill(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1024, OSR_BCI: 5 :: static void java.util.Arrays.fill(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 239, OSR_BCI: -1 :: static void java.util.Arrays.fill(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 239, OSR_BCI: -1 :: static void java.util.Arrays.fill(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Curve.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.awt.geom.LineIterator.isDone() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean sun.java2d.pisces.PiscesRenderingEngine$NormalizingPathIterator.isDone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean sun.java2d.pisces.PiscesRenderingEngine$NormalizingPathIterator.isDone() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.PiscesRenderingEngine$NormalizingPathIterator.currentSegment(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.PiscesRenderingEngine$NormalizingPathIterator.currentSegment(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Dasher.goTo(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Dasher.goTo(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jfloat sun.java2d.pisces.Renderer.tosubpixy(jfloat) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.lineTo(jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.lineTo(jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jfloat sun.java2d.pisces.Renderer.tosubpixx(jfloat) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.addLine(jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.addLine(jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.emitLineTo(jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.emitLineTo(jfloat, jfloat) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.emitLineTo(jfloat, jfloat, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.emitLineTo(jfloat, jfloat, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker$PolyStack.pushLine(jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker$PolyStack.pushLine(jfloat, jfloat) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker$PolyStack.ensureSpace(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker$PolyStack.ensureSpace(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.moveTo(jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.moveTo(jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean sun.java2d.pisces.Stroker$PolyStack.isEmpty() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Dasher.emitSeg(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Dasher.emitSeg(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.lineTo(jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.lineTo(jfloat, jfloat) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static void sun.java2d.pisces.Stroker.computeOffset(jfloat, jfloat, jfloat, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static void sun.java2d.pisces.Stroker.computeOffset(jfloat, jfloat, jfloat, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.drawJoin(jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.drawJoin(jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.emitMoveTo(jfloat, jfloat) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.moveTo(jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.moveTo(jfloat, jfloat) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.closePath() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.closePath() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.finish() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.finish() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.emitReverse() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.emitReverse() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker$PolyStack.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker$PolyStack.pop(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.emitClose() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.emitClose() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 11, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker$PolyStack.ensureSpace(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 41, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker$PolyStack.pop(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 25, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.drawJoin(jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesRenderingEngine$NormalizingPathIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesRenderingEngine$NormalizingPathIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.Renderer$ScanlineIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.Renderer$ScanlineIterator.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 512, OSR_BCI: -1 :: static jobject sun.java2d.pisces.Renderer.access$200(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1400, OSR_BCI: 291 :: virtual jint sun.java2d.pisces.Renderer$ScanlineIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer._endRendering(jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer._endRendering(jint, jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.java2d.pisces.Renderer$ScanlineIterator.access$500(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.java2d.pisces.Renderer$ScanlineIterator.access$500(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean sun.java2d.pisces.Renderer$ScanlineIterator.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint sun.java2d.pisces.Renderer$ScanlineIterator.access$600(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint sun.java2d.pisces.Renderer$ScanlineIterator.access$600(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 129, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.Renderer$ScanlineIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 300, OSR_BCI: -1 :: static jobject sun.java2d.pisces.Helpers.widenArray(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint sun.java2d.pisces.Renderer$ScanlineIterator.access$800(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint sun.java2d.pisces.Renderer$ScanlineIterator.access$800(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.Renderer$ScanlineIterator.curY() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 382, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.emitRow(jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 382, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.emitRow(jobject, jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 308, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.startRow(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 308, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.startRow(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 376, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.addRLERun(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 376, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.addRLERun(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.addTupleToRow(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.addTupleToRow(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 48, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 513, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.PiscesCache.minTouched(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 126, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesTileGenerator.nextTile() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.PiscesTileGenerator.getTypicalAlpha() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.PiscesTileGenerator.getTypicalAlpha() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.PiscesCache.alphaSumInTile(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pipe.AlphaColorPipe.renderPathTile(jobject, jobject, jint, jint, jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pipe.AlphaColorPipe.renderPathTile(jobject, jobject, jint, jint, jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 32680, OSR_BCI: 187 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pipe.AAShapePipe.draw(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pipe.AAShapePipe.renderPath(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.java2d.pisces.PiscesRenderingEngine.getAATileGenerator(jobject, jobject, jobject, jobject, jboolean, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.java2d.pipe.Region.getHeight() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.<init>(jint, jint, jint, jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.java2d.pisces.TransformingPathConsumer2D.deltaTransformConsumer(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.java2d.pisces.TransformingPathConsumer2D.inverseDeltaTransformConsumer(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void sun.java2d.pisces.PiscesRenderingEngine.pathTo(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.java2d.pisces.Helpers.widenArray(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.addEdgeToBucket(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.pathDone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.<init>(jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 96, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer$ScanlineIterator.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesTileGenerator.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.java2d.pisces.Renderer.getCache() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getBbox(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pipe.AAShapePipe.renderTiles(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 110, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pipe.AlphaColorPipe.endSequence(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesRenderingEngine.strokeTo(jobject, jobject, jobject, jboolean, jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesRenderingEngine.strokeTo(jobject, jobject, jfloat, jobject, jint, jint, jfloat, jobject, jfloat, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesRenderingEngine$NormalizingPathIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject sun.java2d.pisces.TransformingPathConsumer2D.transformConsumer(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.<init>(jobject, jfloat, jint, jint, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker$PolyStack.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 288, OSR_BCI: -1 :: static void sun.java2d.pipe.RenderingEngine.feedConsumer(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 288, OSR_BCI: -1 :: static void sun.java2d.pipe.RenderingEngine.feedConsumer(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.pathDone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.endRendering() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer$ScanlineIterator.<init>(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject sun.java2d.pisces.PiscesTileGenerator.getAlphaMap(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 392, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.getBBox(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 392, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.getBBox(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.java2d.pipe.AlphaColorPipe.startSequence(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 393, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.getBBox(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.util.BooleanList.getBoolean(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.util.BooleanList.getBoolean(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean org.jfree.chart.renderer.AbstractRenderer.getItemVisible(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 37, OSR_BCI: -1 :: virtual void java.awt.geom.AffineTransform.transform(jobject, jint, jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.awt.geom.Path2D$Iterator.isDone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.awt.geom.Path2D$Iterator.isDone() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.awt.geom.Path2D$Double$TxIterator.currentSegment(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.awt.geom.Path2D$Double$TxIterator.currentSegment(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.AffineTransform.transform(jobject, jint, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.AffineTransform.transform(jobject, jint, jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Path2D$Iterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Path2D$Iterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.awt.geom.Path2D$Double.getPathIterator(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Path2D$Iterator.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.awt.geom.Path2D$Double$CopyIterator.currentSegment(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.awt.geom.Path2D$Double$CopyIterator.currentSegment(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.java2d.pisces.Stroker.isCW(jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.java2d.pisces.Stroker.isCW(jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jobject sun.java2d.SunGraphics2D.getCompClip() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: virtual jboolean java.security.CodeSigner.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.awt.Point.<init>(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 266, OSR_BCI: -1 :: static jobject java.lang.Long.toString(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 266, OSR_BCI: -1 :: static jobject java.lang.Long.toString(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5388, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 132, OSR_BCI: -1 :: virtual void java.awt.image.SampleModel.<init>(jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.awt.image.Raster.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 131, OSR_BCI: -1 :: virtual void java.awt.image.SinglePixelPackedSampleModel.<init>(jint, jint, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 131, OSR_BCI: -1 :: virtual void java.awt.image.SinglePixelPackedSampleModel.<init>(jint, jint, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.awt.image.IntegerInterleavedRaster.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.awt.image.IntegerComponentRaster.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.awt.image.DataBufferInt.getElem(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual jobject java.awt.image.SinglePixelPackedSampleModel.getPixels(jint, jint, jint, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual jobject java.awt.image.SinglePixelPackedSampleModel.getPixels(jint, jint, jint, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 832, OSR_BCI: 141 :: virtual jobject java.awt.image.SinglePixelPackedSampleModel.getPixels(jint, jint, jint, jint, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual void sun.awt.image.ByteInterleavedRaster.setPixels(jint, jint, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual void sun.awt.image.ByteInterleavedRaster.setPixels(jint, jint, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 177, OSR_BCI: -1 :: virtual void sun.java2d.StateTrackableDelegate.markDirty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.awt.image.IntegerInterleavedRaster.createChild(jint, jint, jint, jint, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.awt.image.SinglePixelPackedSampleModel.createSubsetSampleModel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.awt.image.ByteInterleavedRaster.setRect(jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1336, OSR_BCI: 162 :: virtual jobject java.awt.image.SinglePixelPackedSampleModel.getPixels(jint, jint, jint, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void com.sun.imageio.plugins.jpeg.JPEGImageWriter.grabPixels(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.awt.image.IntegerInterleavedRaster.createWritableChild(jint, jint, jint, jint, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.awt.image.WritableRaster.setRect(jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.awt.image.Raster.getPixels(jint, jint, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.awt.image.SinglePixelPackedSampleModel.getPixels(jint, jint, jint, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 265, OSR_BCI: -1 :: virtual jint java.awt.image.SinglePixelPackedSampleModel.getNumDataElements() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.awt.image.SunWritableRaster.markDirty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.Math.min(jlong, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.RandomAccessFile.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.RandomAccessFile.readFully(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.data.xy.XYSeriesCollection.getSeries(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.data.xy.XYSeriesCollection.getSeries(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.chart.renderer.AbstractRenderer.getSeriesShape(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.chart.renderer.AbstractRenderer.getSeriesFillPaint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.util.StrokeList.getStroke(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.AffineTransform.setToTranslation(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pipe.AAShapePipe.fill(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 10, OSR_BCI: -1 :: static jboolean sun.java2d.pisces.Stroker.isCW(jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.closePath() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1124, OSR_BCI: -1 :: virtual void java.util.ArrayList.grow(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.chart.plot.XYPlot.getDomainAxisEdge() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.chart.plot.XYPlot.getDomainAxisLocation() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.chart.plot.XYPlot.getRangeAxisEdge() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.chart.plot.XYPlot.getRangeAxisLocation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.text.NumberFormat.isGroupingUsed() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 411, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 411, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint org.jfree.util.AbstractObjectList.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.Renderer$ScanlineIterator.curY() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1362, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.addEdgeToBucket(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean sun.java2d.pipe.AlphaColorPipe.needTile(jobject, jint, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5459, OSR_BCI: -1 :: static jobject sun.java2d.pisces.Helpers.widenArray(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.Integer.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.Integer.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jint java.lang.Integer.hashCode(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint org.jfree.data.xy.XYSeriesCollection.getItemCount(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint org.jfree.data.xy.XYSeriesCollection.getItemCount(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 15, OSR_BCI: -1 :: virtual void java.awt.geom.Path2D.setWindingRule(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getItemLineVisible(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.drawItem(jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject, jint, jint, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble org.jfree.data.xy.AbstractXYDataset.getXValue(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble org.jfree.data.xy.AbstractXYDataset.getXValue(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.data.xy.XYSeriesCollection.getX(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.data.xy.XYSeriesCollection.getX(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.data.xy.XYSeriesCollection.getY(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.data.xy.XYSeriesCollection.getY(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getItemShapeVisible(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.chart.renderer.AbstractRenderer.getItemShape(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject org.jfree.util.ShapeUtilities.createTranslatedShape(jobject, jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getItemShapeFilled(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.awt.geom.Path2D$Iterator.getWindingRule() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean org.jfree.chart.renderer.AbstractRenderer.isItemLabelVisible(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: virtual jint org.jfree.chart.plot.XYPlot.getDomainAxisIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6, OSR_BCI: -1 :: virtual jint org.jfree.chart.plot.XYPlot.getDomainAxisIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.text.NumberFormat.getMaximumIntegerDigits() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.text.NumberFormat.getMinimumIntegerDigits() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.text.NumberFormat.getMaximumFractionDigits() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.text.NumberFormat.getMinimumFractionDigits() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 147, OSR_BCI: -1 :: static jobject org.jfree.data.general.DatasetUtilities.iterateDomainBounds(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 147, OSR_BCI: -1 :: static jobject org.jfree.data.general.DatasetUtilities.iterateDomainBounds(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 413, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 413, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 522, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.digit(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.reporter.BenchmarkChart.addTimeInfo(jobject, jlong, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void org.jfree.data.xy.XYSeries.add(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void org.jfree.data.xy.XYDataItem.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 458, OSR_BCI: -1 :: virtual void org.jfree.data.general.AbstractDataset.notifyListeners(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 414, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.reporter.ReportGenerator.checkErrors(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 13, OSR_BCI: -1 :: virtual jboolean java.util.Hashtable.containsKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.data.xy.XYSeries.add(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.data.general.Series.fireSeriesChanged() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.data.general.SeriesChangeEvent.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.data.general.Series.notifyListeners(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jdouble org.jfree.data.xy.AbstractIntervalXYDataset.getStartYValue(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jdouble org.jfree.data.xy.AbstractIntervalXYDataset.getStartYValue(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.data.xy.XYSeriesCollection.getStartY(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.data.xy.XYSeriesCollection.getStartY(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jdouble org.jfree.data.xy.AbstractIntervalXYDataset.getEndYValue(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jdouble org.jfree.data.xy.AbstractIntervalXYDataset.getEndYValue(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.data.xy.XYSeriesCollection.getEndY(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.data.xy.XYSeriesCollection.getEndY(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.data.xy.IntervalXYDelegate.datasetChanged(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.ParentNode.ownerDocument() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 30, OSR_BCI: -1 :: virtual jobject org.jfree.data.xy.XYSeriesCollection.getStartY(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 270, OSR_BCI: -1 :: virtual void java.util.ComparableTimSort.mergeAt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 11776, OSR_BCI: -1 :: virtual jobject java.lang.ref.SoftReference.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.chart.renderer.AbstractRenderer.getItemFillPaint(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.chart.renderer.AbstractRenderer.getItemPaint(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject org.jfree.chart.renderer.AbstractRenderer.getItemOutlineStroke(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 352, OSR_BCI: -1 :: virtual jboolean org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 267, OSR_BCI: -1 :: static jobject java.lang.Long.toString(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 267, OSR_BCI: -1 :: static jobject java.lang.Long.toString(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.awt.Color.getRGB() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.text.StringCharacterIterator.getEndIndex() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 415, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 415, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 423, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 423, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 435, OSR_BCI: -1 :: virtual jdouble org.jfree.ui.RectangleInsets.calculateLeftOutset(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 438, OSR_BCI: -1 :: virtual jdouble org.jfree.ui.RectangleInsets.calculateRightOutset(jdouble) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 433, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 433, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject org.jfree.chart.block.BlockBorder.getInsets() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 441, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 441, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jdouble org.jfree.ui.RectangleInsets.calculateTopOutset(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jdouble org.jfree.ui.RectangleInsets.calculateBottomOutset(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jdouble org.jfree.ui.RectangleInsets.extendHeight(jdouble) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 457, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 457, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1364, OSR_BCI: -1 :: virtual jdouble java.awt.geom.AffineTransform.getShearX() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1365, OSR_BCI: -1 :: virtual jdouble java.awt.geom.AffineTransform.getScaleY() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.awt.geom.EllipseIterator.isDone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.awt.geom.EllipseIterator.isDone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.awt.geom.EllipseIterator.currentSegment(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.EllipseIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.awt.geom.Path2D$Double.curveTo(jdouble, jdouble, jdouble, jdouble, jdouble, jdouble) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jfloat java.lang.Math.abs(jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jfloat java.lang.Math.abs(jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.curveTo(jfloat, jfloat, jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.curveBreakIntoLinesAndAdd(jfloat, jfloat, jobject, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Renderer.curveBreakIntoLinesAndAdd(jfloat, jfloat, jobject, jfloat, jfloat) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Curve.set(jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Curve.set(jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint sun.java2d.pisces.Helpers.quadraticRoots(jfloat, jfloat, jfloat, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jdouble java.lang.Math.cbrt(jdouble) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jfloat sun.java2d.pisces.Curve.ROCsq(jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jfloat sun.java2d.pisces.Curve.ROCsq(jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint sun.java2d.pisces.Helpers.filterOutNotInAB(jobject, jint, jint, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.java2d.pisces.Helpers.within(jfloat, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Math.getExponent(jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.java2d.pisces.Stroker.within(jfloat, jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jfloat java.lang.Math.ulp(jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.emitCurveTo(jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean sun.java2d.pisces.Curve$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint sun.java2d.pisces.Stroker.findSubdivPoints(jobject, jobject, jint, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Curve.set(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.Curve.dxRoots(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.Curve.infPoints(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.Curve.perpendiculardfddf(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.java2d.pisces.Helpers.within(jdouble, jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void sun.java2d.pisces.Helpers.isort(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Curve$1.<init>(jint, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.java2d.pisces.Curve$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.java2d.pisces.Curve$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jfloat java.lang.Math.powerOfTwoF(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker.curveTo(jfloat, jfloat, jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.Curve.rootsOfROCMinusW(jobject, jint, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint sun.java2d.pisces.Helpers.cubicRootsInAB(jfloat, jfloat, jfloat, jfloat, jobject, jint, jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject sun.java2d.pisces.Curve.breakPtsAtTs(jobject, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint sun.java2d.pisces.Stroker.computeOffsetCubic(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Stroker$PolyStack.pushCubic(jfloat, jfloat, jfloat, jfloat, jfloat, jfloat) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.awt.Polygon$PolygonPathIterator.isDone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.awt.Polygon$PolygonPathIterator.isDone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.awt.Polygon$PolygonPathIterator.currentSegment(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.awt.Polygon$PolygonPathIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.awt.Polygon.getPathIterator(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jboolean sun.java2d.pisces.Renderer$ScanlineIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 334, OSR_BCI: -1 :: virtual void java.awt.Polygon$PolygonPathIterator.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.awt.geom.Ellipse2D.getPathIterator(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Ellipse2D$Double.getX() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Ellipse2D$Double.getWidth() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Ellipse2D$Double.getHeight() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint org.jfree.util.Log.getDebuglevel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jdouble org.jfree.ui.RectangleInsets.calculateBottomInset(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void java.awt.geom.EllipseIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Ellipse2D$Double.getY() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1414, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Rectangle2D$Double.getY() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject org.jfree.chart.axis.NumberAxis.getTickUnit() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar java.text.DecimalFormatSymbols.getGroupingSeparator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar java.text.DecimalFormatSymbols.getDecimalSeparator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.text.DontCareFieldPosition.getFieldDelegate() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean sun.misc.FloatingDecimal$BinaryToASCIIBuffer.digitsRoundedUp() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean sun.misc.FloatingDecimal$BinaryToASCIIBuffer.decimalDigitsExact() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar java.text.DecimalFormatSymbols.getZeroDigit() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean org.jfree.chart.axis.ValueAxis.isVerticalTickLabels() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 360, OSR_BCI: -1 :: virtual void java.text.DigitList.round(jint, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject org.jfree.chart.axis.Tick.getText() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject org.jfree.chart.axis.NumberAxis.getNumberFormatOverride() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Rectangle2D$Float.getHeight() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1280, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Rectangle2D$Double.getHeight() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jdouble java.awt.geom.RectangularShape.getMaxY() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.java2d.SunGraphics2D.getFontMetrics(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1283, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Rectangle2D$Double.getX() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.Integer.intValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.drawPrimaryLine(jobject, jobject, jobject, jobject, jint, jint, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.drawSecondaryPass(jobject, jobject, jobject, jint, jint, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1283, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Rectangle2D$Double.getWidth() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.awt.geom.Path2D.intersects(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.awt.geom.Path2D.intersects(jdouble, jdouble, jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.awt.geom.Path2D$Double.rectCrossings(jdouble, jdouble, jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void org.jfree.chart.plot.CrosshairState.updateCrosshairPoint(jdouble, jdouble, jint, jint, jdouble, jdouble, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint sun.awt.geom.Curve.rectCrossingsForLine(jint, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void org.jfree.chart.renderer.xy.AbstractXYItemRenderer.updateCrosshairValues(jobject, jdouble, jdouble, jint, jint, jdouble, jdouble, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jdouble org.jfree.data.xy.AbstractXYDataset.getYValue(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean org.jfree.ui.RectangleEdge.isLeftOrRight(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint sun.awt.geom.Curve.rectCrossingsForCubic(jint, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 311, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean com.sun.org.apache.xerces.internal.dom.NodeImpl.hasChildNodes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jshort com.sun.org.apache.xerces.internal.dom.ElementImpl.getNodeType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeValueString(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeValueString(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.NodeImpl.getTextContent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.CharacterDataImpl.getNodeValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void spec.reporter.HTMLWriter.putString(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 470, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 470, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.text.StringCharacterIterator.getIndex() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.awt.Font.hasLayoutAttributes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject org.jfree.chart.axis.Axis.getTickLabelInsets() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1026, OSR_BCI: -1 :: virtual jdouble java.awt.geom.Rectangle2D$Float.getWidth() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject org.jfree.chart.axis.ValueAxis.getRange() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 436, OSR_BCI: -1 :: virtual jobject org.jfree.util.PaintList.getPaint(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 575, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.addRLERun(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 575, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.addRLERun(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 33739, OSR_BCI: 525 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 33739, OSR_BCI: 525 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 137, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 36483, OSR_BCI: 525 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 142, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 142, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 38635, OSR_BCI: 808 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 146, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 41099, OSR_BCI: 525 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 634, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.addRLERun(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 634, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.addRLERun(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 151, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 43451, OSR_BCI: 525 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 155, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 46035, OSR_BCI: 187 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 47411, OSR_BCI: 525 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 161, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 49771, OSR_BCI: 525 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 268, OSR_BCI: -1 :: static jobject java.lang.Long.toString(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 268, OSR_BCI: -1 :: static jobject java.lang.Long.toString(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 374, OSR_BCI: -1 :: virtual jobject java.util.regex.Pattern.expr(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 179, OSR_BCI: -1 :: virtual void java.util.regex.Pattern.RemoveQEQuoting() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 8, OSR_BCI: -1 :: virtual jobject sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.charset.CharsetDecoder.decode(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject javax.swing.event.EventListenerList.getListenerList() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 481, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 481, OSR_BCI: -1 :: static jdouble java.lang.Math.min(jdouble, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.text.NumberFormat.format(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.text.DecimalFormat.format(jdouble, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.text.DecimalFormat.format(jdouble, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.text.DigitList.set(jboolean, jdouble, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.text.DecimalFormat.subformat(jobject, jobject, jboolean, jboolean, jint, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.text.DigitList.isZero() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.text.DecimalFormat.getPositivePrefixFieldPositions() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.text.DecimalFormat.getPositiveSuffixFieldPositions() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject org.jfree.chart.axis.NumberTickUnit.valueToString(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 303, OSR_BCI: -1 :: static jobject java.util.Locale.getDefault() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 49827, OSR_BCI: 99 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 100, OSR_BCI: -1 :: virtual void sun.java2d.pisces.Dasher.lineTo(jfloat, jfloat) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 694, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.addRLERun(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 694, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.addRLERun(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 50515, OSR_BCI: 187 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 169, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 250, OSR_BCI: -1 :: virtual void org.jfree.util.AbstractObjectList.set(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 753, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.addRLERun(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 753, OSR_BCI: -1 :: virtual void sun.java2d.pisces.PiscesCache.addRLERun(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 52651, OSR_BCI: 525 :: virtual void sun.java2d.pisces.PiscesTileGenerator.getAlpha(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void sun.nio.fs.UnixPath.checkNotNul(jobject, jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.regex.Matcher.start(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.regex.Matcher.end(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.Formatter$Flags.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.PrintStream.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.PrintStream.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 274, OSR_BCI: -1 :: virtual void java.io.PrintStream.print(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 362, OSR_BCI: -1 :: virtual void java.util.regex.Pattern$TreeInfo.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$LastNode.match(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jint java.lang.Character.digit(jchar, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jint java.lang.Character.digit(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject com.sun.org.apache.xerces.internal.dom.TextImpl.getNodeName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1024, OSR_BCI: 46 :: virtual jboolean java.util.regex.Matcher.search(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 53, OSR_BCI: -1 :: virtual jboolean java.util.regex.Matcher.search(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject java.nio.CharBuffer.limit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5248, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.position(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5509, OSR_BCI: -1 :: virtual void java.io.OutputStreamWriter.write(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5508, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.write(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.implWrite(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.Formatter$Flags.valueOf() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jint java.io.BufferedWriter.min(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 269, OSR_BCI: -1 :: static jobject java.lang.Long.toString(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 269, OSR_BCI: -1 :: static jobject java.lang.Long.toString(jlong) <<<<<<<

Noncompliant composite result: 364.46 ops/m
>>> DEOPT COUNTER: 78 <<<
