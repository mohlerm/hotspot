use profiles with mode 1
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.System.getSecurityManager() <<<<<<<
NOTE: no explicit compiler cache profiles file specified, uses -XX:CacheProfilesFile=cached_profiles.dat.
Error while parsing line 9: unknown command

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1280, OSR_BCI: -1 :: virtual jint java.lang.String.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2432, OSR_BCI: -1 :: virtual void java.lang.Object.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 411, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 673, OSR_BCI: -1 :: virtual jint java.lang.String.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.concurrent.ConcurrentHashMap.tabAt(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2560, OSR_BCI: -1 :: virtual void java.lang.Object.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 13056, OSR_BCI: -1 :: virtual jchar java.lang.String.charAt(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.concurrent.ConcurrentHashMap.setTabAt(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 406, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jobject java.lang.System.getSecurityManager() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.expandCapacity(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: virtual jint java.lang.String.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.ensureCapacityInternal(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isSurrogate(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.toLowerCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.CharacterData.of(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toLowerCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.getProperties(jint) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 8594: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 9147: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 9174: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.ClassLoader.checkName(jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 9217: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 9495: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 9832: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap$Node.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.concurrent.ConcurrentHashMap.spread(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.concurrent.ConcurrentHashMap.casTabAt(jobject, jint, jobject, jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 10987: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 11036: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putVal(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putIfAbsent(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.getClassLoadingLock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.findLoadedClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 370, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap.addCount(jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 905, OSR_BCI: -1 :: virtual jboolean java.lang.String.equals(jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 17778: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1366, OSR_BCI: -1 :: static void java.util.concurrent.ConcurrentHashMap.setTabAt(jobject, jint, jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 20070: java/lang/invoke/BoundMethodHandle$Species_LI

>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 993, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint, jint) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 20313: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 20320: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 20387: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 20434: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 25462: java/lang/invoke/BoundMethodHandle$Species_LILL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 25556: java/lang/invoke/BoundMethodHandle$Species_LILL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.loadClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.Launcher$AppClassLoader.loadClass(jobject, jboolean) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 27881: java/lang/invoke/BoundMethodHandle$Species_LI

>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1176, OSR_BCI: -1 :: virtual jint java.lang.String.hashCode() <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLI
Error while parsing line 28741: java/lang/invoke/BoundMethodHandle$Species_LLI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 28762: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 28937: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 29001: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 29045: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 29195: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 29321: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL
Error while parsing line 29365: java/lang/invoke/BoundMethodHandle$Species_LIL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL
Error while parsing line 29422: java/lang/invoke/BoundMethodHandle$Species_LIL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 29664: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 30150: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: com/sun/proxy/$Proxy1
Error while parsing line 30447: com/sun/proxy/$Proxy1

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLI
Error while parsing line 30573: java/lang/invoke/BoundMethodHandle$Species_LLI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 30938: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 30957: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 30997: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 31048: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 31246: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 31297: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 31336: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 31367: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 31602: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 31817: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 32774: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 32976: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLI
Error while parsing line 33019: java/lang/invoke/BoundMethodHandle$Species_LLI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 33104: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 33152: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 33457: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLI
Error while parsing line 33480: java/lang/invoke/BoundMethodHandle$Species_LLI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLI
Error while parsing line 33517: java/lang/invoke/BoundMethodHandle$Species_LLI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 34903: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 35159: java/lang/invoke/BoundMethodHandle$Species_LI

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 110, OSR_BCI: -1 :: virtual jobject java.lang.String.replace(jchar, jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.Vector.size() <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 35200: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 36679: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 37901: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 38098: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 38370: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 39212: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 39248: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 39756: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 41541: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 41555: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 41620: java/lang/invoke/BoundMethodHandle$Species_LI

>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.ArrayList.size() <<<<<<<
java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 41951: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 42037: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject java.net.URLClassLoader.access$000(jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 42138: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 42686: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 44007: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 44216: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 44224: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 44247: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 44258: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLI
Error while parsing line 44658: java/lang/invoke/BoundMethodHandle$Species_LLI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL
Error while parsing line 44736: java/lang/invoke/BoundMethodHandle$Species_LIL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 44886: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 45193: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 46543: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLI
Error while parsing line 46650: java/lang/invoke/BoundMethodHandle$Species_LLI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 47373: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 47713: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 47723: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 48127: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 48736: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Throwable.fillInStackTrace() <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 48786: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 338, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jboolean) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_I
Error while parsing line 48841: java/lang/invoke/BoundMethodHandle$Species_I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 49563: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 49979: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLI
Error while parsing line 50161: java/lang/invoke/BoundMethodHandle$Species_LLI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 50571: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 50599: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 50610: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 50619: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_I
Error while parsing line 50646: java/lang/invoke/BoundMethodHandle$Species_I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLI
Error while parsing line 50732: java/lang/invoke/BoundMethodHandle$Species_LLI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 50965: java/lang/invoke/BoundMethodHandle$Species_LILL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 51091: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L5
Error while parsing line 51482: java/lang/invoke/BoundMethodHandle$Species_L5

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 51664: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 51759: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 51890: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 51913: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 51969: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 52119: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 52162: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 52344: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD8
Error while parsing line 52432: jdk/nashorn/internal/scripts/JD8

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 52500: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_I
Error while parsing line 53276: java/lang/invoke/BoundMethodHandle$Species_I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 54214: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 54236: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 54444: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 54880: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 55107: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 55457: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 199, OSR_BCI: -1 :: virtual jobject java.io.UnixFileSystem.normalize(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 199, OSR_BCI: -1 :: virtual jobject java.io.UnixFileSystem.normalize(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.UnixFileSystem.prefixLength(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2944, OSR_BCI: -1 :: static jint java.lang.Math.min(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2944, OSR_BCI: -1 :: static jint java.lang.Math.min(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 127, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 127, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 364, OSR_BCI: -1 :: virtual jint sun.nio.cs.UTF_8$Encoder.encode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 364, OSR_BCI: -1 :: virtual jint sun.nio.cs.UTF_8$Encoder.encode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.io.File.getPrefixLength() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.String.getChars(jint, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.String.getChars(jint, jint, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 247, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 247, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jint java.util.BitSet.wordIndex(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 512, OSR_BCI: -1 :: virtual void java.util.BitSet.checkInvariants() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 512, OSR_BCI: -1 :: virtual void java.util.BitSet.checkInvariants() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 768, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 768, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 768, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 768, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.io.File.isInvalid() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getProtocol() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ref.SoftReference.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ref.SoftReference.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jint java.util.HashMap.hash(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 512, OSR_BCI: -1 :: virtual jboolean java.util.BitSet.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 512, OSR_BCI: -1 :: virtual jboolean java.util.BitSet.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.<init>(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 318, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 318, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1024, OSR_BCI: -1 :: virtual jobject java.lang.ref.Reference.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jfloat java.nio.charset.CharsetEncoder.maxBytesPerChar() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getFile() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.StringCoding.safeTrim(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.getNode(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.getNode(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.toString() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.String.getBytes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.StringCoding.encode(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.StringCoding$StringEncoder.encode(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jint java.lang.StringCoding.scale(jint, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.StringCoding.access$300(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Stack.empty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.getMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.StringCoding$StringEncoder.requestedCharsetName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 512, OSR_BCI: -1 :: static jint java.lang.ThreadLocal.access$400(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jobject java.lang.StringCoding.deref(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jint java.lang.StringCoding.access$000(jint, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jobject java.lang.ThreadLocal$ThreadLocalMap.access$000(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal$ThreadLocalMap.getEntry(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal$ThreadLocalMap.getEntry(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getHost() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.net.URL.getPort() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1496, OSR_BCI: -1 :: virtual jboolean java.lang.String.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 116, OSR_BCI: -1 :: static jobject sun.net.www.ParseUtil.encodePath(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 116, OSR_BCI: -1 :: static jobject sun.net.www.ParseUtil.encodePath(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getAuthority() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getPath() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getQuery() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getRef() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath$Loader.getBaseURL() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getUserInfo() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.lang.String.endsWith(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.io.File.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.io.UnixFileSystem.getBooleanAttributes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1127, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.String.regionMatches(jboolean, jint, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.net.URL.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.net.URL.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jchar java.lang.Character.toUpperCase(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.toUpperCase(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toUpperCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jchar java.lang.Character.toLowerCase(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath.getLoader(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jchar) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jchar) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.String.toCharArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.String.toCharArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.UnixFileSystem.resolve(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void sun.net.www.protocol.file.Handler.parseURL(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.net.URLStreamHandler.parseURL(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.net.URLStreamHandler.setURL(jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.net.URL.set(jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.File.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 104, OSR_BCI: -1 :: virtual jobject java.util.Properties.loadConvert(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5494, OSR_BCI: -1 :: static jobject java.util.concurrent.ConcurrentHashMap.tabAt(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1394, OSR_BCI: -1 :: static jboolean java.util.concurrent.ConcurrentHashMap.casTabAt(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath$FileLoader.getResource(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void sun.misc.URLClassPath.check(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.io.File.exists() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: static jobject java.lang.System.getSecurityManager() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1111, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1111, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Slice.match(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.scanToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.scanToken(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 114, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.QuotedStringTokenizer.unmatchedQuotesIn(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 114, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.QuotedStringTokenizer.unmatchedQuotesIn(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.skipDelimiters(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.skipDelimiters(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractCollection.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractList.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 178, OSR_BCI: -1 :: virtual jobject java.lang.String.trim() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar java.lang.Character.charValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.util.Vector.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.StringTokenizer.hasMoreTokens() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.StringTokenizer.nextToken() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.StringTokenizer.nextToken() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Vector.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Vector.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Vector.<init>(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Stack.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedList.linkLast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedList$Node.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.QuotedStringTokenizer.stripQuotes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.QuotedStringTokenizer.nextToken() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.removeFirst() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.options.OptionTemplate.getKey() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1624, OSR_BCI: -1 :: virtual jboolean java.lang.String.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1624, OSR_BCI: -1 :: virtual jboolean java.lang.String.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern.has(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.regex.Matcher.reset() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.LinkedList.size() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 116, OSR_BCI: -1 :: virtual jint java.lang.String.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 116, OSR_BCI: -1 :: virtual jint java.lang.String.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.TreeMap.parentOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Vector.addElement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Vector.ensureCapacityHelper(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Stack.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 474, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.unlinkFirst(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.charCount(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Vector.elementData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 103, OSR_BCI: -1 :: virtual jboolean java.util.regex.Matcher.search(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.StringTokenizer.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.StringTokenizer.<init>(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.StringTokenizer.setMaxDelimCodePoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Character.valueOf(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.regex.Pattern$Node.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Node.study(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Start.match(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.codePointAtImpl(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isHighSurrogate(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.regex.Pattern.isSupplementary(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap$Node.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.util.locale.LocaleUtils.isUpper(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 454, OSR_BCI: -1 :: virtual jobject java.lang.String.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.options.OptionTemplate.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.File.getPath() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.BufferedInputStream.getBufIfOpen() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 126, OSR_BCI: -1 :: static jobject java.io.DataInputStream.readUTF(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read1(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.DataInputStream.readUTF() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 293, OSR_BCI: -1 :: virtual jint java.io.DataInputStream.readUnsignedShort() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 340, OSR_BCI: -1 :: virtual void java.io.DataInputStream.readFully(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jshort java.io.DataInputStream.readShort() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.DataInputStream.readFully(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5457, OSR_BCI: -1 :: virtual jobject java.io.BufferedInputStream.getBufIfOpen() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 307, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 307, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.newNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.newNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 305, OSR_BCI: -1 :: virtual jobject java.util.HashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 305, OSR_BCI: -1 :: virtual jobject java.util.HashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.zip.Checksum.update(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.zip.CRC32.update(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.Number.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Byte.<init>(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Short.<init>(jshort) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Long.<init>(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.String.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isWhitespace(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isWhitespace(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isWhitespace(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jchar sun.reflect.generics.parser.SignatureParser.current() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jshort java.lang.Short.shortValue() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 242, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 242, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.add(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 242, OSR_BCI: -1 :: virtual void java.util.ArrayList.ensureCapacityInternal(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 242, OSR_BCI: -1 :: virtual void java.util.ArrayList.ensureCapacityInternal(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 242, OSR_BCI: -1 :: virtual void java.util.ArrayList.ensureExplicitCapacity(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ByteArrayOutputStream.write(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ByteArrayOutputStream.ensureCapacity(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.DataOutputStream.incCount(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint java.util.ArrayList.access$100(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.DataOutputStream.writeByte(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.DataOutputStream.write(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject sun.misc.ProxyGenerator.access$300(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.DataOutputStream.writeShort(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jshort sun.misc.ProxyGenerator$ConstantPool.getUtf8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jshort sun.misc.ProxyGenerator$ConstantPool.getValue(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint sun.misc.ProxyGenerator$ConstantPool$IndirectEntry.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jshort sun.misc.ProxyGenerator$ConstantPool.getIndirect(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 365, OSR_BCI: -1 :: virtual void sun.misc.ProxyGenerator$ConstantPool$Entry.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 365, OSR_BCI: -1 :: virtual void sun.misc.ProxyGenerator$ConstantPool$Entry.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean sun.misc.ProxyGenerator$ConstantPool$IndirectEntry.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$Itr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$Itr.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$Itr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$Itr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.checkForComodification() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 109, OSR_BCI: -1 :: static jint java.io.DataOutputStream.writeUTF(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1219, OSR_BCI: -1 :: static jobject java.io.DataInputStream.readUTF(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.put(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.Arrays$ArrayList.size() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.AbstractList$Itr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.AbstractList$Itr.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.AbstractList$Itr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.AbstractList$Itr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.checkForComodification() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1341, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.HashMap$HashIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.HashMap$HashIterator.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$HashIterator.nextNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$HashIterator.nextNode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$KeyIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$KeyIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Objects.requireNonNull(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.ByteArrayInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jbyte java.io.DataInputStream.readByte() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2305, OSR_BCI: -1 :: static jint java.util.concurrent.ConcurrentHashMap.spread(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Class.getClassLoader0() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 278, OSR_BCI: -1 :: virtual void java.lang.ref.Reference.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 278, OSR_BCI: -1 :: virtual void java.lang.ref.Reference.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.Enum.ordinal() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Objects.requireNonNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Objects.requireNonNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.testFlags(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getClassLoader() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.returnType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 113, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 113, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putShort(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putShort(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.<init>(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putByte(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putByte(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newUTF8(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint java.util.SubList.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.AbstractList$ListItr.nextIndex() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint java.util.SubList.access$200(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.testAnyFlags(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 228, OSR_BCI: -1 :: virtual void java.lang.ref.Reference.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isInvocable() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ref.ReferenceQueue.poll() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getDeclaringClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isStatic(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType$ConcurrentWeakInternSet.expungeStaleElements() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isStatic() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalize(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalize(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodType.checkSlotCount(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodType.checkSlotCount(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.testAllFlags(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.lang.Object.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.lang.Object.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.form() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.index() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.put12(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.put12(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodType.checkPtype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodType.checkPtype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ref.WeakReference.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.ptypes() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isConstructor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.type() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterType(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodOrFieldType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodOrFieldType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.makeImpl(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.makeImpl(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jshort java.lang.invoke.LambdaForm$Name.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar java.lang.invoke.LambdaForm$BasicType.basicTypeChar() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.access$100(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar sun.invoke.util.Wrapper.basicTypeChar() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$BasicType.basicTypeClass() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.execute(jint, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.execute(jint, jint, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 181, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isSamePackage(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 181, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isSamePackage(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Item.isEqualTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Item.isEqualTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.argument(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.get(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getType(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getType(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableCollection$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableCollection$1.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.append(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.type() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 104, OSR_BCI: -1 :: static jint jdk.internal.org.objectweb.asm.Type.getArgumentsAndReturnSizes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 104, OSR_BCI: -1 :: static jint jdk.internal.org.objectweb.asm.Type.getArgumentsAndReturnSizes(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getInvocationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getInvocationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1773, OSR_BCI: -1 :: virtual jobject java.lang.String.replace(jchar, jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.methodType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jchar) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putInt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putInt(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.initIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$BasicType.basicTypeSlots() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint sun.invoke.util.Wrapper.stackSlots() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 384, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.addType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 384, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.addType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.internal.org.objectweb.asm.Frame.type(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.internal.org.objectweb.asm.Frame.type(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.push(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.push(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.toString() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.MethodType.checkPtypes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.MethodType.checkPtypes(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isTypeVisible(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Type.<init>(jint, jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 386, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.makeImpl(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 386, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.makeImpl(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameterType(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forBasicType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void sun.invoke.util.BytecodeDescriptor.unparseSig(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getDescriptor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.StringBuffer.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Type.getDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Type.getDescriptor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.append(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ByteVector.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putByteArray(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putByteArray(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.initResolved(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.initResolved(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.erasedType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jbyte java.lang.invoke.MemberName.getReferenceKind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.reflect.Array.newInstance(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newClassItem(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newClassItem(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isResolved() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.arity() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnclosingMethodInfo() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 516, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 516, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 270, OSR_BCI: -1 :: static jint java.lang.Math.max(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 270, OSR_BCI: -1 :: static jint java.lang.Math.max(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newClass(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterSlotCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterSlotCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodTypeForm.parameterSlotCount() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jchar java.lang.invoke.MethodTypeForm.unpack(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jchar java.lang.invoke.MethodTypeForm.unpack(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ByteVector.enlarge(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put122(jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.time.ZoneOffset.getTotalSeconds() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.time.temporal.ChronoField.range() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 224, OSR_BCI: -1 :: virtual void java.lang.ref.SoftReference.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 224, OSR_BCI: -1 :: virtual void java.lang.ref.SoftReference.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.reflect.misc.ReflectUtil.isVMAnonymousClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 367, OSR_BCI: -1 :: virtual jobject java.lang.Class.getComponentType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.basicType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.put11(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 230, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forPrimitiveType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 230, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forPrimitiveType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ref.WeakReference.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.insertParameterTypes(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.insertParameterTypes(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint sun.invoke.util.Wrapper.hashPrim(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.MethodWriter.visitAnnotation(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationWriter.<init>(jobject, jboolean, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationVisitor.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1285, OSR_BCI: -1 :: virtual jint java.util.Arrays$ArrayList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jchar java.lang.invoke.LambdaForm$BasicType.basicTypeChar(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 388, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.toMethodDescriptorString() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.getInternalName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.getInternalName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1286, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterType(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.pop(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.pop(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 241, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 241, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 507, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 507, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.findForm(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalize(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalizeAll(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.findPrimitiveType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.MemberName.flagsMods(jint, jint, jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.init(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName$Factory.resolveOrFail(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName$Factory.resolve(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.checkForTypeAlias() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.erase() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.<init>(jobject, jobject, jobject, jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isMethod() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm.signatureArity(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.addType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 118, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getArgumentTypes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 118, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getArgumentTypes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isDoubleWord() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isPublic(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isPublic(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Label.resolve(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Label.resolve(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getSimpleName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getSimpleBinaryName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnclosingClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getDeclaringClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.set(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationWriter.visitEnd() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1542, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.returnType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.MethodTypeForm.pack(jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newNameType(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newNameTypeItem(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newNameTypeItem(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.lookupClassOrNull() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.cachedLambdaForm(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.cachedLambdaForm(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.WeakHashMap.indexFor(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.returnType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitStoreResult(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.intrinsicName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.push(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn(jint, jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn(jint, jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newMethodItem(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newMethodItem(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isPrivate(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.member() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.Class.isAnonymousClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.Class.isLocalClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.InvokerBytecodeGenerator.refKindOpcode(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isSubwordOrInt() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isIntegral() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isNumeric() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.methodType(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.basicType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.basicType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isProtected(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.preparedLambdaForm(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isCallerSensitive() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitInsn(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitInsn(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 235, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableCollection$1.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.iterator() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 280, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableCollection.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 280, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableCollection.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.isCallerSensitive(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.canBeCalledVirtual(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 441, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 441, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 270, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterList() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 270, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterList() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.logging.DebugLogger.isEnabled() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindIsField(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.access$000() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkSymbolicClass(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint sun.invoke.util.VerifyAccess.getClassModifiers(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isField() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.DirectMethodHandle.maybeCompile(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.DirectMethodHandle.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaFormEditor$Transform.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1180, OSR_BCI: -1 :: virtual jbyte java.lang.invoke.MemberName.getReferenceKind() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle.internalMemberName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindIsMethod(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindHasReceiver(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkAccess(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 359, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isClassAccessible(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkSecurityManager(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Property.getKey() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.getTable() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.WeakHashMap.expungeStaleEntries() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.WeakHashMap.expungeStaleEntries() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.WeakHashMap.maskNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.WeakHashMap.hash(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon(jbyte, jobject, jobject, jboolean, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkMethod(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.maybeBindCaller(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.setVarargs(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isVarargs() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.lastUseIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5595, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.expandCapacity(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.SubList$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.SubList$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.SubList$1.nextIndex() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 231, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.initInputFrame(jobject, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitReferenceCast(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.intrinsicName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 492, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 492, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitTypeInsn(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.visitMethod(jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodVisitor.<init>(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.noSuccessor() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMaxs(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMaxs(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 247, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitFrame(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 247, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitFrame(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitEnd() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.MethodWriter.getSize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.useCount(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 468, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 201, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.MethodWriter.startFrame(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.endFrame() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 296, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.InvokerBytecodeGenerator.assertStaticType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jint java.lang.invoke.InvokerBytecodeGenerator.storeInsnOpcode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormEditor$Transform.<init>(jlong, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.lastUseIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getFieldType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 386, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 386, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.isParam() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaFormBuffer.ownedCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 240, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isTypeVisible(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap$HashIterator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jobject java.lang.String.valueOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.signatureReturn(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Factory.typeSig(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.String.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassVisitor.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.visit(jint, jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ByteVector.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.values() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$Values.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap$ValueIterator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.DirectMethodHandle.shouldBeInitialized(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitFieldInsn(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newFieldItem(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.visitSource(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1283, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.<init>(jobject, jint, jobject, jint, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm.fixResult(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.fixDebugName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.methodType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.signatureType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCode(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.<init>(jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCodeBytes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.classFilePrologue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitReturn(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.classFileEpilogue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.resolveInvokerMember(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 380, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.preparedLambdaForm(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.methodType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.editor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor.lambdaFormEditor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormEditor.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.debug(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.debug(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.getterFunction(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.getterFunction(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.LambdaFormEditor$Transform.inRange(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.LambdaFormEditor$Transform.inRange(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormEditor$Transform.<init>(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.extendWith(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.extendWith(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(jobject, jint, jobject, jobject, jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(jobject, jint, jobject, jobject, jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.editor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Byte.valueOf(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 362, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.compileToBytecode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isGetter() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 378, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.useCount(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap$Element.getLink() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 275, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.replaceNames(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 275, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.replaceNames(jobject, jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.internalMemberName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.internalMemberName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.<init>(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MemberName.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.Objects.hash(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.Arrays.hashCode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.Byte.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Byte.hashCode(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.resolveOrFail(jbyte, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.constructor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L.make(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.<init>(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle.rebind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle.rebind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.makeReinvoker(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 283, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 283, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1416233903.invokeStatic_L4_L(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_LL.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LL.make(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LL.make(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LL.fieldCount() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.PropertyHashMap$Element.match(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.PropertyHashMap$Element.match(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedList.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractSequentialList.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getMap() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Property.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.PropertyHashMap.findElement(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 389, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 389, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getProto() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Property.getLocalType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Property.getLocalType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap$Element.getProperty() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.findElement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.findElement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.resolveOrFail(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkMethodName(jbyte, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 213, OSR_BCI: -1 :: static jobject sun.invoke.util.BytecodeDescriptor.unparseMethod(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.<init>(jobject, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 327, OSR_BCI: -1 :: virtual jobject java.lang.Class.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 227, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodTypeForm.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 316, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isSingleWord() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.changeName(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Factory.makeFieldName(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.Arrays.fill(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.Arrays.rangeCheck(jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 426, OSR_BCI: -1 :: static void java.lang.Integer.getChars(jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 426, OSR_BCI: -1 :: static void java.lang.Integer.getChars(jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 214, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.internArguments() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.findProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.find(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findProperty(jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 337, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 410, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableRandomAccessList.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 407, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableList.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.invokerType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 251, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.arguments(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.getterFunctions() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.rebind() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.BoundMethodHandle.tooComplex() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.expressionCount() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.dropParameterTypes(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.dropParameterTypes(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jbyte java.lang.invoke.LambdaFormEditor$Transform.bval(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jbyte java.lang.invoke.LambdaFormEditor$Transform.bval(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaFormEditor$Transform.packedBytes(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 233, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandles$Lookup.restrictProtectedReceiver(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.in(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual jobject java.lang.Class.cast(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentType(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentForm(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentForm(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant(jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectMethodForConstant(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectMethodNoSecurityManager(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaFormEditor$Transform.packedBytes(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyHashMap$Element.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.setCachedLambdaForm(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.PropertyHashMap.binIndex(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.bindArgumentL(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentL(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleImpl.isCompileConstant(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 279, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.basicTypeSignature() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jint java.lang.invoke.InvokerBytecodeGenerator.getConstantPoolSize(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 386, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.bogusMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 378, OSR_BCI: -1 :: virtual jobject java.lang.invoke.InvokerBytecodeGenerator.cpPatches(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Property.getFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makePairwiseConvert(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makePairwiseConvert(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makePairwiseConvertByEditor(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.computeValueConversions(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.MethodHandleImpl.countNonNull(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asTypeUncached(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.bindTo(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.asType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 327, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitReturnInsn(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$NamedFunction.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 394, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandles$Lookup.canBeCached(jbyte, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean sun.misc.VM.isSystemDomainLoader(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.FinalScriptFunctionData.isConstructor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 291, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isMemberAccessible(jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyHashMap.<init>(jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 406, OSR_BCI: -1 :: static jobject java.util.Collections.unmodifiableList(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findProperty(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 268, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isPublic() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Property.getSlot() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 230, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getTypeErrorThrower() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.ScriptFunctionImpl.setPrototype(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 292, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.asNormalOriginal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.isGlobal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 323, OSR_BCI: -1 :: virtual jobject java.util.Vector.elementAt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jint sun.nio.cs.UTF_8$Decoder.decode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.generics.parser.SignatureParser.advance() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Enum.<init>(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Scanner.atEOF() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Scanner.atEOF() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.parser.Scanner.charAt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.parser.Scanner.charAt(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.skip(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.skip(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.isEOL(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.isEOL(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Lexer.isJSEOL(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.TokenType.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenType.getLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.isWhitespace(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Lexer.isJSWhitespace(jchar) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierPart(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierPart(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierPart(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isJavaIdentifierPart(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isJavaIdentifierPart(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 570, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 570, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Token.descPosition(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.TokenType.getValues() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.Token.descType(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.TokenType.getKind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Token.descLength(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenStream.index(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Integer.valueOf(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Integer.valueOf(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveDefault(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIdentNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.getLexicalContext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIdentNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LexicalContext.access$100(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.findNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.findNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext$NodeIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext$NodeIterator.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint jdk.nashorn.internal.ir.LexicalContext.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Node.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Node.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Compiler.isOnDemandCompilation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.FindScopeDepths.access$000(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext$NodeIterator.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext$NodeIterator.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.HashMap.size() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.push(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getSymbol() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LexicalContextNode$Acceptor.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LexicalContextNode$Acceptor.accept(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.pop(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.IdentityHashMap.maskNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.IdentityHashMap.maskNull(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.IdentityHashMap.hash(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.IdentityHashMap.hash(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Expression.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Expression.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap$Node.getKey() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap$Node.getValue() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.tokenType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.tokenType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.newNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.newNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$Entry.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.linkNodeLast(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getInternalType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$SynchronizedMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Hashtable.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.add(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.add(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.parser.Token.toDesc(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.parser.Token.toDesc(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.TokenStream.put(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.TokenStream.put(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenStream.next(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenStream.last() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.parser.AbstractParser.getToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.parser.AbstractParser.getToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.parser.TokenStream.get(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.nextToken() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.nextToken() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.nextOrEOL() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.nextOrEOL() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.TokenStream.isFull() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.skipWhitespace(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.skipWhitespace(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 4608, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.getProperties(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.add(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.log(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.log(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.getFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.getFlag(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants.symbolName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setRHS(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1340, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 270, OSR_BCI: -1 :: virtual void java.util.ArrayList.grow(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContextExpression.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext$NodeIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ExpressionStatement.setExpression(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ExpressionStatement.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ExpressionStatement.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getExistingSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getExistingSymbol(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.LinkedHashMap$LinkedHashIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.LinkedHashMap$LinkedHashIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setLHS(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isScope() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedHashIterator.nextNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedHashIterator.nextNode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.hasSlot() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.hasSlot() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.addNoClone(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.Integer.intValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getBlocks() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.types.Type.weight() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.getTypeClass() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayDeque.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayDeque.push(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayDeque.addFirst(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayDeque.addFirst(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.peek() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.peek() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.peekFirst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$1.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 396, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.valueConversion(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 406, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.filterArgumentForm(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getBody() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.types.Type.getSlots() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.internal.org.objectweb.asm.Frame.merge(jobject, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.internal.org.objectweb.asm.Frame.merge(jobject, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 518, OSR_BCI: -1 :: virtual void java.util.AbstractMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.withConstraint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 410, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.isConvertibleTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.findBoundCallerClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectMethod(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaFormBuffer.indexOf(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject java.util.SubList.access$100(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.SubList$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.SubList$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 535, OSR_BCI: -1 :: static jobject java.util.Arrays.asList(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 532, OSR_BCI: -1 :: virtual void java.util.Arrays$ArrayList.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractList$ListItr.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.SubList.checkForComodification() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 386, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMaxs(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 386, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMaxs(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.TokenType.getNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.TokenLookup.lookupOperator(jchar, jchar, jchar, jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.TokenLookup.lookupOperator(jchar, jchar, jchar, jchar) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.reset(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.reset(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierStart(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isJavaIdentifierStart(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isJavaIdentifierStart(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierStart(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.CharacterData.of(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Node.getFinish() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.pollFirst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.pollFirst() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.removeFirst() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenType.getPrecedence() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Node.<init>(jlong, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.canStartLiteral(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.canStartLiteral(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.TokenType.startsWith(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Expression.<init>(jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Node.getStart() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.TokenType.isOperator(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.skipEOL(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.scanIdentifierOrKeyword() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.scanIdentifierOrKeyword() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.Lexer.scanIdentifier() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.Lexer.scanIdentifier() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.TokenLookup.lookupKeyword(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.TokenLookup.lookupKeyword(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.IdentNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getValue(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.getValueOf(jlong, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.getValueOf(jlong, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.AbstractParser.isNonStrictModeIdent() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1308, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Token.descPosition(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 124, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.skipComments() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 124, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.skipComments() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Lexer.convertDigit(jchar, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 250, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.valueOfIdent(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 250, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.valueOfIdent(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.expectValue(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.createIdentNode(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.createIdentNode(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putIfAbsent(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getIdent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getIdent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.leftHandSideExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.primaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Expression.<init>(jlong, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Node.<init>(jlong, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 429, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.createIdentNode(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 429, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.createIdentNode(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 372, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.AbstractParser.expectDontAdvance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 349, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.AbstractParser.expect(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContextBaseNode.getStatements() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 329, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression(jobject, jint, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterExpressionStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.lhs() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.ir.Node.getToken() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setBase(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setBase(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterAccessNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveAccessNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants$BinaryNodeConstantEvaluator.reduceOneLiteral() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterLiteralNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveLiteralNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getCurrentFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getCurrentFunction() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setStatements(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setStatements(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlags(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.Collections$SingletonList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlag(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlag(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Statement.isTerminal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.accept(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ExpressionStatement.getExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getFunction() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 542, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.replaceInLexicalContext(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 542, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.replaceInLexicalContext(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.Collections$UnmodifiableCollection.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.Collections$UnmodifiableCollection.size() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 537, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.replace(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 537, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.replace(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isProgram() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterCallNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBinaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.getExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.isEmpty() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlag(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlags(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlag(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setBody(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterJoinPredecessorExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterJoinPredecessorExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.setExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveJoinPredecessorExpression(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveCallNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 573, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setArgs(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 573, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setEvalArgs(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 573, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setEvalArgs(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveIdentNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Node.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Node.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContextExpression.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonList.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.Collections$EmptyList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.appendStatement(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 328, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jobject, jint, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockLexicalContext.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockLexicalContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Statement.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.putMapEntries(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.SplitIntoFunctions.appendStatement(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isObject() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isObject() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 315, OSR_BCI: -1 :: virtual jboolean java.util.HashMap.containsKey(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.contains(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Node.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Node.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Long.hashCode(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.IdentNode.<init>(jobject, jobject, jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.IdentNode.<init>(jobject, jobject, jobject, jint, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.setProgramPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.setProgramPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.canBeOptimistic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isPropertyName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BaseNode.isFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.IntDeque.getAndIncrement() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getWidestOperationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getWidestOperationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.ProgramPoints.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 445, OSR_BCI: -1 :: virtual jobject java.util.HashMap.getNode(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 445, OSR_BCI: -1 :: virtual jobject java.util.HashMap.getNode(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ProgramPoints.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isInternal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveIdentNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BaseNode.canBeOptimistic() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 781, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 781, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Node.isTokenType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getMostPessimisticType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BaseNode.<init>(jobject, jobject, jboolean, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 257, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.CallNode.<init>(jobject, jobject, jobject, jint, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 257, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.CallNode.<init>(jobject, jobject, jobject, jint, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.visitor.NodeVisitor.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.visitor.NodeVisitor.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getAncestorBlocks(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getAncestorBlocks(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 618, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 618, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getBlocks(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext$1.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isInitializedHere() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 561, OSR_BCI: -1 :: virtual jobject java.util.HashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 561, OSR_BCI: -1 :: virtual jobject java.util.HashMap.put(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.findSymbol(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.findSymbol(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedEntryIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedEntryIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols$1.enterDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isConst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isBlockScoped() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isLet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getCurrentBlock() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.getFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.info(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ReturnNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractSet.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractSet.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setNeedsSlot(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.nameIsUsed(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.end(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.end(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterReturnNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isFunctionSelf() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.maybeForceScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.accept(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setTest(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIfNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setPass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setFail(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.shouldTrace() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getAllNodes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isThis() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 793, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.findSymbol(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 793, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.findSymbol(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 232, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.FunctionNode.<init>(jobject, jlong, jobject, jint, jobject, jobject, jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setIsInitializedHere() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths$1.enterDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths$1.enterDefault(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.getTest() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.Integer.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.Integer.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Integer.hashCode(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 438, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isGlobal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveReturnNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 238, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.needsScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIfNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeAccess(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext.isFunctionBody() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getParentBlock() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.UnwarrantedOptimismException.isValid(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.UnwarrantedOptimismException.isValid(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.IdentNode.getProgramPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.ParserContextBaseNode.getFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Namespace.getParent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.AccessNode.<init>(jobject, jobject, jobject, jboolean, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Property.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.AssertsEnabled.assertsEnabled() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getLogger() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.peek(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.peek(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isBoolean() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isBoolean() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.peekType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.peekType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.peek() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.FunctionNode.getId() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isBytecodeLocal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isBytecodeLocal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BaseNode.getBase() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveDefault(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.BinaryNode.getProgramPoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveOptimistic(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint java.util.TreeMap.access$100(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Symbol.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 799, OSR_BCI: -1 :: virtual void java.util.ArrayList.rangeCheck(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 802, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.elementData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isInternal() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.getDescriptor() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.typeFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.typeFor(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isAssignment() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isAssignment() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.BaseNode.getProgramPoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.needsArguments() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.tagNeverOptimistic(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.BitSet.set(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.BitSet.set(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.BitSet.expandTo(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveIdentNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.CallNode.getProgramPoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 250, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BinaryNode.<init>(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.rhs() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$LvarType.access$400(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedValueIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedValueIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpression(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.ArrayDeque.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.ArrayDeque.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$EntryIterator$Entry.checkIndexForEntryUse() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.enterDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.enterDefault(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$LvarType.access$100(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getLocalVariableTypeOrNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.IdentityHashMap.nextKeyIndex(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.put(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.toLvarType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.toLvarType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setState(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.BinaryNode.isLogical(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.remove(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.remove(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.Collections$EmptyMap.containsKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 222, OSR_BCI: -1 :: static jint java.util.HashMap.tableSizeFor(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap$IdentityHashMapIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap$IdentityHashMapIterator.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.IdentityHashMap$IdentityHashMapIterator.nextIndex() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.IdentityHashMap$IdentityHashMapIterator.nextIndex() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.IdentityHashMap.unmaskNull(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$EntryIterator$Entry.<init>(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$EntryIterator$Entry.<init>(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator$Entry.getKey() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator$Entry.getKey() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator$Entry.getValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator$Entry.getValue() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createConversion(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createConversion(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.pushExpressionType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.listIterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.listIterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.access$1100(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveDefault(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$TypeHolderExpression.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isInteger() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveIdentNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.access$1000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 289, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 289, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getLocalVariableType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$LinkedHashIterator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isLong() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isNumber() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.assertTypeStackIsEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterIdentNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BaseNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BaseNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.joinOnLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setFlag(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList$ListItr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList$ListItr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap.closeDeletion(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isComparison() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Type.getSort() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.RegularEnumSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.RegularEnumSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.EnumSet.typeCheck(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Timing.isEnabled() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 355, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Parser.isArguments(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 247, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Statement.<init>(jint, jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.ArrayDeque.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 221, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BaseNode.<init>(jlong, jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 202, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.ParserContextBaseNode.setFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getStatements() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isUnknown() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.HashMap.comparableClassFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.HashMap.comparableClassFor(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1152, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.setProgramPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1152, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.setProgramPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.createSymbol(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.putSymbol(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.Integer.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isSelfModifying() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 322, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getInternalName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getInternalName(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.className(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.className(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1285, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.access$000() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.pushType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.pushType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.push(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.methodDescriptor(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.narrowerThan(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.narrowerThan(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.getInternalType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 662, OSR_BCI: -1 :: static jint java.lang.Integer.stringSize(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isEquivalentTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isEquivalentTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 398, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getTypeUncached() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.size() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.typeFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.typeFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.markLocalLoad(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$Access.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: static jobject java.lang.ClassLoader.getClassLoader(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getScriptEnvironment() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 861, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isFinal(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList$1.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1302, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.constructor() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.extendWith(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.extendWith(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList.listIterator(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableList$1.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableList$1.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.hasDualFields() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.checkCustomized(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.SubList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.SubList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.SubList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.SubList$1.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.SubList$1.<init>(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getMethodType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.maybeCustomize(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.invokers() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.Invokers.cachedInvoker(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Factory.makeSignature(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1282, OSR_BCI: -1 :: virtual jobject java.lang.String.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 216, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getIdentifierName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getOptimisticType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Property.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.checkExactType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction.<init>(jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.checkUndeclared() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getGlobal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FinalScriptFunctionData.addInvoker(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getPrototype() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getPrototype() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.subList(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.subList(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.RandomAccessSubList.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.SubList.<init>(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableRandomAccessList.subList(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableRandomAccessList.subList(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.listToArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.debug(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptFunctionData.setArity(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.isCurrentDiscard(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isString() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.convert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.convert(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Label.getFirst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Label.getFirst() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.ClassEmitter$Flag.getValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Compiler.useOptimisticTypes() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.within(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.within(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.FindScopeDepths.findBodyBlock(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$WrappedMember.getTarget() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.AbstractList.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.AbstractList.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList.listIterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList.listIterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.lookupClass() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DelegatingMethodHandle.rebind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DelegatingMethodHandle.rebind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.ParserContextBaseNode.getFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 234, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.appendStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 234, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContext.appendStatementToCurrentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getScriptFunctionData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.statement(jboolean, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.addStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BinaryNode.<init>(jlong, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getMostOptimisticType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$TreeNode.find(jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$TreeNode.find(jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableCollection.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.canBeOptimistic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.Enum.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 381, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.symbolNeedsToBeScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isFunctionDeclaration() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.start(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext.setBlockNeedsScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBinaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isLogical() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setOperands(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.needsParentScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.typeFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newConstItem(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants.type() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.widerThan(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.getTopLocalLoad() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpression(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpression(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1.<init>(jobject, jobject, jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpression(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.getProperty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getOutermostFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.MethodEmitter.getStackSize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.coerceStackTop(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isRestOf() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isRestOf() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$Call.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayDeque.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 228, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 228, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Symbol.getSlot(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Symbol.getSlot(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getContext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.set(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.set(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.generic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 337, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isParam() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.FindScopeDepths.definedInBlock(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Edge.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getScriptFunctionData(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.storeStack(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.storeStack(jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter$LocalVariableDef.access$000(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.load(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Long.numberOfTrailingZeros(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 201, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.NameCodec.encode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 201, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.NameCodec.encode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context.getEnv() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isEvalCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 235, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.widest(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.addSuccessor(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isCategory2() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Frame.merge(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Frame.merge(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.RegularEnumSet$EnumSetIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.getParameterTypes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MutableCallSite.getTarget() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList$1.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getNameToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getNameToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.insertParameterTypes(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 236, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.growNames(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArguments(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArgumentsChecks(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.isEmpty() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.TypeConverterFactory.applyConverters(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.TypeConverterFactory.applyConverters(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.addArgumentForm(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.addArgumentForm(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 292, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.genericMethodType(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 292, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.genericMethodType(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeConverterFactory.canAutoConvert(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isMethodInvocationConvertible(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isMethodInvocationConvertible(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$ClassValueMap.getCache() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.changeReturnType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.SubList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.SubList.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setMap(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.misc.SharedSecrets.getJavaLangAccess() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.ParserContextFunctionNode.isProgram() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 245, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 215, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.verifyStrictIdent(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextBaseNode.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockLexicalContext.popStatements() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.binaryNodeWeight(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.HashMap$TreeNode.tieBreakOrder(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 356, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.defineSymbol(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterPropertyNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.setKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.setValue(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.setGetter(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.setSetter(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.Objects.hashCode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newConst(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.MethodEmitter.isReachable() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.MethodEmitter.isReachable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.Collections$EmptyMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.popDiscardIfCurrent(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isFastScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.inDynamicScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$7900(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Statement.getLineNumber() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Property.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label.getStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getCallSiteFlags() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.FunctionNode.getCallSiteFlags() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getCompilerConstantSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.hasSlotFor(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitInvokeDynamicInsn(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitInvokeDynamicInsn(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newInvokeDynamicItem(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newInvokeDynamicItem(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Handle.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newHandle(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 531, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newInteger(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 456, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newHandleItem(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getClassName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getBreakLabel() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.fine(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.findStatic(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$11$1.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.ensureUniqueLabels(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.FindScopeDepths.findInternalDepth(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Symbol.getUseCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getConstantData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.getCompilerConstantType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.typeDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.fieldType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label.getLabel() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug_label(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.reflect.Field.getModifiers() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L3.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getOwner() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isBuiltin() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.AccessorProperty.canChangeType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.ParserContextFunctionNode.getId() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContextFunctionNode.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnumConstantsShared() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.System$2.getEnumConstantsShared(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.String.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.toArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 243, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.parser.Token.recast(jlong, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leavePropertyNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isNumeric() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.Collections$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashSet.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 379, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setIdentifierLvarType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpressionOnEmptyStack(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.access$700(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.checkTemporalDeadZone(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isDead() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invoke(jint, jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.fixParamStack(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodArguments(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodReturnType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.isWithBoundary(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.notNarrowerThan(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.maybeNew(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter.getUnitClassName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.inDynamicContext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassNotFoundException.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ReflectiveOperationException.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Exception.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Throwable.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getSource() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.IntDeque.push(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpressionAsType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.IntDeque.pop() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getLocalVariableConversion() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Label.isBreakTarget() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: static jint java.util.BitSet.wordIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$700(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.checkAssignTarget(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$800(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$14.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.store() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.prologue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store$1.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$14.evaluate() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.storeNonDiscard() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.epilogue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store$2.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator$Store.access$7500(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.access$8300(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Expression.getWidestOperationType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator$Store.access$7600(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store.isSelfModifying() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.invalidateLocalLoadsOnStack(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Enum.getDeclaringClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.EnumSet.noneOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.EnumSet.getUniverse(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.RegularEnumSet.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.EnumSet.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.dropArguments(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.MethodHandles.dropArgumentChecks(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.AbstractRelinkableCallSite.getDescriptor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.invoke.util.Wrapper.primitiveType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.foldArguments(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.foldArgumentChecks(jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.foldArgumentChecks(jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.foldArgumentsForm(jint, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getSetter(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.AccessorProperty.needsInvalidator(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.containsKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.containsKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Property.setBuiltinSwitchPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LI.fieldCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.exactInvoker(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.Invokers.exactInvoker() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getFlags(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getFlags(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint sun.invoke.util.Wrapper.hashWrap(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.CallSite.type() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.findWrapperType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.invoke.util.Wrapper.convert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.invoke.util.Wrapper.convert(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.invoke.util.Wrapper.wrapperType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forceType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.toArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$AsVarargsCollector.getTarget() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isFlag(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.bindArgumentI(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentI(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L3I.fieldCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/589446616.invokeStatic_L5_L(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L3.make(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L3I.<init>(jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getGlobalConstants() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkRequestImpl.getCallSiteDescriptor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection.toArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArgumentPrimitive(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 227, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.insertArguments(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getNameTokenCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getNameTokenCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_LILL.<init>(jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.countTokens() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getLookup() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LILL.fieldCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.profile(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeBlockInliningWrapper(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$2.apply(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$2.apply(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleImpl$CountingWrapper.<init>(jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleImpl$CountingWrapper.<init>(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.DelegatingMethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.Global.instance() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.Global.instance() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jchar java.net.URI$Parser.charAt(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContextFunctionNode.getEndParserState() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.endOfLine() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.TokenStream.commit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 109, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.lexify() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 271, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.verifyAssignment(jlong, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Namespace.uniqueName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContextExpression.<init>(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.hideDefaultName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 309, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.getCurrentFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.expressionStatement() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5355, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.TokenStream.isFull() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.newBlock() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextBlockNode.<init>(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.restoreBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jlong, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jlong, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.assignmentExpression(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.getType(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.getType(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Statement.hasGoto() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.EnumSet.of(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.digit(jchar, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.digit(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.digit(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 398, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Parser.useBlockScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FoldConstants$ConstantEvaluator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FoldConstants$BinaryNodeConstantEvaluator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants$BinaryNodeConstantEvaluator.eval() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants$BinaryNodeConstantEvaluator.reduceTwoLiterals() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.setExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$NullLiteralNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$ListItr.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveExpressionStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.ReturnNode.isTerminal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$ListItr.hasPrevious() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower$1.popStatements() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower$1.afterSetStatements(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList$1.hasPrevious() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setIsTerminal(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.initialize(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.WeighNodes.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Splitter$2.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveUnaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Splitter.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Splitter.access$100(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContextStatement.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.TreeMap$PrivateEntryIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 167, OSR_BCI: -1 :: virtual jint java.util.ArrayList.indexOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.WeighNodes.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$KeyIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$PrivateEntryIterator.nextEntry() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.TreeMap.successor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setCompileUnit(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5234, OSR_BCI: -1 :: virtual void java.util.ArrayList.ensureExplicitCapacity(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.getCurrentFunctionState() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BreakableStatement.getBreakLabel() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions$1.afterSetStatements(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.Enum.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.CallNode.canBeOptimistic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.start(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.isUnparsedFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 304, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isVarArg() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isBlockScoped() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.initCompileConstant(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 310, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getFunctionBody(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getParameters() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 294, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isSplit() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 367, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesScopeSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext.setFlag(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 485, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.allVarsInScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.entrySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedEntrySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$LinkedEntryIterator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.VarNode.getSymbolFlags() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isLet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isConst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 331, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.isLocal(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 331, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getDefiningFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContextStatement.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.needsCallee() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.getBreakLabel() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterForNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterTernaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Float.isNaN(jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getKind() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getContext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.annotationData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.isDynamicScopeBoundary(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptFunctionData.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.annotation.AnnotationInvocationHandler.invoke(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getAnnotation(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject com.sun.proxy.$Proxy1.name() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context.getLogger(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getLoggerName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptEnvironment.hasLogger(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveTernaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FindScopeDepths.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 224, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.hasEval() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.remove(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.removeNode(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context.getLogger(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.keySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$KeySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap$KeyIterator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.HashMap.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Collections.emptyMap() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BreakableStatement.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LoopNode.<init>(jobject, jobject, jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterExpressionStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getInvalidatedProgramPointType(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeEvaluator.getEvaluatedType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 320, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeEvaluator.getOptimisticType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.getTest() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveForNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5602, OSR_BCI: -1 :: static jint java.util.HashMap.hash(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 287, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.onAssignment(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 372, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.symbolIsUsed(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 385, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.symbolIsUsed(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.values() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 382, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap.init(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 390, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Symbol.setHasSlotFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.AbstractMap.clone() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.access$900(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getSymbols() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.toArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.getInit() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.Collections$EmptyIterator.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$NumberLiteralNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getEvalArgs() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5538, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlags(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 333, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.UnaryNode.isAssignment() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.AbstractSequentialList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedList.checkPositionIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList.isPositionIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedList$ListItr.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 250, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getUnionTypes(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 382, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Symbol.slotCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.ForNode.<init>(jobject, jobject, jobject, jobject, jobject, jint, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$IdentityHashMapIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$IdentityHashMapIterator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.widestReturnType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.entrySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntrySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$EntryIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$EntryIterator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 242, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedList$ListItr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedList$ListItr.checkForComodification() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ReturnNode.getExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 281, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getArgs() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.Collections$EmptyMap.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$KeyIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap$KeySet.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 293, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.widestLvarType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpressions(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBreakable(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 214, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.jumpToLabel(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 214, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getOrCreateJumpTarget(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>(jint, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.IdentityHashMap.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 206, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.jumpToLabel(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 268, OSR_BCI: -1 :: virtual jobject java.util.HashSet.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5523, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlag(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source.data() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source$URLData.array() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.trimToSize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getFunctionNodeId() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getFunctionFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getEndParserState() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Parser$ParserState.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Parser$ParserState.access$100(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ErrorManager.hasErrors() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.createParserContextFunctionNode(jobject, jlong, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextFunctionNode.<init>(jlong, jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextFunctionNode.setLastToken(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.createFunctionNode(jobject, jlong, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.parser.ParserContextFunctionNode.getLastToken() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.FunctionNode.<init>(jobject, jint, jlong, jint, jlong, jlong, jobject, jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.printAST(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.formalParameterList() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.formalParameterList(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.functionBody(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.ParserContextFunctionNode.isStrict() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Lower.markerFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.checkEval(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ObjectNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveCallNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 343, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getParentFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeSet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.navigableKeySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$KeySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.keyIterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.getFirstEntry() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeMap$KeyIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeMap$PrivateEntryIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Splitter.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Splitter.split(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.finest(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.codegen.WeighNodes.weigh(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.codegen.WeighNodes.weigh(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.WeighNodes.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompileUnit.addWeight(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Splitter.directChildren(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Splitter$2.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Splitter$1.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Splitter.findUnit(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.SplitIntoFunctions.enterFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.SplitIntoFunctions$FunctionState.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getWidestOperationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ProgramPoints.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.HashMap$TreeNode.balanceInsertion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CompilationPhase$6$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Collections.emptyIterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveFunctionNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1265210847.invokeStatic_LL_L(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.compareAndSetMap(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FindScopeDepths.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterCallNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Expression.isSelfModifying() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.RegularEnumSet$EnumSetIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.RegularEnumSet$EnumSetIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.virtualCallNoLookup(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$3.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1103, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindIsGetter(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.arrays.ArrayIndex.fromString(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.arrays.ArrayIndex.isValidArrayIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5554, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlags(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5628, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlag(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicGet(jobject, jobject, jint, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.getProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.dynGetOperation(jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.dynamicGet(jobject, jint, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.access$6300(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isContinuationEntryPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getScopeCallSiteFlags(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.BitSet.nextSetBit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadFastScopeProto(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getScopeProtoDepth(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getExternalSymbolDepth(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.FindScopeDepths.findScopesToStart(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 380, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadCompilerConstant(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 380, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadCompilerConstant(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.ObjectType.store(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.dup(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.dup(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.BitSet.previousSetBit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Long.numberOfLeadingZeros(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getSymbolBoundaryCopy() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.BitSet.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.BitSet.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.BitSet.trimToSize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getLocalVariableTypesCopy() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 416, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.lineNumber(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$500(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BaseNode.isIndex() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1171, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.getTopLocalLoad() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.ObjectType.getBytecodeStackType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.storeHidden(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.enterStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.lineNumber(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$400(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadIdent(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLineNumber(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$LoadFastScopeVar.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$LoadScopeVar.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$LoadScopeVar.loadStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$LoadFastScopeVar.getProto() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$100(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$LoadScopeVar.consumeStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isCompileTimePropertyName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.access$8400(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isCurrentContinuationEntryPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 287, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 287, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.ldc(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 348, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invoke(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 310, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invokestatic(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.ConstantData.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$2.invoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkerServicesImpl.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.TypeConverterFactory.asType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.Bootstrap$2.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.access$000(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.unboxReturnType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isWrapperType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableMap.containsKey(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L3.fieldCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.ClassValue.getCacheCarefully(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.ClassValue$ClassValueMap.probeHomeLocation(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.ClassValue$ClassValueMap.loadFromCache(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue.castEntry(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.ClassValue.match(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$Entry.value() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassValue$Entry.assertNotPromise() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.objects.Global.isGlobal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LIL.fieldCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.SubList.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1166726978.reinvoke(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.castReference(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.castReference(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.getInvocation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.concurrent.atomic.AtomicReference.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 291, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.changeParameterType(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 790, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.bindArgumentL(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl$Lazy.access$500() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.dropArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.dropArguments(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.insertName(jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asCollector(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandle.asCollectorChecks(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandle.spreadArrayChecks(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.asCollectorType(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.collectArgumentArrayForm(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaFormEditor$Transform.packedBytes(jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 282, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.functionExpression(jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer$State.<init>(jint, jint, jint, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner$State.<init>(jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1157, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.ParserContextBaseNode.setFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.getDefaultValidFunctionName(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Parser.isValidIdentifier(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.WeighNodes.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 312, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.prependStatements(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap$TreeNode.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 267, OSR_BCI: -1 :: virtual jobject java.util.HashMap$TreeNode.getTreeNode(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 316, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.usesSelfSymbol() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.TreeMap.setColor(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ObjectCreator.hasArguments() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.dynamicSet(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.dynSetOperation(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants.descriptor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getStatic(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadConstants() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitIntInsn(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 371, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.onLocalStore(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 347, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.explicitStore(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.store(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.skipFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.newFunctionObject(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.isLocalVariable(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.pushDiscard(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 548, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$1.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$2.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadAndDiscard(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 350, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dup(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 513, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.lineNumber(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.initTransients(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Context$ContextCodeInstaller.isCompatibleWith(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getCompileUnit() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.getValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter$LocalVariableDef.access$100(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1282, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.intrinsicName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.BytecodeDescriptor.parseSig(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.String.valueOf(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.BoundMethodHandle$Factory.typeLoadOp(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 518, OSR_BCI: -1 :: static jobject java.lang.String.valueOf(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isVolatile(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty$Accessors.getCached(jint, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.SpillProperty$Accessors.ensure(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SpillProperty$Accessors.getOrCreate(jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SpillProperty$Accessors.getInner(jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.checkHistory(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 281, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.cloneWithIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.replaceName(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.oldSpeciesData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.speciesData(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.visitField(jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldVisitor.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldWriter.visitEnd() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.DirectMethodHandle.ftypeKind(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.DirectMethodHandle.afIndex(jbyte, jboolean, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.resolveOrFail(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.<init>(jobject, jobject, jobject, jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectField(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkField(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isVolatile() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.preparedFieldLambdaForm(jbyte, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.preparedFieldLambdaForm(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L.copyWith(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LI.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1938056729.invokeStatic_L3IL_L(jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LIL.make(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_LIL.<init>(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5194, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.push(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LIL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1241276575.invokeStatic_L3ILL_L(jobject, jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LILL.make(jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 283, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.argumentList() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 283, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.Parser.optimizeList(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/828441346.invokeExact_MT(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 277, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.FieldWriter.getSize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 277, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldWriter.put(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getCodeInstaller() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.security.PermissionCollection.isReadOnly() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.security.Permission.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 230, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.putInCache(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setInitialProto(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MutableCallSite.setTarget(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.checkTargetChange(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.setTargetNormal(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L4.<init>(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/245672235.invokeStatic_L6_L(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L4.make(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.CallSite.maybeReBox(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getProperty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 380, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 245, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.clearDuplicatesAndNulls() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1347870667.invokeStatic_L3I_L(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 406, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.node(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3I.copyWith(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.setNames(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.lambdaForm() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.nameArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaFormBuffer.resultIndex() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.invokeSetter(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: static void java.lang.ThreadLocal$ThreadLocalMap.access$100(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual void java.lang.ThreadLocal$ThreadLocalMap.set(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.checkCache(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3.copyWithExtendI(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/876563773.invokeStatic_L5I_L(jobject, jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L3I.make(jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual void java.lang.ThreadLocal.set(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 235, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.filterArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.createRelinkAndInvokeMethod(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkRequestImpl.getReceiver() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LIL3.fieldCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.replaceMethodsOrThis(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.linker.LinkerCallSite.getMaxChainLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.makePruneAndInvokeMethod(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_LIL3.<init>(jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.internal.dynalink.support.LinkRequestImpl.isCallSiteUnstable() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.speciesData_LLLL() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SetMethodCreator.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.guardWithTest(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithTest(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithTestForm(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getFunctionPrototype() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandles.filterArgumentsCheckArity(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.filterArgument(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandles.filterArgumentChecks(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Collections.singletonIterator(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Collections$1.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$1.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SetMethodCreator.getMap() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.misc.Cleaner.create(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.misc.Cleaner.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ref.PhantomReference.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.misc.Cleaner.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodHandles$Lookup.lookupModes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives$CallSiteContext.make(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleNatives$CallSiteContext.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$CountingWrapper.getTarget() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.cachedMethodHandle(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.explicitInstanceOfCheck(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle.getTarget() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 227, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 284, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.CallNode.<init>(jint, jlong, jint, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$ListItr.previous() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptEnvironment.isTimingEnabled() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedValues.iterator() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Boolean.valueOf(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Boolean.valueOf(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 224, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.indent() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CompilerConstants.slot() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.isScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 333, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.logging.DebugLogger.quote(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.ClassEmitter$Flag.getValue(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.RegularEnumSet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.RegularEnumSet$EnumSetIterator.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.util.RegularEnumSet.access$000(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.DirectMethodHandle.fieldOffset(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.checkBase(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.initializeType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 924, OSR_BCI: -1 :: static jboolean java.util.Objects.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.Guards.asType(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.Guards.getTestType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LILL.copyWith(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptFunction.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.ScriptFunctionImpl.init(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 388, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getPrototype() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 388, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getPrototype() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants$Access.getSwitchPoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MutableCallSite.syncAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.concurrent.atomic.AtomicInteger.lazySet(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 375, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.createSetter(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LL.copyWith(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.linker.GuardedInvocation.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.viewAsType(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.checkGenericType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5527, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.findPrimitiveType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonList.iterator() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.getCallSiteTarget(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.getCallSiteTarget(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives.linkCallSite(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.CallSite.makeSite(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.CallSite.maybeReBoxElements(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.callSiteForm(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/992768706.reinvoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 363, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.filterArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/913190639.invokeStatic_LI_I(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint sun.invoke.util.ValueConversions.unboxInteger(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MutableCallSite.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.CallSite.makeUninitializedCallSite(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isConvertibleWithoutLoss(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.concurrent.atomic.AtomicReference.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.bootstrap(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.LinkerCallSite.newLinkerCallSite(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.CallSiteDescriptorFactory.tokenizeName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.<init>(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.support.AbstractCallSiteDescriptor.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.dynalink.support.AbstractCallSiteDescriptor.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/644166178.invokeSpecial_LLIL_L(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.relink(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.support.LinkRequestImpl.<init>(jobject, jobject, jint, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkerServicesImpl.getGuardedInvocation(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.CompositeGuardingDynamicLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.CompositeTypeBasedGuardingDynamicLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkRequestImpl.withoutRuntimeContext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornLinker.getGuardedInvocation(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.lookup(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.CallSiteDescriptorFactory.tokenizeOperators(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LILL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/36333492.invokeStatic_L3IL3_L(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LIL3.make(jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getMap(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.hasWithScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.concurrent.atomic.AtomicBoolean.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_LI.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.SimpleMethodHandle.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.rebind() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5413, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentType(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L.copyWithExtendI(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LI.make(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.cloneMap(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleImpl.profileBoolean(jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleImpl.profileBoolean(jboolean, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Math.addExact(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Math.addExact(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandleImpl$CountingWrapper.maybeStopCounting(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandleImpl$CountingWrapper.maybeStopCounting(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandleImpl$CountingWrapper.countDown() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L4.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Access.methodHandle() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SetMethodCreator.access$100(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SetMethodCreator.access$200(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.ref.Reference.tryHandlePending(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 642, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 642, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.ref.ReferenceQueue.enqueue(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: virtual jobject java.lang.ref.ReferenceQueue.reallyPoll() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.replaceNode(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.remove(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 203, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.log(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getGetter(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.guardFailed() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterObjectNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.SplitIntoFunctions.inSplitNode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.ensureSpillSize(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase.apply(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase.begin(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.hasState(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Timing.accumulateTime(jobject, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 288, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.unindent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 820, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.narrowest(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.logging.Level.intValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$SubList$1.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.getTypeForSlotDescriptor(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.getTypeForSlotDescriptor(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.Boolean.booleanValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrameTypes(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.type(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.lookup.MethodHandleFactory.access$300() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.toString(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.<init>(jobject, jint, jint, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source.getContent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.<init>(jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.access$100(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.transformFunction(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter.getContext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompileUnit.getUnitClassName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 214, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.MethodEmitter.isThisSlot(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.security.ProtectionDomain.getCodeSource() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ApplySpecialization$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$ArrayLiteralNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$ArrayLiteralNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.add(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 295, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectFieldCommon(jbyte, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList.checkForComodification() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyHashMap$Element.setLink(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 383, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.asTypeSafeReturn(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.compose(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.util.concurrent.atomic.AtomicReference.compareAndSet(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getSource() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isNamedFunctionExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setParameters(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeRemoval(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 212, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.defineLocalVariable(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 346, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Context.useDualFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompileUnit.getClassEmitter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1557989809.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 361, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.NameCodec.decode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.Invokers.basicInvoker() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.linker.LinkerCallSite.relink(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.LinkerCallSite.getDebuggingRelink(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.ChainedCallSite.relink(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.relinkInternal(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.util.LinkedList.addLast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.getPruneSwitchpoints() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.LinkerCallSite.getPruneCatches() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.getPruneCatches() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LIL3.copyWith(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 385, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.OptimisticReturnFilters.filterOptimisticReturnValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 386, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.WhileNode.isDoWhile() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7533, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext$NodeIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.StructureLoader.isSingleFieldStructure(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.SpillProperty.isSpill() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/95395916.reinvoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.TreeMap.leftOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$SubList$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList$1.checkForComodification() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.joinTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.joinFrom(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpressionUnbounded(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.BitSet.checkRange(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 285, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.label(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 285, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.breakLabel(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator.appendType(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isUpperCase(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isUpperCase(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isUpperCase(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 459, OSR_BCI: -1 :: static jint java.lang.Character.getType(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 298, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.endEdit() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrame() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentL(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 308, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 308, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.startEdit() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.useDualFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.isExtensible() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.PropertyMap.isExtensible() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.uniqueName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5633, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.Integer.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.Integer.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.UnaryNode.getProgramPoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$1.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$1.loadStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$1.consumeStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.util.ArrayList$SubList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 223, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dup() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIndexNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getIdent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.getUsedSlotsWithLiveTemporaries() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.subList(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.ArrayList.subListRangeCheck(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList.<init>(jobject, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 229, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.MethodEmitter.getUsedSlotsWithLiveTemporaries() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 227, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getLocalLoadsOnStack(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 227, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getLocalLoads(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$ListItr.set(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.access$9800(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MapTuple.getValueType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isFunctionDeclaration() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 245, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.insertParameter(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 271, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isConfigurable() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.PropertyMap.getFreeFieldSlot() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.getListeners() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ref.ReferenceQueue.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ref.ReferenceQueue$Lock.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ref.ReferenceQueue$Lock.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterVarNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1346, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.ensureUniqueLabels(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 206, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.useOptimisticTypes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.doesNotContinueSequentially() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.reflectionData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList$1.previous() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 366, OSR_BCI: -1 :: virtual void java.util.BitSet.clear(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$NamedFunction.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.newTable(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue.version() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$Entry.version() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornGuards.getMapGuard(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5394, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornGuards.getGuard(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.needsGuard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findBuiltinSwitchPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 383, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase.end(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 279, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.endLocalValueDef(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.addAll(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isVar() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Handler.remove(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.addProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 324, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIndexNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 200, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getTypesFromStack(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.AbstractList.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList.removeRange(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.removeRange(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.undefineLocalVariables(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.Expression.isAlwaysTrue(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getReturnType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.convert(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.getPass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.getFail() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/655381473.getObjectFieldCast(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.checkCast(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle$Accessor.checkCast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.listIterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 213, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.end() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 213, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.endMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.security.BasicPermission.getCanonicalName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.WeakHashMap.<init>(jint, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1413653265.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findGetMethod(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isApplyToCall(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 286, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.insertExpression(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getFunctions() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.WeakHashMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterJoinPredecessorExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 214, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.beginMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 214, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getCurrentBlockLabelNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLocalVariable(jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.logging.Logger.getLevel() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitJumpInsn(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.put(jobject, jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.getFieldName(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.init(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5387, OSR_BCI: -1 :: virtual jint java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1273765644.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1566723494.invokeVirtual_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.PropertyMap.getFreeSpillSlot() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.SpillProperty.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty.primitiveGetter(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty.primitiveSetter(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty.objectGetter(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty.objectSetter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.<init>(jobject, jint, jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1508646930.invokeStatic_LIL_V(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandleImpl$ArrayAccessor.setElementL(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.field(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.SplitIntoFunctions.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ProgramPoints.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols$1.leaveVarNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.AssignSymbols.access$100(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.setName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveVarNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.useDualFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.Type$6.getBytecodeStackType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 413, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.storeIdentWithCatchConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$7.getValueType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getEntryLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$9200(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.access$9900(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/439928219.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getObjectValue(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.checkPackageAccess(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.BinaryNode.booleanToInt(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.CallNode.getLineNumber() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getDynamicSignature(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.NashornLoader.checkPackageAccess(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/125622176.exactInvoker(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.FunctionNode.getFlags() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.getEntry(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.BinaryNode.isString(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 342, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$JumpTarget.addOrigin(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.getLocalVariableConversion() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getLocalVariableConversion() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ArrayType.getElementType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1282, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitEnd() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1416233903.invokeStatic_L4_L(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 449, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getFunctionFlag(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 472, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$JumpOrigin.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.canBeNarrowerThan(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5389, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 200, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter.method(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$FieldAccess.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.unboxedFieldType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.staticField(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.staticField(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$6.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getCompileUnits() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 308, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodType.canConvert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.<init>(jobject, jint, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.<init>(jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.initGetterSetter(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isParameter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1627428162.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$reinvoker/1300393335.dontInline(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setFirstSlot(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.defineBlockLocalVariable(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.defineBlockLocalVariable(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 294, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesGlobalSymbol() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$1.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store$1.enterBaseNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$2.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.closeLocalVariable(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.findStatic(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5245, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.put11(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 511, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.linker.LinkerServices$Implementation.asTypeLosslessReturn(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.addOwnProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 249, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.TypeEvaluator.declareLocalSymbol(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.getDeclaringClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.reflect.Field.setFieldAccessor(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.SpillProperty.<init>(jobject, jint, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.setInitialValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.security.CodeSource.getLocation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CompileUnit.isUsed() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 472, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.access$000(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source.getString(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$EmptyList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.mergeVariableTypes(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.reflect.ReflectionFactory.langReflectAccess() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.reflect.AccessibleObject.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 369, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.addReference(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setIsFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setIsFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.findProperty(jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 407, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter$LocalVariableDef.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 296, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.onLocalStore(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1288, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Expression.getWidestOperationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 291, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.jump(jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1293, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveAccessNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.hasGetterFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BaseNode.getMostOptimisticType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 302, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeEvaluator.evaluateSafely(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1711574013.getObjectField(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.Expression.isAlwaysFalse(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.getTrueExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.getFalseExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.Class.checkInitted() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeMap$Entry.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 218, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Handler.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.beforeJoinPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 314, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.joinFrom(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.ConstantData$ArrayWrapper.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Class.getReflectionFactory() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 308, OSR_BCI: -1 :: static jobject java.util.Collections.emptyList() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.Permissions.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.security.Permissions.getPermissionCollection(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.BasicPermissionCollection.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1234776885.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.equalsWithoutType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.load(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isAlwaysTrue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.Writer.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.File.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 331, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.hasScopeBlock() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5505, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedEntryIterator.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 307, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getLocalVariableTypes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 325, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jint, jlong, jint, jint, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.access$10000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.IntType.getBytecodeStackType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 233, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getWidestLiveLocals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.invalidateGlobalConstant(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.undefineLocalVariables(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Class.checkMemberAccess(jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitIconstInsn(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.isTerminal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptEnvironment.getNamespace() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7434, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.add(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.loadArgs(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitTryCatchBlock(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1488, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeAccess(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 370, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.begin() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 342, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.newStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.access$000(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3.copyWith(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.types.Type.getWeight() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1293, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Token.descLength(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.IntDeque.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$SubList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList$1.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.fine(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 383, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.addSpillProperty(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.MagicAccessorImpl.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.TreeMap.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Hashtable.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isStrict() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 353, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableSet.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 383, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.access$2000(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.loadCallNode(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2.<init>(jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator.access$5000(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.dynamicCall(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicCall(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2285, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.markLocalLoad(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.init(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.set(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 324, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.joinFromTry(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.types.Type.areEquivalent(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 287, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Label$Stack.access$000(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 287, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.cloneWithEmptyStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ArrayType.aload(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 284, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invokevirtual(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 248, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.sourceElements(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 248, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.addFunctionDeclarations(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 491, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.setInit(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 492, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.setTest(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 492, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.setModify(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 492, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.setBody(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$9100(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.getLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.markSymbolBoundariesInLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.markSymbolBoundariesInLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.getUnwarrantedOptimismHandlers() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.markLabelAsOptimisticCatchHandler(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.markAsOptimisticCatchHandler(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.Label$Stack.access$100(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.markAsOptimisticCatchHandler(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 342, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.updateFlagsAndBoundaries(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 348, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.updateFreeSlots(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 312, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.addToHistory(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.getTest() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$JumpTarget.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$JumpTarget.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$2100(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator.countSymbolsInLvarTypeDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 296, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getContextTrusted() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 283, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getContext(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 293, OSR_BCI: -1 :: virtual void java.util.BitSet.ensureCapacity(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Hashtable$Entry.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.initializeMethodParameter(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 292, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$3.invoke(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$4$1.leaveLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$4$1.leaveLiteralNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode.getRequest() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void sun.reflect.ReflectionFactory.checkInitted() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Compiler$CompilationPhases.isRestOfCompilation() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 247, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.assignSlots(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 248, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Class.searchFields(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.ReflectionFactory.copyField(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.ReflectAccess.copyField(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.copy() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.reflect.Field.<init>(jobject, jobject, jobject, jint, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Expression.isAlwaysTrue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.ObjectType._return(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.checkcast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.checkcast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.reflect.AccessibleObject.setAccessible(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.reflect.AccessibleObject.setAccessible0(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getDeclaredField(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.privateGetDeclaredFields(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.getLinkerServices() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.EnumMap.unmaskNull(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaFormEditor$Transform.packedBytes(jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.linker.GuardedInvocation.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 242, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getGetter(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 242, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.addSwitchPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.EnumMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.EnumMap.isValidKey(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$Version.promise() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.ClassValue$Entry.isPromise() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.CompiledFunction.isVarArgsType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isString(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isBuiltin() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/796684896.invokeStatic_LL_I(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.isMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1663619914.guard(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/592959754.dontInline(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1688019098.invokeSpecial_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1461149300.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1809787067.invokeVirtual_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/542060780.reinvoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/55909012.invokeStatic_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl$ArrayAccessor.getElementL(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1268650975.identity_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/2141179775.exactInvoker(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1745903324.identity_I(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.getScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/413601558.linkToCallSite(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1970436060.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1740035246.invokeStatic_J_I(jobject, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint sun.invoke.util.ValueConversions.longToInt(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1595953398.invokeStatic_L3_I(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/2003534796.guard(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isPrimitive(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isPrimitive(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1753447031.invokeVirtual_LIL_I(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.extensionCheck(jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/760563749.invokeSpecial_L3_I(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunction.isNonStrictFunction(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/294658299.reinvoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$reinvoker/1324578393.dontInline(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1911728085.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/477289012.putObjectField(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1802598046.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1924582348.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/520016214.dontInline(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1995619265.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/532087022.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1265210847.invokeStatic_LL_L(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1795960102.getLongField(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/263833514.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/2032251042.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1166726978.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1280603381.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/436546048.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/1915058446.invokeStatic_LI_J(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/687241927.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/707531688.linkToCallSite(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/2145970759.exactInvoker(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.runtime.arrays.ArrayData.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1632670136.guard(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$reinvoker/1909398279.dontInline(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1447689627.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/583559449.reinvoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.MethodHandleImpl$ArrayAccessor.getElementJ(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1518864111.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/775386112.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/36202360.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 531, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/861842890.invokeExact_MT(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1426329391.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1106131243.linkToCallSite(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2007486296.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1793899405.guardWithCatch(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/603658030.linkToCallSite(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandle.updateForm(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/426019904.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/1018937824.invokeStatic_I_J(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong sun.invoke.util.ValueConversions.intToLong(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunction.isFunctionMH(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunction.isFunctionMH(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/565881091.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/951677655.delegate(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1691875296.putLongField(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1284, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl$ArrayAccessor.getElementL(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/796684896.invokeStatic_LL_I(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1689924104.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1663619914.guard(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 268, OSR_BCI: -1 :: static jobject java.lang.Long.valueOf(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 268, OSR_BCI: -1 :: static jobject java.lang.Long.valueOf(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toString(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toPrimitive(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toPrimitive(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.allocate() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.getAllocatorMap() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.newFilter(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.newFilter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5392, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.isMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1360533184.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/868815265.linkToCallSite(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1281, OSR_BCI: -1 :: static jint sun.invoke.util.ValueConversions.longToInt(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/706277948.delegate(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.NativeArray$Prototype.G$push() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1239807799.delegate(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.Guards.isIdentical(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/792855998.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/54960993.guard(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/439928219.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5400, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1461149300.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/95395916.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/381707837.delegate(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/510109769.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/80499834.guardWithCatch(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$61$11326$deltablue.output-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1396292525.delegate(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1112456099.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2052457859.guard(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1228798862.guard(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5397, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1809787067.invokeVirtual_L_L(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Math.getExponent(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5390, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/542060780.reinvoke(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 260, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.doubleToInt32(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 260, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.doubleToInt32(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5387, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1745903324.identity_I(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.allocate(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AllocationStrategy.allocate(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5388, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/687241927.delegate(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ArrayData.<init>(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ContinuousArrayData.<init>(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.getAllocatorMap() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.allocate(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.toUint32(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.NativeFunction$Prototype.G$call() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1920305914.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.isArray() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.getContinuousArrayDataCCE(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.getContinuousArrayDataCCE(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1890266440.linkToCallSite(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.length(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.length(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptObject.isArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jlong java.lang.Long.longValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/88558700.invokeStatic_L_J(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1394356510.reinvoke(jobject, jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.OptimisticReturnFilters.ensureInt(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.OptimisticReturnFilters.ensureInt(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isRepresentableAsInt(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1910896157.linkToCallSite(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1278852808.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.scripts.Script$Recompilation$66$2339$deltablue.size(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/880533231.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1765702.reinvoke(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.toLongOptimistic(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.toLongOptimistic(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/2142003995.invokeStatic_JI_I(jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/276748028.exactInvoker(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1364127192.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 331, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toStringImpl(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 331, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toStringImpl(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/226690498.delegate(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD4.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.JD4.allocate(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.JD4.allocate(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1918627686.delegate(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/864221358.delegate(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/2121995675.invokeStatic_J_L(jobject, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxLong(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/2002790740.linkToCallSite(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1620409359.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.objects.NativeArray.pushObject(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.runtime.arrays.ObjectArrayData.fastPush(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.runtime.arrays.ArrayData.increaseLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1574509514.linkToTargetMethod(jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/702500163.reinvoke(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.addExact(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.addExact(jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1387228415.invokeStatic_I3_I(jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$48$2179A$deltablue.add(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/391618063.invokeStatic_LL_J(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/264978436.guardWithCatch(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/921760190.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/846274760.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$59$11158$deltablue.input(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1688019098.invokeSpecial_L_L(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: static jobject java.lang.Integer.toString(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6409, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/2141179775.exactInvoker(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 4355, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.AssertsEnabled.assertsEnabled() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap$Entry.getValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 289, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.arrayload() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 151, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.compile(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.initLocals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.onEnterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.pushFreeSlots(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.printSymbols(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 283, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._try(jobject, jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$2.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.CallNode.isApplyToCall() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2$4.<init>(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2$4.loadStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.invoke.util.ValueConversions$WrapperCache.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 306, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5137, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.changeReturnType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 300, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._return(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.getFieldAccessor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.acquireFieldAccessor(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.getFieldAccessor(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.ReflectionFactory.newFieldAccessor(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.UnsafeStaticFieldAccessorImpl.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.UnsafeFieldAccessorImpl.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.FieldAccessorImpl.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Compiler.isStrict() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.field(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Source$URLData.isEvalCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$13.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.security.CodeSource.getCertificates() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.reflect.Field.set(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.reflect.UnsafeStaticObjectFieldAccessorImpl.set(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$14.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 246, OSR_BCI: -1 :: virtual jboolean java.util.WeakHashMap$HashIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 283, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 283, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.addUnwarrantedOptimismHandlerLabel(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 271, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.swap() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.doesNotContinueSequentially() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompileUnit.setUsed() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.EnumSet.of(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompileUnit.getCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint sun.misc.Unsafe.getAndAddInt(jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 7042, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1663619914.guard(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.identity(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1281, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodHandles$Lookup.lookupModes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.canBeDeoptimized() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5904, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.isMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/655381473.getObjectFieldCast(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle$Accessor.checkCast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5386, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putVal(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.WhileNode.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Expression.isAlwaysFalse() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ClassEmitter.getArrayMethodName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$reinvoker/1444635922.dontInline(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1282, OSR_BCI: -1 :: static jlong java.lang.invoke.MethodHandleImpl$ArrayAccessor.getElementJ(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/801197928.invokeStatic_L3_L(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5391, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1711574013.getObjectField(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1281, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.runtime.arrays.ArrayData.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/699221219.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$reinvoker/883380345.dontInline(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/1690050988.dontInline(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1262822392.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1955915048.invokeStatic_LLI_L(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.NativeArray$Prototype.G$pop() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$54$3339AA$deltablue.weaker(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.toBoolean(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.toBoolean(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/842957574.guard(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$3.apply(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$3.apply(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12546, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1663619914.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11536, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.isMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1767230265.reinvoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getArrayPrototype() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setIsArray() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.NativeArray.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.NativeArray.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.NativeArray.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.IntArrayData.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.IntArrayData.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ObjectArrayData.<init>(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/319977154.reinvoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.convertToObject() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.toObjectArray(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/799755007.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1800500978.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$41$2084$deltablue.OrderedCollection(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.construct(jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.NativeArray.<init>(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.arrays.ArrayData.allocate(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.IntArrayData.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1078566479.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1007251739.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1935637221.invokeStatic_IL_L(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/55909012.invokeStatic_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1595953398.invokeStatic_L3_I(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.sameObject(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1402531280.delegate(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.ObjectArrayData.has(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5393, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunction.isNonStrictFunction(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1955920234.guardWithCatch(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1979080261.linkToCallSite(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1250499735.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/63390.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/348100441.invokeSpecial_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.getElem(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.getElem(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.NE(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.EQ(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$55$3252AA$deltablue.stronger(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$56$10872$deltablue.isSatisfied-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$80$2255I$deltablue.at(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/735228558.guardWithCatch(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1966670937.guard(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/173791568.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.arrays.ContinuousArrayData.guard(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.arrays.ContinuousArrayData.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1307096070.invokeStatic_I_L(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6412, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1970436060.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxInteger(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxInteger(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.isRecompilable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap$EntryIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap$EntryIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap$HashIterator.nextEntry() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap$Entry.getKey() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.WeakHashMap.unmaskNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.WeakHashMap.containsKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.getEntry(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.internal.dynalink.support.AbstractCallSiteDescriptor.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.AbstractCallSiteDescriptor.lookupsEqual(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LLI.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5390, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/592959754.dontInline(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1284, OSR_BCI: -1 :: static jlong sun.invoke.util.ValueConversions.intToLong(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1924582348.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/294658299.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1562764987.exactInvoker(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1268650975.identity_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/54134077.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/961859592.guardWithCatch(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1296674576.guardWithCatch(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/80756779.linkToCallSite(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/508760925.guardWithCatch(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/724028528.invokeStatic_L3I_I(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$63$5239I$deltablue.satisfy(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$76$20494AI$deltablue.addPropagate(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/211199210.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$73$3429AA$deltablue.weakestOf(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$53$9808I$deltablue.chooseMethod-1(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$74$11630$deltablue.recalculate-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/708153797.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1280603381.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/706277948.delegate(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/959834536.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9473, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1740035246.invokeStatic_J_I(jobject, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.containsMapping(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FunctionSignature.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FunctionInitializer.getMethodType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FunctionInitializer.getCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArguments(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 282, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.getOptimisticCoercedType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: virtual void java.lang.Class.checkPackageAccess(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 305, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.JoinPredecessorExpression.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 309, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createJumpTarget(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterReturnNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1581, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpressionAsObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isAlwaysFalse() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.BranchOptimizer.branchOptimizer(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkRequestImpl.getArguments() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.getSwitchPoints() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/342597804.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/1860250540.dontInline(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1802598046.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 246, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/152005629.invokeStatic_L_I(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/2145970759.exactInvoker(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.convert(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.popObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.popObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.fastPopObject() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.runtime.arrays.ArrayData.decreaseLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/841283083.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._goto(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 361, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.getFirstDeadLocal(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle.intrinsicName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 436, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.buffer() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 219, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext.isSplitBody() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.LocalVariableConversion.isAnyLive(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.getMergedType(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.net.URL.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.needsCallee() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.security.CodeSource.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FunctionSignature.<init>(jboolean, jboolean, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L3IL.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.access$500(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 305, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.JoinPredecessorExpression.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 467, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isDeclared() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.LocalVariableConversion.hasLiveConversion(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.initializeInternalFunctionParameter(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.initializeInternalFunctionOrSplitParameter(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.pickFunction(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.toInt32Optimistic(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.toInt32Optimistic(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1476235721.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1565713391.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.ClassMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 330, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/514453513.guardWithCatch(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 328, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$75$14754$deltablue.execute-3(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11528, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1518864111.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1239807799.delegate(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.scripts.Script$Recompilation$115$22381$deltablue.size-1(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$117$22452I$deltablue.constraintAt(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/775386112.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/707531688.linkToCallSite(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1911728085.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/868815265.linkToCallSite(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1228798862.guard(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/80499834.guardWithCatch(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1364127192.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/864221358.delegate(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1910896157.linkToCallSite(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/699221219.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2007486296.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.scripts.Script$Recompilation$66$2339$deltablue.size(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$61$11326$deltablue.output-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1574509514.linkToTargetMethod(jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$59$11158$deltablue.input(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1250499735.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5238, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/152005629.invokeStatic_L_I(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5322, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/514453513.guardWithCatch(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5320, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$75$14754$deltablue.execute-3(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5419, OSR_BCI: -1 :: static jint jdk.nashorn.internal.scripts.Script$Recompilation$115$22381$deltablue.size-1(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5411, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$117$22452I$deltablue.constraintAt(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/702500163.reinvoke(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1387228415.invokeStatic_I3_I(jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/63390.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/348100441.invokeSpecial_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 204, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.scanNumber() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setIsDeclaredHere() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.ForNode.isForIn() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1280, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setMap(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IfNode.isTerminal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.undefinedToNumber(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLdcInsn(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.getLinkerServices() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 268, OSR_BCI: -1 :: static jobject java.nio.charset.Charset.lookup(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 206, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContext.prependStatementToCurrentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.ReturnNode.<init>(jint, jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5126, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getFieldType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.guardWithTest(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.WeakHashMap.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 561, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.SwitchPoint.hasBeenInvalidated() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.charset.Charset.name() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.ScriptFunctionData.getArity() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getBuiltinFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 237, OSR_BCI: -1 :: virtual jobject java.lang.Class.newReflectionData(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.replaceFunctions(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5150, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ByteVector.enlarge(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.bindSingle(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.changeReturnType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.PropertyListeners$WeakPropertyMapSet.contains(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.charset.CharsetEncoder.charset() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.addListener(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.PropertyListeners.addListener(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Source$URLData.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 4356, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.useCount(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LLIL.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LLILL.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptEnvironment.getErr() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.<init>(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 168, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.generateUnwarrantedOptimismExceptionHandlers(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicArrayPopulatorCall(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.specialCallNoLookup(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$1.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$1.invoke(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invokespecial(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.ensureUniqueLabels(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2$4.consumeStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 403, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.types.Type.swap(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Namespace.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source.getExplicitURL() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$1.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$2.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$3.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$4.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$5.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$6.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$7.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$8.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$9.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$10.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 234, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.initFunctionWideVariables(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.PermissionCollection.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 82181, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.checkExactType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context.getErrorManager() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 285, OSR_BCI: -1 :: virtual void java.util.BitSet.recalculateWordsInUse() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5763, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$61$11326$deltablue.output-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5389, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1627428162.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10499, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/477289012.putObjectField(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 415, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$68$2425$deltablue.removeFirst(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1338905451.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/487792155.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunctionData.wrapThis(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1653751526.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10498, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1632670136.guard(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toPrimitive(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1006624255.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunction.isApplyFunction(jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunction.isApplyFunction(jboolean, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6023, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$59$11158$deltablue.input(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/985397764.invokeStatic_ILL_I(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$47$15465A$deltablue.addConstraint-1(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/589363823.dontInline(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toCharSequence(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 429, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$81$21809AA$deltablue.addConstraintsConsumingTo(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/315461968.guard(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9472, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/88558700.invokeStatic_L_J(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9472, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1394356510.reinvoke(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9472, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1278852808.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9475, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/2142003995.invokeStatic_JI_I(jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 16644, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/263833514.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 303, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1926027290.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5389, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/951677655.delegate(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10498, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/603658030.linkToCallSite(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 640, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$56$10872$deltablue.isSatisfied-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$76$20494AI$deltablue.addPropagate(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10496, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/426019904.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 387, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$63$5239I$deltablue.satisfy(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 18691, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1793899405.guardWithCatch(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10500, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1396292525.delegate(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1424108509.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1207140081.delegate(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 428, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/170106909.exactInvoker(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 428, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1733619456.reinvoke(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1510067370.invokeStatic_L7_L(jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ConsString.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ConsString.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.JD8.allocate(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.JD8.allocate(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD8.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isRepresentableAsInt(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/832292933.guardWithCatch(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.scripts.Script$Recompilation$50$17874$deltablue.newMark(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/560549459.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$44$4689A$deltablue.Constraint(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$45$4852$deltablue.addConstraint(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 258, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptRuntime.ADD(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 258, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptRuntime.ADD(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toString(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2013768748.linkToCallSite(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1924227192.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/290096578.exactInvoker(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/436546048.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.G$prototype(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5384, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/413601558.linkToCallSite(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$ContextCodeInstaller.getOwner() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$ContextCodeInstaller.getOwner() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.isSerialized() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 236, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.defineFunctionSelfSymbol(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FunctionSignature.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FunctionSignature.<init>(jboolean, jboolean, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.FunctionSignature.typeArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FunctionSignature.getMethodType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.lookupCodeMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getLogger() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1154, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1154, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getObjectValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getGetterReceiver() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 313, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$92$7268$deltablue.output(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.getBest(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.getterForType(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.foldArguments(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 310, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getLiteral() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L5.<init>(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.getValidOptimisticInvocation(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction$HandleAndAssumptions.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveWhileNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ApplySpecialization$1.enterCallNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.ApplySpecialization.access$100(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.ApplySpecialization.isApply(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6220, OSR_BCI: -1 :: static jint java.util.IdentityHashMap.nextKeyIndex(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.HashSet.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.JoinPredecessorExpression.isAlwaysTrue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.getBody() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.ProtectionDomain$Key.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L5.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$HandleAndAssumptions.createInvocation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.linker.GuardedInvocation.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptObject.pairArguments(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptObject.pairArguments(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 380, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isAnonymousFunctionDeclaration() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 744, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.jumpToCatchBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.popBlockScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.emitBlockBreakLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.releaseSlots() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.setLength(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.setLength(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3716, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeMap.getParameterTypes(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 448, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$PrimitiveLiteralNode.<init>(jlong, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 448, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$PrimitiveLiteralNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 387, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setBase(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 364, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getMostOptimisticType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Arrays$ArrayList.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.Arrays$ArrayList.indexOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 244, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.applyTopFlags(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.finalizeParameters(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.createSyntheticInitializers(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.AssignSymbols.removeUnusedSlots(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 244, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setThisProperties(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.markProgramBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterVarNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.getLocalVariableConversion() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getProgramPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 513, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.defineVarIdent(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Access.className() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Access.descriptor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.BooleanType.convert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.WhileNode.<init>(jobject, jobject, jobject, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.getContinueLabel() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadMaybeDiscard(jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.security.ProtectionDomain.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MutableCallSite.dynamicInvoker() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.CallSite.makeDynamicInvoker() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.isVarArg() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.isApplyToCall() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants.getOrCreateSwitchPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.isSpecialization() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.keySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.UnaryNode.isSelfModifying() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getBest(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxExact(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 369, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.getLastStatement() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 369, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.getDirective(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 246, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$NumberLiteralNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.access$700(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 368, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.WhileNode.setBody(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 370, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.WhileNode.setTest(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.symbolIsConverted(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$SymbolConversions.recordConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 385, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadLiteral(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.emitBranch(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.BranchOptimizer.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.BranchOptimizer.execute(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5441, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findProperty(jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 300, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.variableStatement(jobject, jboolean, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.UnaryNode.canBeOptimistic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 231, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.retainAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.IntType.store(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.createInvoker(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 281, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.filterReturnForm(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setObject(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5403, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.tagNeverOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.returnVoid() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsWrappedThis() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.TypeConverterFactory.asType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.findCallMethod(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunction.needsWrappedThis() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterWhileNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.WhileNode.getBody() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.comparator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.Collections$ReverseComparator.compare(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.Collections$ReverseComparator.compare(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.compareTo(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.needGetConstantMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.access$700(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.hasBeenInvalidated() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.OptimisticReturnFilters.filterOptimisticReturnValue(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 295, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Call.methodHandle() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.ConstantCallSite.getTarget() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.parser.Token.withDelimiter(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.getStatement() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$KeySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$KeyIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$KeyIterator.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.IdentityHashMap$KeySet.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.getInit() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.getModify() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5120, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.addSuccessor(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9486, OSR_BCI: -1 :: virtual jobject java.lang.Class.getClassLoader() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContextFunctionNode.getKind() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/158453976.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9472, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/992768706.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9472, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/913190639.invokeStatic_LI_I(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.statement() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.TreeSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setReturnType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.visitParameters(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.coerceStackTop(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 385, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Label.resolve(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 385, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Label.resolve(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1281, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.doesNotContinueSequentially() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12545, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeConverterFactory.canAutoConvert(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.TypeConverterFactory.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$2.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$2.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.access$200(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 18688, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1795960102.getLongField(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 369, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.PropertyListeners.containsListener(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8577, OSR_BCI: -1 :: virtual void java.util.LinkedList.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.dropArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.getSwitchPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12801, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeConverterFactory.canAutoConvert(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 268, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptObject.addProtoFilter(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.FindProperty.getProtoChainLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 271, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getProtoSwitchPoint(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 239, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.matchesCallSite(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 416, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1623287112.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 20740, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/1915058446.invokeStatic_LI_J(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6275, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$61$11326$deltablue.output-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1447689627.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6279, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$59$11158$deltablue.input(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 685, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$81$21809AA$deltablue.addConstraintsConsumingTo(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7425, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$80$2255I$deltablue.at(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 43272, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/2003534796.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1768952842.guard(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 259, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornLinker.isNashornTypeOrUndefined(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 259, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornLinker.isNashornTypeOrUndefined(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 291, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornPrimitiveLinker.isJavaScriptPrimitive(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 291, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornPrimitiveLinker.isJavaScriptPrimitive(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1426329391.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/741390111.delegate(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 15616, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/583559449.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$129$13672$deltablue.execute-2(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.mulExact(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.mulExact(jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Math.multiplyExact(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Math.multiplyExact(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 121, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$118$22526$deltablue.execute-4(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7540, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1076496284.delegate(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5384, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/2032251042.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.foldArguments(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 318, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$128$14117$deltablue.recalculate-2(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1556461159.linkToCallSite(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$108$22324A$deltablue.addConstraint-2(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1096682443.guardWithCatch(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2082678778.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$111$12025I$deltablue.inputsKnown-1(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.ofNoFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.ofNoFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.isUndefinedAndNull(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.isNumberAndString(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.isNumberOrStringAndObject(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LLI.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1344645519.invokeStatic_L4IL_L(jobject, jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LLIL.make(jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_LLIL.<init>(jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7569, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L5.make(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode$Request.getReturnType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findSetMethod(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.SetMethodCreator.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SetMethodCreator.createGuardedInvocation(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SetMethodCreator.createSetMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isStrict(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.SetMethodCreator$SetMethod.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 404, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$57$11028I$deltablue.markInputs-1(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 515, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$63$5239I$deltablue.satisfy(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 427, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$53$9808I$deltablue.chooseMethod-1(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/37841489.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/23076423.guardWithCatch(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$43$9343AAA$deltablue.BinaryConstraint(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$46$10637$deltablue.addToGraph-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/903268937.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/1018937824.invokeStatic_I_J(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.compareAndSetMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1691875296.putLongField(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1689924104.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8008, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$75$14754$deltablue.execute-3(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1753447031.invokeVirtual_LIL_I(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1842173497.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8451, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1307096070.invokeStatic_I_L(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.SimpleMethodHandle.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 325, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$93$11932$deltablue.markUnsatisfied-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/54960993.guard(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/226690498.delegate(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeBlockInliningWrapper(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8457, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1476235721.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8457, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1565713391.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 313, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$98$16635A$deltablue.incrementalAdd(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1995619265.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.extensionCheck(jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/760563749.invokeSpecial_L3_I(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/277164482.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2010221835.reinvoke(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$121$15087AI$deltablue.Variable(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$96$6110$deltablue.isInput(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9474, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/381707837.delegate(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/532087022.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10503, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1106131243.linkToCallSite(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$119$9044$deltablue.execute-1(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.ContinuousArrayData.hasRoomFor(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/105393903.linkToCallSite(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/533698361.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1131316523.invokeSpecial_LIL_V(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ObjectArrayData.setElem(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/679587143.guardWithCatch(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1540031691.guard(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1531545666.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12548, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/565881091.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/795372831.delegate(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.equalDifferentTypeValues(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.equalDifferentTypeValues(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 274, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.subExact(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 274, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.subExact(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 274, OSR_BCI: -1 :: static jint java.lang.Math.subtractExact(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12544, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1360533184.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1920305914.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/880533231.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1765702.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11523, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$61$11326$deltablue.output-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1262822392.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 250, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.nullOrUndefined(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/949673757.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$40$15087AA$deltablue.Variable(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/403547747.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/649769713.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$42$14471AAA$deltablue.EqualityConstraint(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.allocate() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5120, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.runtime.arrays.ObjectArrayData.fastPush(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 218, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$85$6599$deltablue.addToGraph(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 215, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$123$12980$deltablue.addToGraph-2(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8451, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2052457859.guard(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/557705922.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/36707189.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxBoolean(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1088417975.linkToCallSite(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2110558717.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/286658790.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$84$6290AA$deltablue.UnaryConstraint(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/406358588.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2018220300.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/913065088.guard(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1255445356.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/318288344.linkToCallSite(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1711105800.guard(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$83$8352AA$deltablue.StayConstraint(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$97$8525$deltablue.execute(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/182678201.reinvoke(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8449, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/510109769.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/546886525.reinvoke(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/557342904.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/212924259.guardWithCatch(jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$122$12620AAAAA$deltablue.ScaleConstraint(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1269339945.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/479734028.delegate(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 307, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$87$6805I$deltablue.chooseMethod(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$48$2179A$deltablue.add(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1890266440.linkToCallSite(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5387, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$129$13672$deltablue.execute-2(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11520, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1979080261.linkToCallSite(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11520, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/735228558.guardWithCatch(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6144, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.NE(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10496, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/792855998.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/801197928.invokeStatic_L3_L(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/117248709.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1955920234.guardWithCatch(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$56$10872$deltablue.isSatisfied-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 321, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$95$7527$deltablue.recalculate(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 318, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$124$13431I$deltablue.markInputs-2(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/745571392.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/501261420.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1293885429.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.convert(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11520, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1112456099.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12547, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1918627686.delegate(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11521, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/276748028.exactInvoker(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11527, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$59$11158$deltablue.input(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5353, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$54$3339AA$deltablue.weaker(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 51215, OSR_BCI: 6 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$118$22526$deltablue.execute-4(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5407, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$68$2425$deltablue.removeFirst(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/54134077.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/589446616.invokeStatic_L5_L(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1078566479.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1562764987.exactInvoker(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5421, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$81$21809AA$deltablue.addConstraintsConsumingTo(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 720, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$118$22526$deltablue.execute-4(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ObjectArrayData.<init>(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.convert(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$41$2084$deltablue.OrderedCollection(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7424, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1955915048.invokeStatic_LLI_L(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5399, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/959834536.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunctionData.wrapThis(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1653751526.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$73$3429AA$deltablue.weakestOf(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5505, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/841283083.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$55$3252AA$deltablue.stronger(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/487792155.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$47$15465A$deltablue.addConstraint-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5295, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1926027290.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 274, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.divExact(jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1768952842.guard(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/741390111.delegate(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.fastPopObject() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 997, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/457233904.delegate(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 18694, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1966670937.guard(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 18702, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/173791568.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/961859592.guardWithCatch(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$63$5239I$deltablue.satisfy(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$76$20494AI$deltablue.addPropagate(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5182, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$128$14117$deltablue.recalculate-2(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$100$8977$deltablue.isInput-1(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5396, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$57$11028I$deltablue.markInputs-1(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5419, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$53$9808I$deltablue.chooseMethod-1(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11528, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.sameObject(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1251967187.guardWithCatch(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1424108509.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1347870667.invokeStatic_L3I_L(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5137, OSR_BCI: -1 :: static jobject java.lang.Integer.toString(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11521, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1338905451.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint jdk.nashorn.internal.scripts.Script$Recompilation$50$17874$deltablue.newMark(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$74$11630$deltablue.recalculate-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.ensureSpillSize(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5388, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$45$4852$deltablue.addConstraint(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5305, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$98$16635A$deltablue.incrementalAdd(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5196, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toString(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1556461159.linkToCallSite(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$108$22324A$deltablue.addConstraint-2(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1096682443.guardWithCatch(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$111$12025I$deltablue.inputsKnown-1(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5397, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1842173497.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 320, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.createGetterInner(jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 102, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$109$18966A$deltablue.makePlan(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2082678778.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayData.nextSize(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayData.alignUp(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 18688, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1006624255.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 18689, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/985397764.invokeStatic_ILL_I(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/37841489.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$107$7875I$deltablue.inputsKnown(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 102, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$145$21063A$deltablue.removePropagateFrom(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleNatives$CallSiteContext.run() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandleNatives.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 268, OSR_BCI: -1 :: static jboolean sun.misc.Cleaner.remove(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5317, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$93$11932$deltablue.markUnsatisfied-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/277164482.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$43$9343AAA$deltablue.BinaryConstraint(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$46$10637$deltablue.addToGraph-1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/105393903.linkToCallSite(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5408, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1131316523.invokeSpecial_LIL_V(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5424, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1540031691.guard(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3387, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2037202079.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3387, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$89$7064$deltablue.isSatisfied(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/2008666311.dontInline(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 118, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$139$2505A$deltablue.remove(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2010221835.reinvoke(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$121$15087AI$deltablue.Variable(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6432, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ObjectArrayData.setElem(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: static jboolean sun.reflect.misc.ReflectUtil.isVMAnonymousClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.Lexer.valueOf(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.Long.parseLong(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5517, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.toArray() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 512, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 512, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Access.name() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.constant(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5433, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putIfAbsent(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.lastUseIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterReturnNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.UnwarrantedOptimismException.getProgramPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.access$400(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.storeTemp(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.defineTemporaryLocalVariable(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.defineTemporaryLocalVariable(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.visitEnd() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.getTargetLabel() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RewriteException.getUOE() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Throwable.getCause() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getPropertyName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.util.concurrent.atomic.AtomicInteger.getAndIncrement() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8449, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1273765644.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8449, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1566723494.invokeVirtual_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 233, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.TypeEvaluator.evaluatePropertySafely(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.access$200(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.setStates(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.findGetMethod(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterIfNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.processIfNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5495, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newConstItem(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5430, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.pushExpressionType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 242, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.BranchOptimizer.branchOptimizer(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 341, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._catch(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 279, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.commonPrefix(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$SubList$1.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1282, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.speciesData_LLLLL() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8449, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1508646930.invokeStatic_LIL_V(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8576, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandleImpl$ArrayAccessor.setElementL(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 640, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 640, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 307, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Compiler.binaryName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.BinaryNode.undefinedToNumber(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.specialCallNoLookup(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.logLookup(jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: virtual void java.util.ArrayList.clear() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.getIndex() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isJSPrimitive() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 272, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.types.Type.invokestatic(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 275, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Call.className() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 274, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Call.name() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 275, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Call.descriptor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadBinaryOperands(jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.noToPrimitiveConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5523, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newInteger(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 768, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 768, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 215, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newString(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3I.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/69673470.invokeStatic_L5IL_L(jobject, jobject, jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L3IL.make(jobject, jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L3IL.<init>(jobject, jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 288, OSR_BCI: -1 :: virtual jint java.lang.String.codePointAt(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.regex.Pattern.peek() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 219, OSR_BCI: -1 :: static void sun.misc.FDBigInteger.mult(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.misc.FDBigInteger.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.misc.FDBigInteger.trimLeadingZeros() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.misc.FDBigInteger.makeImmutable() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.FDBigInteger.mult(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5610, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.getProgramPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$SubList$1.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 276, OSR_BCI: -1 :: static jobject sun.reflect.Reflection.filter(jobject, jobject) <<<<<<<
DeltaBlue: 82.5
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.GlobalConstants.staticConstantGetter(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.unboxConstant(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.access$800(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants.constantGetter(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.nio.Buffer.position(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.compareWeight(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 242, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.store(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popNumeric() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 896, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 896, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.markDefaultNameUsed() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.begin() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 180, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5448, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newHandleItem(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.Collections.eq(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.end() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter.toByteArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.DumpBytecode.dumpBytecode(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.defineClass(jobject, jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.preDefineClass(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.checkCerts(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.defineClassSourceLocation(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.addClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.postDefineClass(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 245, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.initializeMethodParameters(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants.findGetMethod(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 387, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.getDefaultFunctionName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 282, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.info(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 287, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._return() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1024, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1024, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5455, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection.toArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.defineGetArrayMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Collections.unmodifiableMap(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableMap.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithCatch(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithCatchForm(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeSet.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.TreeSet.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.EnumSet.of(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap.entrySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.<init>(jobject) <<<<<<<
----
Score (version 9): 82.5
>>> DEOPT COUNTER: 53 <<<
