use profiles with mode 0
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.System.getSecurityManager() <<<<<<<
NOTE: no explicit compiler cache profiles file specified, uses -XX:CacheProfilesFile=cached_profiles.dat.
Error while parsing line 8: unknown command

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1280, OSR_BCI: -1 :: virtual jint java.lang.String.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2432, OSR_BCI: -1 :: virtual void java.lang.Object.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 409, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 669, OSR_BCI: -1 :: virtual jint java.lang.String.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.concurrent.ConcurrentHashMap.tabAt(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 13056, OSR_BCI: -1 :: virtual jchar java.lang.String.charAt(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2560, OSR_BCI: -1 :: virtual void java.lang.Object.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.concurrent.ConcurrentHashMap.setTabAt(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 406, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jobject java.lang.System.getSecurityManager() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.ClassLoader.checkName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: virtual jint java.lang.String.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.expandCapacity(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.ensureCapacityInternal(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.lang.Character.isSurrogate(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Character.toLowerCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.CharacterData.of(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toLowerCase(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.getProperties(jint) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 9085: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 9160: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 9350: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 9740: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap$Node.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.util.concurrent.ConcurrentHashMap.spread(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.concurrent.ConcurrentHashMap.casTabAt(jobject, jint, jobject, jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 10944: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putVal(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putIfAbsent(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.getClassLoadingLock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.findLoadedClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 376, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap.addCount(jlong, jint) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 17745: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1390, OSR_BCI: -1 :: static void java.util.concurrent.ConcurrentHashMap.setTabAt(jobject, jint, jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 19711: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 20003: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 20011: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 20077: java/lang/invoke/BoundMethodHandle$Species_LI

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 905, OSR_BCI: -1 :: virtual jboolean java.lang.String.equals(jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 20125: java/lang/invoke/BoundMethodHandle$Species_L3

>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1004, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.loadClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.Launcher$AppClassLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1200, OSR_BCI: -1 :: virtual jint java.lang.String.hashCode() <<<<<<<
java.lang.NoClassDefFoundError: com/sun/proxy/$Proxy1
Error while parsing line 34369: com/sun/proxy/$Proxy1

java.lang.NoClassDefFoundError: com/sun/proxy/$Proxy1
Error while parsing line 34383: com/sun/proxy/$Proxy1

java.lang.NoClassDefFoundError: com/sun/proxy/$Proxy1
Error while parsing line 34568: com/sun/proxy/$Proxy1

java.lang.NoClassDefFoundError: sun/reflect/GeneratedSerializationConstructorAccessor10
Error while parsing line 39347: sun/reflect/GeneratedSerializationConstructorAccessor10

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 40782: java/lang/invoke/BoundMethodHandle$Species_LILL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 40854: java/lang/invoke/BoundMethodHandle$Species_LILL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 40876: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 40903: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 40945: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 41281: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 41439: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 42734: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 44000: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 44182: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 44322: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: sun/reflect/GeneratedSerializationConstructorAccessor10
Error while parsing line 44672: sun/reflect/GeneratedSerializationConstructorAccessor10

java.lang.NoClassDefFoundError: sun/reflect/GeneratedSerializationConstructorAccessor10
Error while parsing line 44951: sun/reflect/GeneratedSerializationConstructorAccessor10

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 45138: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 45360: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 45658: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL
Error while parsing line 45734: java/lang/invoke/BoundMethodHandle$Species_LIL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL
Error while parsing line 45803: java/lang/invoke/BoundMethodHandle$Species_LIL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 45869: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L5
Error while parsing line 45922: java/lang/invoke/BoundMethodHandle$Species_L5

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 46084: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 46153: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 46191: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 46546: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 46652: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 46702: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_I
Error while parsing line 46763: java/lang/invoke/BoundMethodHandle$Species_I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 46815: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_I
Error while parsing line 46868: java/lang/invoke/BoundMethodHandle$Species_I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 47253: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 47282: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 47445: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 47564: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 47639: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 47733: java/lang/invoke/BoundMethodHandle$Species_LI

>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.Vector.size() <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_I
Error while parsing line 47768: java/lang/invoke/BoundMethodHandle$Species_I

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 112, OSR_BCI: -1 :: virtual jobject java.lang.String.replace(jchar, jchar) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 47841: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 47925: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 48115: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_I
Error while parsing line 48205: java/lang/invoke/BoundMethodHandle$Species_I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 48988: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 49049: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 49077: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 49132: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 49178: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 49238: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.ArrayList.size() <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 49386: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 49415: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject java.net.URLClassLoader.access$000(jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L7
Error while parsing line 49540: java/lang/invoke/BoundMethodHandle$Species_L7

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 49584: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 49682: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 53020: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 53067: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL3
Error while parsing line 53077: java/lang/invoke/BoundMethodHandle$Species_LIL3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 53099: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5494, OSR_BCI: -1 :: static jobject java.util.concurrent.ConcurrentHashMap.tabAt(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1363, OSR_BCI: -1 :: static jboolean java.util.concurrent.ConcurrentHashMap.casTabAt(jobject, jint, jobject, jobject) <<<<<<<
java.lang.NoClassDefFoundError: sun/reflect/GeneratedMethodAccessor2
Error while parsing line 53865: sun/reflect/GeneratedMethodAccessor2

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 55044: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 55310: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 55350: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L7
Error while parsing line 56684: java/lang/invoke/BoundMethodHandle$Species_L7

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 56710: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_I
Error while parsing line 56736: java/lang/invoke/BoundMethodHandle$Species_I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 56808: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL
Error while parsing line 56953: java/lang/invoke/BoundMethodHandle$Species_LIL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 56988: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLI
Error while parsing line 57233: java/lang/invoke/BoundMethodHandle$Species_LLI

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Throwable.fillInStackTrace() <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 57264: java/lang/invoke/BoundMethodHandle$Species_LILL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 57460: java/lang/invoke/BoundMethodHandle$Species_L3

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 342, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jboolean) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 57588: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 57719: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 57729: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 57758: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 57918: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 57962: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 58123: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 58334: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 58726: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 58975: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L5
Error while parsing line 59024: java/lang/invoke/BoundMethodHandle$Species_L5

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 59075: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 59082: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 59125: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 59306: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL
Error while parsing line 59413: java/lang/invoke/BoundMethodHandle$Species_LIL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL
Error while parsing line 59452: java/lang/invoke/BoundMethodHandle$Species_LIL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 59483: java/lang/invoke/BoundMethodHandle$Species_LILL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 59573: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 59696: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 59865: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 59889: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 59902: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 60423: java/lang/invoke/BoundMethodHandle$Species_LILL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 60471: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 60495: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 60618: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL3
Error while parsing line 60634: java/lang/invoke/BoundMethodHandle$Species_LIL3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 60654: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 60706: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: sun/reflect/GeneratedSerializationConstructorAccessor11
Error while parsing line 61206: sun/reflect/GeneratedSerializationConstructorAccessor11

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 63499: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 63559: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 63996: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 64113: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 64210: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 64536: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: sun/reflect/GeneratedSerializationConstructorAccessor8
Error while parsing line 64650: sun/reflect/GeneratedSerializationConstructorAccessor8

java.lang.NoClassDefFoundError: sun/reflect/GeneratedMethodAccessor4
Error while parsing line 64890: sun/reflect/GeneratedMethodAccessor4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLIL
Error while parsing line 65622: java/lang/invoke/BoundMethodHandle$Species_LLIL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 65713: java/lang/invoke/BoundMethodHandle$Species_LILL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 66531: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Stack.empty() <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_I
Error while parsing line 66691: java/lang/invoke/BoundMethodHandle$Species_I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLIL
Error while parsing line 69388: java/lang/invoke/BoundMethodHandle$Species_LLIL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.net.URLClassLoader.findClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.net.URLClassLoader$1.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.net.URLClassLoader$1.run() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.net.URLClassLoader$1.run() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.String.concat(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.String.getChars(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath.getResource(jobject, jboolean) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 69443: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 72117: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 72157: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 72598: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 73006: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 73208: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 74653: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 75100: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 75204: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 76344: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 78562: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L7
Error while parsing line 78827: java/lang/invoke/BoundMethodHandle$Species_L7

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_I
Error while parsing line 78861: java/lang/invoke/BoundMethodHandle$Species_I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 79277: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL
Error while parsing line 79405: java/lang/invoke/BoundMethodHandle$Species_LIL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 80183: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L5
Error while parsing line 81571: java/lang/invoke/BoundMethodHandle$Species_L5

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L5
Error while parsing line 81831: java/lang/invoke/BoundMethodHandle$Species_L5

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 82792: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 82949: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 83856: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 83991: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 962, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jint, jint) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 85433: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 86014: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 86568: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 86959: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 86983: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 86994: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 87211: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 87300: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 87340: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 88153: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 88613: java/lang/invoke/BoundMethodHandle$Species_LILL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 88632: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 89091: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 89100: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 89435: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 89587: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1181, OSR_BCI: -1 :: virtual jboolean java.lang.String.equals(jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 90354: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 90459: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 90760: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 91303: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 91751: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 91893: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL3
Error while parsing line 92391: java/lang/invoke/BoundMethodHandle$Species_LIL3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 92422: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 92441: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 92491: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 92678: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 92738: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 92831: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 93004: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 93270: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 93628: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 94694: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLI
Error while parsing line 95230: java/lang/invoke/BoundMethodHandle$Species_LLI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LILL
Error while parsing line 96443: java/lang/invoke/BoundMethodHandle$Species_LILL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_I
Error while parsing line 96695: java/lang/invoke/BoundMethodHandle$Species_I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 96854: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 97094: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 97503: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 97757: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 97997: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 98060: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath.getLoader(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.ClassNotFoundException.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.ReflectiveOperationException.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.Exception.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.Throwable.<init>(jobject, jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 98070: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: com/sun/proxy/$Proxy1
Error while parsing line 98233: com/sun/proxy/$Proxy1

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 98659: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 98780: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 99731: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: com/sun/proxy/$Proxy1
Error while parsing line 100445: com/sun/proxy/$Proxy1

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_I
Error while parsing line 100701: java/lang/invoke/BoundMethodHandle$Species_I

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD3P0
Error while parsing line 100759: jdk/nashorn/internal/scripts/JD3P0

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD3P0
Error while parsing line 100772: jdk/nashorn/internal/scripts/JD3P0

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 100960: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 101116: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 101569: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L7
Error while parsing line 101641: java/lang/invoke/BoundMethodHandle$Species_L7

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 101824: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 101882: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 102109: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL3
Error while parsing line 102525: java/lang/invoke/BoundMethodHandle$Species_LIL3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 102607: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LIL3
Error while parsing line 102629: java/lang/invoke/BoundMethodHandle$Species_LIL3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 102800: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 102906: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 102963: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 103231: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 103550: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 103758: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 104050: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 104757: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 104769: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD10P0
Error while parsing line 104787: jdk/nashorn/internal/scripts/JD10P0

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 104808: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 104838: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD10P0
Error while parsing line 104906: jdk/nashorn/internal/scripts/JD10P0

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD10P0
Error while parsing line 104921: jdk/nashorn/internal/scripts/JD10P0

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 104979: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 105015: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LLILL
Error while parsing line 105114: java/lang/invoke/BoundMethodHandle$Species_LLILL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 105870: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 106013: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 106755: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 107245: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 107267: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 107331: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 107457: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 107471: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 107536: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD7P0
Error while parsing line 107566: jdk/nashorn/internal/scripts/JD7P0

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 108048: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L7
Error while parsing line 108108: java/lang/invoke/BoundMethodHandle$Species_L7

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3I
Error while parsing line 108135: java/lang/invoke/BoundMethodHandle$Species_L3I

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 108208: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 108246: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 108278: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 108480: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L4
Error while parsing line 108510: java/lang/invoke/BoundMethodHandle$Species_L4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 108798: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 108830: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 108847: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD10P0
Error while parsing line 109838: jdk/nashorn/internal/scripts/JD10P0

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 109867: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 109877: java/lang/invoke/BoundMethodHandle$Species_LL

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Throwable.<init>(jobject) <<<<<<<
java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 110134: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD10P0
Error while parsing line 110644: jdk/nashorn/internal/scripts/JD10P0

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 110699: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD10P0
Error while parsing line 111108: jdk/nashorn/internal/scripts/JD10P0

>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.NoClassDefFoundError.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.LinkageError.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.Error.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Throwable.initCause(jobject) <<<<<<<
java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 111195: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD10P0
Error while parsing line 111276: jdk/nashorn/internal/scripts/JD10P0

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 111381: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LI
Error while parsing line 111427: java/lang/invoke/BoundMethodHandle$Species_LI

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 111692: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 112018: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 112059: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 112145: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_LL
Error while parsing line 112777: java/lang/invoke/BoundMethodHandle$Species_LL

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 112816: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 113020: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_L3
Error while parsing line 113083: java/lang/invoke/BoundMethodHandle$Species_L3

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 113224: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD10P0
Error while parsing line 113277: jdk/nashorn/internal/scripts/JD10P0

java.lang.NoClassDefFoundError: java/lang/invoke/BoundMethodHandle$Species_I
Error while parsing line 114103: java/lang/invoke/BoundMethodHandle$Species_I

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/Script$Recompilation$315$169189AA$earley_boyer
Error while parsing line 114963: jdk/nashorn/internal/scripts/Script$Recompilation$315$169189AA$earley_boyer

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 115139: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 115350: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 115372: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 115590: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 115601: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 117358: jdk/nashorn/internal/scripts/JD4

java.lang.NoClassDefFoundError: jdk/nashorn/internal/scripts/JD4
Error while parsing line 117899: jdk/nashorn/internal/scripts/JD4

>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.Boolean.valueOf(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.Boolean.valueOf(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.Hashtable.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.getParameterTypes() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 11264, OSR_BCI: 10 :: virtual jobject java.io.UnixFileSystem.normalize(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 11264, OSR_BCI: 10 :: virtual jobject java.io.UnixFileSystem.normalize(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.io.UnixFileSystem.prefixLength(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jchar java.lang.Character.toUpperCase(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Character.toUpperCase(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toUpperCase(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.misc.URLClassPath.access$000(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.net.URL.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.net.URL.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.net.www.protocol.file.Handler.parseURL(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.net.URLStreamHandler.parseURL(jobject, jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 202, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 202, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 514, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.net.URLStreamHandler.setURL(jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.net.URL.set(jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jchar java.lang.Character.toLowerCase(jchar) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 239, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 239, OSR_BCI: -1 :: virtual jboolean java.lang.String.startsWith(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void sun.misc.URLClassPath.check(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 297, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 297, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 74, OSR_BCI: -1 :: virtual jobject java.lang.String.toLowerCase(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 78, OSR_BCI: -1 :: virtual jboolean java.lang.String.endsWith(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.misc.URLClassPath$FileLoader.getResource(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual jboolean java.lang.String.regionMatches(jboolean, jint, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 29696, OSR_BCI: 20 :: virtual jint sun.nio.cs.UTF_8$Encoder.encode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3456, OSR_BCI: -1 :: static jint java.lang.Math.min(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.io.File.getPrefixLength() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.HashMap$Node.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.HashMap$Node.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.String.getChars(jint, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 384, OSR_BCI: -1 :: virtual void java.lang.String.getChars(jint, jint, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5120, OSR_BCI: 29 :: static jobject sun.net.www.ParseUtil.encodePath(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5120, OSR_BCI: 29 :: static jobject sun.net.www.ParseUtil.encodePath(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 67, OSR_BCI: -1 :: virtual void java.io.File.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jint java.util.BitSet.wordIndex(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 512, OSR_BCI: -1 :: virtual void java.util.BitSet.checkInvariants() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 512, OSR_BCI: -1 :: virtual void java.util.BitSet.checkInvariants() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 20107, OSR_BCI: 69 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 228, OSR_BCI: -1 :: virtual jobject java.io.UnixFileSystem.normalize(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 348, OSR_BCI: -1 :: virtual jobject java.io.UnixFileSystem.resolve(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.io.File.exists() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 371, OSR_BCI: -1 :: virtual jboolean java.io.File.isInvalid() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 768, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.String.toCharArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.String.toCharArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 435, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 768, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 94, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jchar) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 94, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 300, OSR_BCI: -1 :: virtual jint java.io.UnixFileSystem.getBooleanAttributes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 371, OSR_BCI: -1 :: virtual jint sun.nio.cs.UTF_8$Encoder.encode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 435, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 304, OSR_BCI: -1 :: virtual jobject java.io.File.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 131, OSR_BCI: -1 :: static jobject sun.net.www.ParseUtil.encodePath(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ref.SoftReference.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ref.SoftReference.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 296, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 318, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jfloat java.nio.charset.CharsetEncoder.maxBytesPerChar() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.StringCoding.safeTrim(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.String.getBytes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.StringCoding.encode(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.StringCoding$StringEncoder.encode(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jint java.lang.StringCoding.scale(jint, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject java.lang.StringCoding.access$300(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 508, OSR_BCI: -1 :: static jobject java.lang.StringCoding.deref(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 508, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 508, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.getMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.StringCoding$StringEncoder.requestedCharsetName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 508, OSR_BCI: -1 :: static jint java.lang.StringCoding.access$000(jint, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 512, OSR_BCI: -1 :: static jint java.lang.ThreadLocal.access$400(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getProtocol() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.net.URL.getFile() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 511, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 276, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal$ThreadLocalMap.getEntry(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 512, OSR_BCI: -1 :: virtual jboolean java.util.BitSet.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 512, OSR_BCI: -1 :: virtual jboolean java.util.BitSet.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 404, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.Arrays.asList(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.Arrays$ArrayList.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 151, OSR_BCI: -1 :: virtual void java.lang.ref.Reference.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 151, OSR_BCI: -1 :: virtual void java.lang.ref.Reference.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 266, OSR_BCI: -1 :: virtual void java.util.AbstractList.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 266, OSR_BCI: -1 :: virtual void java.util.AbstractList.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 267, OSR_BCI: -1 :: virtual void java.util.AbstractCollection.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 97, OSR_BCI: -1 :: virtual void java.lang.ref.SoftReference.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 101, OSR_BCI: -1 :: virtual void java.lang.ref.Reference.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList.add(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedList.linkLast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedList.linkLast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedList$Node.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableCollection$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableCollection$1.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.AbstractList$Itr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.AbstractList$Itr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.Arrays$ArrayList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.checkForComodification() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 140, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1240, OSR_BCI: -1 :: virtual jboolean java.lang.String.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.Objects.requireNonNull(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.BufferedInputStream.getBufIfOpen() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual jint java.util.Properties$LineReader.readLine() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 600, OSR_BCI: 21 :: virtual jint java.util.Properties$LineReader.readLine() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual jint java.util.Properties$LineReader.readLine() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Properties.loadConvert(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 258, OSR_BCI: -1 :: static jobject java.util.Objects.requireNonNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 258, OSR_BCI: -1 :: static jobject java.util.Objects.requireNonNull(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableCollection$1.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection$1.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.AbstractList$Itr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.AbstractList$Itr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Locale.getLanguage() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.iterator() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.AbstractList$Itr.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.String.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.String.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1136, OSR_BCI: -1 :: virtual jobject java.lang.String.replace(jchar, jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 13, OSR_BCI: -1 :: static jobject java.nio.charset.Charset.lookup(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: static jobject java.nio.charset.Charset.forName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.nio.ByteBuffer.<init>(jint, jint, jint, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.PrintWriter.<init>(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void java.nio.Buffer.<init>(jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: static jobject java.nio.Bits.byteOrder() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 14, OSR_BCI: -1 :: virtual void java.io.Writer.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.security.PermissionCollection.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1282, OSR_BCI: -1 :: static jobject java.lang.CharacterData.of(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read1(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.Hashtable.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.Hashtable.addEntry(jint, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.Hashtable$Entry.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap.newNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap.newNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.ref.ReferenceQueue.enqueue(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.skipDelimiters(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.skipDelimiters(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.scanToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.scanToken(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.countTokens() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.countTokens() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.StringTokenizer.nextToken() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.StringTokenizer.nextToken() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.StringTokenizer.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.StringTokenizer.setMaxDelimCodePoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.StringTokenizer.setMaxDelimCodePoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 76, OSR_BCI: -1 :: static jint java.lang.Character.charCount(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.AbstractSequentialList.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.AbstractSequentialList.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.QuotedStringTokenizer.unmatchedQuotesIn(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.QuotedStringTokenizer.unmatchedQuotesIn(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.String.trim() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.StringTokenizer.hasMoreTokens() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1111, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.QuotedStringTokenizer.stripQuotes(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Vector.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.Character.isWhitespace(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isWhitespace(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.StringTokenizer.<init>(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.StringTokenizer.<init>(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.LinkedList.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.regex.Pattern$Node.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 33, OSR_BCI: -1 :: virtual jint java.lang.String.codePointAt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Character.codePointAtImpl(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern.has(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Node.study(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.regex.Matcher.reset() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Slice.match(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 18, OSR_BCI: -1 :: virtual jint java.util.StringTokenizer.skipDelimiters(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.QuotedStringTokenizer.nextToken() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.removeFirst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.unlinkFirst(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual void java.util.StringTokenizer.<init>(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.util.regex.Pattern.isSupplementary(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Matcher.search(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.regex.Pattern$Start.match(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.HashMap$HashIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.HashMap$HashIterator.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap$KeyIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap$KeyIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap$HashIterator.nextNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap$HashIterator.nextNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.TreeSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.TreeMap$Entry.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.TreeMap.fixAfterInsertion(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 331, OSR_BCI: -1 :: virtual jobject java.util.HashMap.getNode(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 878, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.TreeMap.parentOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.TreeMap.leftOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.util.TreeMap.setColor(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.util.TreeMap.colorOf(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 456, OSR_BCI: -1 :: virtual jobject java.util.HashMap$HashIterator.nextNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 581, OSR_BCI: -1 :: static jint java.util.HashMap.hash(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.TreeMap.rotateLeft(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.Vector.addElement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 309, OSR_BCI: -1 :: virtual void java.util.Vector.ensureCapacityHelper(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.Vector.elementData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 138, OSR_BCI: -1 :: virtual jobject java.util.Vector.elementAt(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1024, OSR_BCI: 30 :: virtual jint java.lang.String.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1024, OSR_BCI: 30 :: virtual jint java.lang.String.compareTo(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.options.OptionTemplate.getKey() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.LinkedList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeAccess(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2289, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 252, OSR_BCI: -1 :: virtual jint java.lang.String.compareTo(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.Stack.push(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual jobject java.util.Stack.pop() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 263, OSR_BCI: -1 :: virtual jobject java.util.Stack.peek() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual void java.util.Vector.removeElementAt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.TreeMap.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.TreeMap$PrivateEntryIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.TreeMap$PrivateEntryIterator.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$KeyIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$KeyIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$PrivateEntryIterator.nextEntry() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$PrivateEntryIterator.nextEntry() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.TreeMap.successor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.TreeMap.successor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Character.digit(jchar, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Character.digit(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.digit(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.String.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 141, OSR_BCI: -1 :: static jint java.lang.Math.max(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 210, OSR_BCI: -1 :: virtual jobject java.lang.String.replace(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 267, OSR_BCI: -1 :: static jobject java.util.TreeMap.successor(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 257, OSR_BCI: -1 :: virtual void java.util.AbstractMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 257, OSR_BCI: -1 :: virtual void java.util.AbstractMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jboolean sun.util.locale.LocaleUtils.isUpper(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 250, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.Collections.emptyList() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$EmptyList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.Collections.emptyIterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.options.OptionTemplate.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.File.getPath() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.BufferedInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.DataInputStream.readUTF() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.DataInputStream.readFully(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.io.DataInputStream.readUTF(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jshort java.io.DataInputStream.readShort() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.io.DataInputStream.readUnsignedShort() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 769, OSR_BCI: 92 :: static jobject java.io.DataInputStream.readUTF(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 132, OSR_BCI: -1 :: static jobject java.io.DataInputStream.readUTF(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.DataInputStream.readFully(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.HashMap.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 250, OSR_BCI: -1 :: virtual jobject java.util.HashMap.put(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1024, OSR_BCI: 151 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1024, OSR_BCI: 151 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jbyte java.io.DataInputStream.readByte() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ByteArrayInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ByteArrayInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.DataInputStream.readInt() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.Checksum.update(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.zip.CRC32.update(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.String.isEmpty() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$Itr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$Itr.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.getSimpleName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.getSimpleName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.getSimpleBinaryName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.Byte.<init>(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 476, OSR_BCI: -1 :: virtual void java.lang.Number.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 476, OSR_BCI: -1 :: virtual void java.lang.Number.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnclosingClass() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnclosingMethodInfo() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnclosingMethodInfo() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.Class.getDeclaringClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.Short.<init>(jshort) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.Long.<init>(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint sun.invoke.util.Wrapper.hashWrap(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.<init>(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 267, OSR_BCI: -1 :: virtual jobject java.lang.Class.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 267, OSR_BCI: -1 :: virtual jobject java.lang.Class.getName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalize(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalize(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.makeImpl(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.makeImpl(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType$ConcurrentWeakInternSet.expungeStaleElements() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType.<init>(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalize(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.invoke.MethodTypeForm.pack(jint, jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.hashCode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 52, OSR_BCI: -1 :: virtual jobject java.lang.ref.ReferenceQueue.poll() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 52, OSR_BCI: -1 :: virtual jobject java.lang.ref.ReferenceQueue.poll() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.add(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.security.Permissions.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.security.Permissions.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.security.Permissions.getPermissionCollection(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 30, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 30, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.security.BasicPermission.getCanonicalName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.security.BasicPermission.newPermissionCollection() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.security.BasicPermissionCollection.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Compiler.binaryName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 249, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 257, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>(jint, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 257, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>(jint, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.getEntry(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.getEntry(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4608, OSR_BCI: -1 :: virtual jint java.lang.String.indexOf(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 277, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.getEntry(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 278, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.getEntry(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 696, OSR_BCI: 35 :: virtual jobject java.util.TreeMap.getEntry(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 696, OSR_BCI: 35 :: virtual jobject java.util.TreeMap.getEntry(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 301, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.getEntry(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.HashMap$HashIterator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.HashMap$HashIterator.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 34, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jchar sun.reflect.generics.parser.SignatureParser.current() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.generics.parser.SignatureParser.advance() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.iterator() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$Itr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$Itr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.checkForComodification() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.privateGetDeclaredMethods(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 35, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static void java.lang.Class.checkInitted() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual jobject java.lang.Class.reflectionData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 14, OSR_BCI: -1 :: static jobject sun.reflect.Reflection.filter(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 93, OSR_BCI: -1 :: virtual jobject java.lang.Class.newReflectionData(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.Class.searchMethods(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isPublic(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Integer.stringSize(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 386, OSR_BCI: -1 :: static void java.lang.Integer.getChars(jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 386, OSR_BCI: -1 :: static void java.lang.Integer.getChars(jint, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 19, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 19, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 19, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 19, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isStatic(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.Class$MethodArray.matchesNameAndDescriptor(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.reflect.Method.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.reflect.Array.newInstance(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.reflect.Array.newInstance(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 191, OSR_BCI: -1 :: static jobject java.lang.Class.getReflectionFactory() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 33, OSR_BCI: -1 :: static jobject sun.reflect.ReflectionFactory.langReflectAccess() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.toArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.toArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap$ValueIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jshort sun.misc.ProxyGenerator$ConstantPool.getUtf8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jshort sun.misc.ProxyGenerator$ConstantPool.getValue(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.misc.ProxyGenerator$ConstantPool$Entry.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.misc.ProxyGenerator$ConstantPool$Entry.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.DataOutputStream.writeByte(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ByteArrayOutputStream.write(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ByteArrayOutputStream.ensureCapacity(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.DataOutputStream.incCount(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint sun.misc.ProxyGenerator$ConstantPool$IndirectEntry.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap.values() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap$Values.iterator() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 258, OSR_BCI: -1 :: static jobject java.lang.reflect.Array.newInstance(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 258, OSR_BCI: -1 :: static jobject java.lang.reflect.Array.newInstance(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.DataOutputStream.writeShort(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean sun.misc.ProxyGenerator$ConstantPool$IndirectEntry.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 187, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 187, OSR_BCI: -1 :: virtual void java.util.ArrayList.ensureCapacityInternal(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 187, OSR_BCI: -1 :: virtual void java.util.ArrayList.ensureExplicitCapacity(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.DataOutputStream.write(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ByteArrayOutputStream.write(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject sun.misc.ProxyGenerator.access$300(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.replaceNode(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: static jobject java.lang.ClassLoader.getClassLoader(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.annotation.AnnotationInvocationHandler.invoke(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.annotation.AnnotationInvocationHandler.invoke(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.put(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.IdentityHashMap.maskNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.IdentityHashMap.maskNull(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.util.IdentityHashMap.hash(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.util.IdentityHashMap.hash(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 257, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 257, OSR_BCI: -1 :: virtual void java.util.HashMap.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jshort java.lang.Short.shortValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jshort sun.misc.ProxyGenerator$ConstantPool.getIndirect(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 109, OSR_BCI: -1 :: static jint java.io.DataOutputStream.writeUTF(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.annotationData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.annotationData() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 808, OSR_BCI: 35 :: virtual jobject java.util.TreeMap.getEntry(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 403, OSR_BCI: -1 :: virtual void java.util.HashMap.putMapEntries(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 268, OSR_BCI: -1 :: virtual jobject java.lang.Class.annotationData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 268, OSR_BCI: -1 :: virtual jobject java.lang.Class.annotationData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.Collections.emptyMap() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.Collections.emptySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$EmptySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject com.sun.proxy.$Proxy1.name() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual void java.lang.ref.WeakReference.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 95, OSR_BCI: -1 :: static jint java.util.HashMap.tableSizeFor(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 95, OSR_BCI: -1 :: static jint java.util.HashMap.tableSizeFor(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isFinal(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.reflect.Field.setFieldAccessor(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.reflect.Field.setFieldAccessor(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 96, OSR_BCI: -1 :: static jint java.util.HashMap.tableSizeFor(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.security.BasicPermissionCollection.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1027, OSR_BCI: -1 :: static jobject java.io.DataInputStream.readUTF(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: virtual jobject java.lang.ref.ReferenceQueue.reallyPoll() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 9272, OSR_BCI: 96 :: virtual void java.util.concurrent.ConcurrentHashMap.transfer(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1272, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap.addCount(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.put(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.add(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 462, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1136, OSR_BCI: 9 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1136, OSR_BCI: 9 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1224, OSR_BCI: 9 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 462, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 462, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.addAll(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1450, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap.keySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap.keySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.HashMap$KeySet.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap$KeySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap$KeySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.HashMap$KeyIterator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2348, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putVal(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.clear() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 22, OSR_BCI: -1 :: virtual void java.util.AbstractSet.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 22, OSR_BCI: -1 :: virtual void java.util.AbstractSet.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedEntrySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedEntrySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$LinkedEntryIterator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$LinkedHashIterator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1134, OSR_BCI: -1 :: virtual jobject java.lang.String.substring(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1282, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toLowerCase(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.Integer.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.Integer.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.lang.Enum.<init>(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jint java.lang.invoke.MethodType.checkPtypes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jint java.lang.invoke.MethodType.checkPtypes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void java.lang.invoke.MethodType.checkPtype(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static void java.lang.invoke.MethodType.checkSlotCount(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static void java.lang.invoke.MethodType.checkSlotCount(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalizeAll(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalizeAll(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 229, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.makeImpl(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 229, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.makeImpl(jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType$ConcurrentWeakInternSet.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodTypeForm.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodTypeForm.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindIsField(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindIsField(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 155, OSR_BCI: -1 :: virtual jbyte java.lang.invoke.MemberName.getReferenceKind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 268, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isInvocable() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 263, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.testAnyFlags(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 270, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.testFlags(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isTypeVisible(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isTypeVisible(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterType(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.initResolved(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.initResolved(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindIsMethod(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isStatic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.testAllFlags(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isConstructor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterCount() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: static jint java.lang.invoke.MethodType.checkPtypes(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.canonicalizeAll(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.MemberName.flagsMods(jint, jint, jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.MemberName.flagsMods(jint, jint, jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.init(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.init(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName$Factory.resolveOrFail(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName$Factory.resolveOrFail(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName$Factory.resolve(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.erase() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isTypeVisible(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 129, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isResolved() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.insertParameterTypes(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.insertParameterTypes(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterSlotCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterSlotCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodTypeForm.parameterSlotCount() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 258, OSR_BCI: -1 :: virtual jboolean java.lang.Object.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 258, OSR_BCI: -1 :: virtual jboolean java.lang.Object.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 159, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jchar java.lang.invoke.MethodTypeForm.unpack(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jchar java.lang.invoke.MethodTypeForm.unpack(jlong, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.<init>(jobject, jobject, jobject, jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.<init>(jobject, jobject, jobject, jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 262, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.checkForTypeAlias() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 262, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.checkForTypeAlias() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 234, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.makeImpl(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.argument(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodOrFieldType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getMethodOrFieldType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.initIndex(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: static jchar java.lang.invoke.MethodTypeForm.unpack(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isNumeric() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forPrimitiveType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forPrimitiveType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isDoubleWord() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isSubwordOrInt() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isIntegral() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.<init>(jobject, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.<init>(jobject, jint, jobject, jint, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm.fixResult(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.fixDebugName(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getInvocationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getInvocationType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.returnType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.methodType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.genericMethodType(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 268, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.checkForTypeAlias() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 268, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 268, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forBasicType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.getFieldAccessor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.acquireFieldAccessor(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.ReflectionFactory.newFieldAccessor(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 257, OSR_BCI: -1 :: virtual void java.lang.reflect.Field.setFieldAccessor(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 257, OSR_BCI: -1 :: virtual void java.lang.reflect.Field.setFieldAccessor(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.constructor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.invoke.util.BytecodeDescriptor.parseSig(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkSymbolicClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkSymbolicClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.lookupClassOrNull() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.access$000() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon(jbyte, jobject, jobject, jboolean, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkMethod(jbyte, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Class.getClassLoader() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.Class.getClassLoader() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isSamePackage(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isSamePackage(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.preparedLambdaForm(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 275, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.invokerType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.getDeclaredMethod(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual void java.lang.Class.checkMemberAccess(jint, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isField() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.preparedLambdaForm(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.basicType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.basicType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.lang.invoke.DirectMethodHandle.shouldBeInitialized(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 259, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.cachedLambdaForm(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 259, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.cachedLambdaForm(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 103, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 20, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap.transfer(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 272, OSR_BCI: -1 :: virtual jobject java.lang.Class.getClassLoader() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jchar java.lang.invoke.LambdaForm$BasicType.basicTypeChar(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 210, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2094, OSR_BCI: 214 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2094, OSR_BCI: 214 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 275, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 275, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 235, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.compileToBytecode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameterType(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$BasicType.basicTypeSlots() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.<init>(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newClass(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newClassItem(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newClassItem(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newUTF8(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putByte(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putByte(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.put12(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.put12(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterList() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static void sun.invoke.util.BytecodeDescriptor.unparseSig(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static void sun.invoke.util.BytecodeDescriptor.unparseSig(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Type.<init>(jint, jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: static jint jdk.internal.org.objectweb.asm.Type.getArgumentsAndReturnSizes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: static jint jdk.internal.org.objectweb.asm.Type.getArgumentsAndReturnSizes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ByteVector.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putShort(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putShort(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.MethodWriter.visitAnnotation(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.MethodWriter.visitAnnotation(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationWriter.<init>(jobject, jboolean, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ByteVector.enlarge(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ByteVector.enlarge(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationVisitor.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isMethod() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 281, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 11, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put122(jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.push(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.push(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitStoreResult(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 130, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitStoreInsn(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 131, OSR_BCI: -1 :: virtual jint java.lang.invoke.InvokerBytecodeGenerator.storeInsnOpcode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 131, OSR_BCI: -1 :: virtual jint java.lang.invoke.InvokerBytecodeGenerator.storeInsnOpcode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.execute(jint, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.execute(jint, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.member() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.Class.isAnonymousClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.Class.isLocalClass() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean sun.reflect.misc.ReflectUtil.isVMAnonymousClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isPrivate(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.get(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.getInternalName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.getInternalName(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3670, OSR_BCI: 74 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3670, OSR_BCI: 74 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.pop() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.addType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.addType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.addType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.toMethodDescriptorString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject sun.invoke.util.BytecodeDescriptor.unparseMethod(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.InvokerBytecodeGenerator.refKindOpcode(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newNameTypeItem(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newNameTypeItem(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.pop(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.pop(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.pop(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.push(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.push(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.internal.org.objectweb.asm.Frame.type(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.internal.org.objectweb.asm.Frame.type(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.returnType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getArgumentTypes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getArgumentTypes(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getType(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getType(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.append(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.append(jchar) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Item.isEqualTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Item.isEqualTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getDescriptor() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Type.getDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Type.getDescriptor(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putInt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putInt(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putByteArray(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putByteArray(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationWriter.visitEnd() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationWriter.visitEnd() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.methodType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.arguments(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.basicTypeSignature(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.String.valueOf(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 211, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 211, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 276, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 276, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.basicTypeSignature() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.basicTypeSignature() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.signatureType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.signatureType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm.signatureArity(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.signatureReturn(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.<init>(jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 475, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 475, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 11, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableCollection.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 11, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableCollection.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.visitMethod(jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodVisitor.<init>(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Label.resolve(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Label.resolve(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.intrinsicName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn(jint, jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn(jint, jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newMethodItem(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newMethodItem(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newNameType(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.set(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.set(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitReferenceCast(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.InvokerBytecodeGenerator.assertStaticType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitReturn(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitInsn(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitInsn(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.noSuccessor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.noSuccessor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.classFileEpilogue() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMaxs(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMaxs(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.initInputFrame(jobject, jint, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitFrame(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitFrame(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.MethodWriter.startFrame(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.endFrame() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitEnd() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.bogusMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 159, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ByteVector.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.InvokerBytecodeGenerator.maybeDump(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.InvokerBytecodeGenerator.getConstantPoolSize(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.resolveInvokerMember(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.setCachedLambdaForm(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.DirectMethodHandle.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.DirectMethodHandle.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2305, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putIfAbsent(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.shortenSignature(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2102, OSR_BCI: 214 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 211, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 211, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 277, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 277, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCodeBytes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.classFilePrologue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassVisitor.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.visit(jint, jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.visitSource(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLabel(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 259, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newNameTypeItem(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.useCount(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.lastUseIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.lastUseIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.useCount(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitTypeInsn(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitTypeInsn(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 18, OSR_BCI: -1 :: static void sun.invoke.util.BytecodeDescriptor.unparseSig(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 19, OSR_BCI: -1 :: static void sun.invoke.util.BytecodeDescriptor.unparseSig(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitReturnInsn(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 141, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getType(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2184, OSR_BCI: 220 :: static jobject jdk.internal.org.objectweb.asm.Type.getType(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2184, OSR_BCI: 220 :: static jobject jdk.internal.org.objectweb.asm.Type.getType(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.MethodWriter.getSize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.MethodWriter.getSize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.InvokerBytecodeGenerator.cpPatches(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 278, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 278, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 17, OSR_BCI: -1 :: static jobject java.util.Collections.unmodifiableList(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 17, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableRandomAccessList.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 161, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableList.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.intrinsicName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 160, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableCollection.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 143, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getType(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 143, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getType(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 212, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 212, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.put11(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.put11(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 21, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 22, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 11, OSR_BCI: -1 :: static void java.lang.invoke.DirectMethodHandle.maybeCompile(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindHasReceiver(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkAccess(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkAccess(jbyte, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkSecurityManager(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkSecurityManager(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getFieldType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getFieldType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.DirectMethodHandle.afIndex(jbyte, jboolean, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.DirectMethodHandle.ftypeKind(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullReferenceConversion(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newConstItem(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newConstItem(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newString(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 42, OSR_BCI: -1 :: static jboolean java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 56, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.execute(jint, jint, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2288, OSR_BCI: 220 :: static jobject jdk.internal.org.objectweb.asm.Type.getType(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 153, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getType(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2296, OSR_BCI: 220 :: static jobject jdk.internal.org.objectweb.asm.Type.getType(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 14, OSR_BCI: -1 :: static jboolean java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isPublic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newConst(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 20, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.getInternalName(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 22, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.AnnotationWriter.visitEnd() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.genericMethodType(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.genericMethodType(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.util.Arrays.fill(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 54, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Item.isEqualTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 15, OSR_BCI: -1 :: virtual jboolean java.lang.Class.isLocalOrAnonymousClass() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLdcInsn(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLdcInsn(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.findWrapperType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 21, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Type.getDescriptor(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 21, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 21, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitIconstInsn(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 20, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.pop() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 39, OSR_BCI: -1 :: static jint jdk.internal.org.objectweb.asm.Frame.type(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 19, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 19, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 405, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 405, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 21, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.pop() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 20, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 20, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 18, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.pop(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 274, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 409, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 409, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.SubList.checkForComodification() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.SubList$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.SubList$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.SubList$1.nextIndex() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.SubList$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.SubList$1.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.listToArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void java.util.ArrayList.rangeCheck(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.elementData(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.subList(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.subList(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.RandomAccessSubList.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.SubList.<init>(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.SubList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.SubList.iterator() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.listIterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.listIterator() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.SubList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.SubList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.SubList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.SubList$1.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.SubList$1.<init>(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.AbstractList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.AbstractList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 275, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 275, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.setCachedMethodHandle(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 280, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.changeReturnType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 281, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 281, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 19, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.genericMethodType(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.AbstractStringBuilder.append(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 214, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2126, OSR_BCI: 9 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2126, OSR_BCI: 9 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 286, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 286, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 410, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 410, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameter(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 18, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 14, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 8, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 29, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 19, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.push(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 11, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.put11(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 18, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.noSuccessor() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 18, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.maybeBindCaller(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.isCallerSensitive(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.setVarargs(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 286, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 286, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.resolveOrFail(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 290, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 290, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.internArgument(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(jobject, jint, jobject, jobject, jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(jobject, jint, jobject, jobject, jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.withConstraint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 99, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$NamedFunction.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.invokers() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.invokers() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.Invokers.cachedInvoker(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 23, OSR_BCI: -1 :: virtual void java.lang.Class.checkPackageAccess(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindIsGetter(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getFieldType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.util.SubList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.util.SubList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.findStatic(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkMethodName(jbyte, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.findBoundCallerClass(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.canBeCalledVirtual(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.canBeCalledVirtual(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 219, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 219, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.DelegatingMethodHandle.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DelegatingMethodHandle.chooseDelegatingForm(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.cachedMethodHandle(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 21, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 292, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.Invokers.setCachedInvoker(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 293, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm.prepare() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.methodType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getComponentType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getComponentType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 270, OSR_BCI: -1 :: virtual jobject java.lang.Class.getComponentType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 271, OSR_BCI: -1 :: virtual jobject java.lang.Class.getComponentType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 45, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.put(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.form() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: virtual jint java.util.Arrays$ArrayList.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuffer.append(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 20, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.genericMethodType(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asFixedArity() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleImpl$AsVarargsCollector.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleImpl$AsVarargsCollector.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2412, OSR_BCI: 214 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2412, OSR_BCI: 214 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L.make(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L.make(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitFieldInsn(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitFieldInsn(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newFieldItem(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newFieldItem(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.asCollectorType(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.asCollectorType(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableRandomAccessList.subList(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaFormBuffer.ownedCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.util.Arrays.fill(jobject, jint, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static void java.util.Arrays.rangeCheck(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static void java.util.Arrays.rangeCheck(jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.changeName(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.changeName(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.replaceNames(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.replaceNames(jobject, jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormEditor$Transform.<init>(jlong, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives.findMethodHandleType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 245, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asTypeCached(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 245, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asTypeCached(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle.rebind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle.rebind() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.makeReinvoker(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.makeReinvoker(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.getterFunction(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.getterFunction(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitFieldInsn(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L.copyWith(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L.copyWith(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 388, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newConstItem(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.methodType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 254, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.normalize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl$Lazy.access$500() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.editor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.editor() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.editor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.editor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor.lambdaFormEditor(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.LambdaFormEditor$Transform.inRange(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.LambdaFormEditor$Transform.inRange(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaFormEditor$Transform.packedBytes(jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaFormEditor$Transform.packedBytes(jint, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormEditor$Transform.<init>(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.buffer() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.startEdit() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.insertName(jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.replaceName(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.clearDuplicatesAndNulls() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.clearDuplicatesAndNulls() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.isParam() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.endEdit() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.endEdit() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.lambdaForm() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.putInCache(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant(jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.<init>(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.Byte.valueOf(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isClassAccessible(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isClassAccessible(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint sun.invoke.util.VerifyAccess.getClassModifiers(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.arity() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 29, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectMethod(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandles$Lookup.restrictProtectedReceiver(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandle.asCollectorChecks(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandle.spreadArrayChecks(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandle.spreadArrayChecks(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.collectArgumentArrayForm(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.collectArgumentArrayForm(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.insertExpression(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.growNames(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.replaceParameterByCopy(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.noteDuplicate(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaFormBuffer.resultIndex() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.remove(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.checkCustomized(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.maybeCustomize(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.internalMemberName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.internalMemberName(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.in(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.in(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.CallSite.maybeReBox(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 88, OSR_BCI: -1 :: static jobject java.lang.Integer.valueOf(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 88, OSR_BCI: -1 :: static jobject java.lang.Integer.valueOf(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 20, OSR_BCI: -1 :: static jobject java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(jobject, jint, jobject, jobject, jboolean, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.insertParameterTypes(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.insertParameterTypes(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.util.Collections$UnmodifiableCollection.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.util.Collections$UnmodifiableCollection.size() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection.toArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection.toArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.insertParameter(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormBuffer.clearDuplicatesAndNulls() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.internArguments() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.isConvertibleTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.isConvertibleTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makePairwiseConvert(jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.computeValueConversions(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.computeValueConversions(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.MethodHandleImpl.countNonNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.MethodHandleImpl.countNonNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 326, OSR_BCI: -1 :: virtual void java.lang.StringBuffer.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.concurrent.atomic.AtomicInteger.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isProtected(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 289, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isCallerSensitive() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.HashSet.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashSet.iterator() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.LinkedHashMap$LinkedHashIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.LinkedHashMap$LinkedHashIterator.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedHashIterator.nextNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedHashIterator.nextNode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 19, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 276, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 276, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitCode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 20, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 20, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 19, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 19, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static void sun.reflect.ReflectionFactory.checkInitted() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.rebind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm.expressionCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.oldSpeciesData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.speciesData(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 15, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 15, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 9, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 9, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.ConstantCallSite.getTarget() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.invoke.MemberName.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint java.util.Objects.hash(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jint java.util.Arrays.hashCode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jint java.util.Arrays.hashCode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.Byte.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint java.lang.Byte.hashCode(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.resolveOrFail(jbyte, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isClassAccessible(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectMethodForConstant(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectMethodNoSecurityManager(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyAccess.isMemberAccessible(jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.CallSite.maybeReBoxElements(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodHandles$Lookup.lookupModes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getInternalName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newInteger(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newInteger(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.visitEnd() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.identity(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.bindArgumentL(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentL(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.dropParameterTypes(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.dropParameterTypes(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentForm(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentForm(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jbyte java.lang.invoke.LambdaFormEditor$Transform.bval(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jbyte java.lang.invoke.LambdaFormEditor$Transform.bval(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaFormEditor$Transform.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaFormEditor$Transform.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.SimpleMethodHandle.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleNatives$CallSiteContext.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.misc.Cleaner.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.misc.Cleaner.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.ConstantCallSite.dynamicInvoker() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.callSiteForm(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.callSiteForm(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandles$Lookup.canBeCached(jbyte, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives.linkCallSite(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives.linkCallSite(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 410, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newInteger(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.bindTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.leadingReferenceParameter() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.Class.cast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.bindArgumentL(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DelegatingMethodHandle.rebind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DelegatingMethodHandle.rebind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleNatives$CallSiteContext.make(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject sun.misc.Cleaner.create(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.misc.Cleaner.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.misc.Cleaner.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.ref.PhantomReference.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.time.ZoneOffset.getTotalSeconds() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.time.temporal.ChronoField.range() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void java.io.OutputStreamWriter.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: static jobject sun.nio.cs.StreamEncoder.forOutputStreamWriter(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.lookup() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 17, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 11, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint sun.invoke.util.Wrapper.hashPrim(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.findPrimitiveType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 258, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.insertParameterTypes(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.findStatic(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.debug(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.debug(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context.getLogger(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 15, OSR_BCI: -1 :: virtual void java.lang.ref.WeakReference.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 272, OSR_BCI: -1 :: virtual jobject java.lang.Class.annotationData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 272, OSR_BCI: -1 :: virtual jobject java.lang.Class.annotationData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptEnvironment.hasLogger(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 118, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandles$Lookup.checkUnprivilegedlookupClass(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.String.valueOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.type(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.lookup.MethodHandleFactory.access$300() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.Class.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.Class.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.util.Arrays.toString(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.log(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.log(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.findVirtual(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isProtected() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.className(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.className(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getInternalType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$SynchronizedMap.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getInternalName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.methodDescriptor(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$Call.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$Access.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$Access.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getInternalName(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 7, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 10, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 11, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 11, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 14, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 15, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 15, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 18, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 19, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 19, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 23, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 24, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 24, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 30, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 8, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 31, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 31, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 10, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.log(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Call.methodHandle() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 97, OSR_BCI: -1 :: static jint java.util.HashMap.tableSizeFor(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.findVirtual(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 291, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 264, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 264, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleNatives.refKindIsSetter(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 38, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.lookupInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.virtualCallNoLookup(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$3.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodTypeForm.findForm(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 18, OSR_BCI: -1 :: static jboolean sun.misc.VM.isSystemDomainLoader(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 516, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 219, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.util.Objects.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean java.util.WeakHashMap.eq(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.getTable() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.WeakHashMap.expungeStaleEntries() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.WeakHashMap.expungeStaleEntries() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.WeakHashMap.hash(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 272, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.Long.valueOf(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.Long.valueOf(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.constant(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.invoke.util.Wrapper.convert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong java.lang.Long.longValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.Double.valueOf(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void java.lang.Double.<init>(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: virtual jobject sun.invoke.util.Wrapper.convert(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.invoke.util.Wrapper.wrapperType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.forceType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.lang.Double.doubleValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.newSpeciesData(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Factory.makeFieldName(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.visitField(jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldVisitor.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldVisitor.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Factory.makeSignature(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.String.valueOf(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Factory.typeSig(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.BoundMethodHandle$Factory.typeLoadOp(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Frame.init(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.addUninitializedType(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.FieldWriter.getSize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 782, OSR_BCI: 36 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 782, OSR_BCI: 36 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldWriter.put(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldWriter.put(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isPrivate() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.findGetter(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.resolveOrFail(jbyte, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MemberName.<init>(jobject, jobject, jobject, jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectField(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 40, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.getDirectFieldCommon(jbyte, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandles$Lookup.checkField(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.preparedFieldLambdaForm(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.preparedFieldLambdaForm(jbyte, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$SpeciesData.fieldCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.replaceFunctions(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormBuffer.renameParameter(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 352, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.extendWith(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 352, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.extendWith(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.publicLookup() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentForm(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentForm(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldWriter.visitEnd() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getObjectType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isVolatile(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.cloneWithIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArgumentsChecks(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.FieldWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaForm$Name.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 155, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LL.make(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LL.make(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_LL.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.asType(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.filterArgumentForm(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.filterArgumentForm(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaFormEditor$Transform.packedBytes(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaFormEditor$Transform.packedBytes(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.makeArgumentCombinationForm(jint, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicTypes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList.get(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Property.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Property.<init>(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Property.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Property.setType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.type() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 22, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.of(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodType.canConvert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodType.canConvert(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnumConstantsShared() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnumConstantsShared() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.invoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.DelegatingMethodAccessorImpl.invoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.System$2.getEnumConstantsShared(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.EnumMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.EnumMap.isValidKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.EnumMap.unmaskNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.filterReturnForm(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.extendWith(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.extendWith(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L3.make(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L3.make(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L3.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodType.canConvert(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodType.canConvert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.invoke.util.ValueConversions$WrapperCache.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.changeParameterType(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.changeParameterType(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.returnType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle.internalMemberName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyHashMap$Element.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyHashMap$Element.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyHashMap.<init>(jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyHashMap.<init>(jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.addNoClone(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.PropertyHashMap.binIndex(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.PropertyHashMap.binIndex(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.PropertyHashMap.findElement(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.immutableAdd(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 329, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.ClassValue$Entry.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.ClassValue$Entry.isPromise() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$Entry.version() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.dropArguments(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.toArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.toArray(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.addArgumentForm(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.addArgumentForm(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jint java.lang.invoke.MethodHandles.dropArgumentChecks(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jint java.lang.invoke.MethodHandles.dropArgumentChecks(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 30, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 30, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Arrays$ArrayList.toArray() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.entrySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.entrySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$LinkedEntrySet.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.addAll(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.toArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.toArray() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.AbstractSequentialList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.AbstractSequentialList.iterator() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual void java.util.LinkedList.checkPositionIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList.isPositionIndex(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 513, OSR_BCI: -1 :: virtual void java.util.LinkedList$ListItr.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 513, OSR_BCI: -1 :: virtual void java.util.LinkedList$ListItr.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.node(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList$ListItr.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.LinkedList$ListItr.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedList$ListItr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedList$ListItr.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedList$ListItr.checkForComodification() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 32, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 22, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 22, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.AbstractList$ListItr.nextIndex() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L.copyWithExtendI(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LI.make(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_LI.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 134, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.ClassValue.getCacheCarefully(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.ClassValue$ClassValueMap.loadFromCache(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.ClassValue.match(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.ClassValue$ClassValueMap.probeBackupLocations(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.ClassValue.getMap(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.ClassValue.initializeMap(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.ClassValue$ClassValueMap.sizeCache(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$ClassValueMap.startEntry(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.ClassValue.makeEntry(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$ClassValueMap.finishEntry(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.ClassValue$ClassValueMap.addToCache(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getNameToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getNameToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.concurrent.atomic.AtomicReference.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L3I.<init>(jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.bindSingle(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3I.copyWith(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3I.copyWith(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.exactInvoker(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.foldArguments(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.foldArgumentsForm(jint, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.foldArgumentsForm(jint, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 142, OSR_BCI: -1 :: virtual void java.util.ArrayList.grow(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.LinkerCallSite.newLinkerCallSite(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getNameTokenCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getNameTokenCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isProfile() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isTrace() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3.copyWithExtendI(jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L3I.make(jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L3I.make(jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.Invokers.exactInvoker() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.Invokers.exactInvoker() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.checkCache(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.foldArgumentChecks(jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.foldArgumentChecks(jint, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.AbstractList.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.AbstractList.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList.listIterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList.listIterator() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList.listIterator(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableList$1.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableList$1.<init>(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MutableCallSite.setTarget(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.CallSiteDescriptorFactory.tokenizeName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.CallSiteDescriptorFactory.tokenizeName(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.<init>(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.support.AbstractCallSiteDescriptor.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.dynalink.support.AbstractCallSiteDescriptor.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.dynalink.support.AbstractCallSiteDescriptor.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.foldArgumentsForm(jint, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.checkTargetChange(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.setTargetNormal(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.CallSite.type() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: static void java.lang.ThreadLocal$ThreadLocalMap.access$100(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual void java.lang.ThreadLocal$ThreadLocalMap.set(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual void java.lang.ThreadLocal$ThreadLocalMap.set(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.ThreadLocal.set(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.MemberName.getModifiers() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.PropertyMap.newMap(jobject, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.cloneMap(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.<init>(jobject, jobject, jint, jint, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.getter(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue.getFromHashMap(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual void java.util.WeakHashMap.<init>(jint, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: static jobject java.util.WeakHashMap.maskNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue$Entry.value() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual void java.lang.ClassValue$Entry.assertNotPromise() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 21, OSR_BCI: -1 :: virtual void java.lang.ref.ReferenceQueue.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 21, OSR_BCI: -1 :: virtual void java.lang.ref.ReferenceQueue$Lock.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual void java.lang.ref.ReferenceQueue$Lock.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 423, OSR_BCI: -1 :: static jboolean java.lang.Float.isNaN(jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 11, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.newTable(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandles.filterArgumentsCheckArity(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.filterArgument(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandles.filterArgumentChecks(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1283, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodType.parameterCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 219, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.methodType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 328, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty$Accessors.getCached(jint, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SpillProperty$Accessors.getInner(jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.PropertyMap.getFreeSpillSlot() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.PropertyMap.getFreeSpillSlot() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.SpillProperty.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty.primitiveGetter(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty.primitiveSetter(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty.objectGetter(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.SpillProperty$Accessors.ensure(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty.objectSetter(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.<init>(jobject, jint, jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.<init>(jobject, jint, jint, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.initializeType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.addPropertyNoHistory(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.immutableAdd(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.updateFlagsAndBoundaries(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.arrays.ArrayIndex.fromString(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.arrays.ArrayIndex.fromString(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.arrays.ArrayIndex.isValidArrayIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.arrays.ArrayIndex.isValidArrayIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.updateFreeSlots(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.findElement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.findElement(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 548, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.PropertyHashMap$Element.match(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 548, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.PropertyHashMap$Element.match(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyHashMap$Element.setLink(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual void java.util.WeakHashMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getGlobal() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 9, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.foldArgumentChecks(jint, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.findProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.findProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.find(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.Global.instance() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.Global.instance() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.getProperties() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isVarArg(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isVarArg(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.FinalScriptFunctionData.isConstructor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptFunctionData.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FinalScriptFunctionData.addInvoker(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptFunction.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptFunction.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.ScriptFunctionImpl.init(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.ScriptFunctionImpl.init(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getFunctionPrototype() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Property.getLocalType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Property.getLocalType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.hasDualFields() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.ScriptFunctionImpl.setPrototype(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.checkHistory(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.checkHistory(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.PropertyMap.addToHistory(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Property.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Property.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.util.Objects.hashCode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getMap(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction.<init>(jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.AccessorProperty.needsInvalidator(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.AccessorProperty.canChangeType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.AccessorProperty.canChangeType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.AccessorProperty.isUndefined() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.debug(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.debug(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isBuiltin() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.checkExactType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.checkUndeclared() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getObjectPrototype() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 264, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 264, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.AnnotationWriter.getSize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 257, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 257, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getPrototype() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getPrototype() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Property.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3.copyWith(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.addPropertyBind(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LL.copyWith(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LL.copyWith(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 268, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.AccessorProperty.canChangeType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandle.updateForm(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ArrayData.<init>(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 3334, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterType(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asTypeUncached(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1914572623.invokeStatic_L4_L(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LL.fieldCount() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 258, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 258, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Property.getKey() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getMap() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 270, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 271, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsCallee(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getProto() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.replaceProperty(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.immutableReplace(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.cloneMap() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap.replaceNoClone(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.PropertyHashMap.replaceInList(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.PropertyHashMap.replaceInList(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.castReference(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.castReference(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.getProperties() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toPrimitive(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isPrimitive(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toString(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toStringImpl(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getObjectValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getGetterReceiver() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getGetter(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.UnwarrantedOptimismException.isValid(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.UnwarrantedOptimismException.isValid(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 298, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 298, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 319, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 319, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong sun.invoke.util.ValueConversions.intToLong(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint sun.invoke.util.ValueConversions.longToInt(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxInteger(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxInteger(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.getName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 323, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 323, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.invoke.DirectMethodHandle.fieldOffset(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.checkBase(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.checkCast(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle$Accessor.checkCast(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 15, OSR_BCI: -1 :: static jobject java.lang.ClassValue$ClassValueMap.probeHomeLocation(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 15, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue.castEntry(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: virtual void java.lang.ThreadLocal$ThreadLocalMap.set(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkRequestImpl.getReceiver() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getFlags(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getFlags(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isBuiltin() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isFlag(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.canBeDeoptimized() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.linker.GuardedInvocation.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.util.IdentityHashMap.nextKeyIndex(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.util.IdentityHashMap.nextKeyIndex(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$EntryIterator$Entry.checkIndexForEntryUse() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$EntryIterator$Entry.<init>(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$EntryIterator$Entry.<init>(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$EntryIterator$Entry.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator$Entry.getValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator$Entry.getValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getKey() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator$Entry.getKey() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator$Entry.getKey() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.IdentityHashMap.unmaskNull(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap$IdentityHashMapIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap$IdentityHashMapIterator.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntryIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 414, OSR_BCI: -1 :: virtual jint java.util.IdentityHashMap$IdentityHashMapIterator.nextIndex() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 414, OSR_BCI: -1 :: virtual jint java.util.IdentityHashMap$IdentityHashMapIterator.nextIndex() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getValue() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 77, OSR_BCI: -1 :: static jint java.util.IdentityHashMap.nextKeyIndex(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableSet.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$IdentityHashMapIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$IdentityHashMapIterator.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$KeyIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$KeyIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.keySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeConverterFactory.canAutoConvert(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.TypeConverterFactory.applyConverters(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.TypeConverterFactory.applyConverters(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isMethodInvocationConvertible(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isMethodInvocationConvertible(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.containsKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.containsKey(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkerServicesImpl.asType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkerServicesImpl.asType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.Bootstrap$2.asType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isWrapperType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.MethodTypeForm.primitiveParameterCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.Enum.ordinal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodType.canConvertParameters(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isGetter() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isOptimistic(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isMethodInvocationConvertible(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.Guards.getTestType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.replaceMethodsOrThis(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LI.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LIL.make(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LIL.make(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_LIL.<init>(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_LILL.<init>(jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LIL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LILL.make(jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LILL.make(jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_LIL3.<init>(jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_LIL3.<init>(jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.speciesData_LLLL() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.profile(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$2.apply(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$2.apply(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleImpl$CountingWrapper.<init>(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L4.make(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L4.make(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.addSuccessor(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.addSuccessor(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 71, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitAstoreInsn(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitJumpInsn(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitJumpInsn(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Label.getFirst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.put(jobject, jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.addReference(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.addSuccessor(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.internal.org.objectweb.asm.Frame.merge(jobject, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.internal.org.objectweb.asm.Frame.merge(jobject, jint, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Frame.merge(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.internal.org.objectweb.asm.Frame.merge(jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrameTypes(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrameTypes(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrame() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrame() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.concurrent.atomic.AtomicReference.compareAndSet(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Property.setBuiltinSwitchPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 260, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Property.setBuiltinSwitchPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findProperty(jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LI.copyWith(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: static jboolean java.lang.ref.Reference.tryHandlePending(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: static jboolean java.lang.ref.Reference.tryHandlePending(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject sun.invoke.util.BytecodeDescriptor.unparse(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaFormEditor$Transform.packedBytes(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentType(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 372, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 372, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getPrototype(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandles.filterReturnValueChecks(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: static jobject sun.invoke.util.BytecodeDescriptor.unparse(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makePairwiseConvertByEditor(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.valueConversion(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.MethodHandles$Lookup.fixmods(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findProperty(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.asNormalOriginal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 3226, OSR_BCI: -1 :: virtual jbyte java.lang.invoke.MemberName.getReferenceKind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.StructureLoader.isSingleFieldStructure(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.addProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.addProperty(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.isGlobal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandleImpl$ArrayAccessor.setElementL(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.FindProperty.isInherited() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isStrictFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ContinuousArrayData.<init>(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getArrayPrototype() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getContext(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.concurrent.atomic.AtomicBoolean.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jchar java.net.URI$Parser.charAt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Character.getType(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.getType(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.getType(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual jobject java.nio.charset.CharsetEncoder.onMalformedInput(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 11, OSR_BCI: -1 :: virtual void java.nio.charset.CharsetEncoder.implOnMalformedInput(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 11, OSR_BCI: -1 :: virtual jobject java.nio.charset.CharsetEncoder.onUnmappableCharacter(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 11, OSR_BCI: -1 :: virtual void java.nio.charset.CharsetEncoder.implOnUnmappableCharacter(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jint sun.nio.cs.UTF_8$Decoder.decode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jint sun.nio.cs.UTF_8$Decoder.decode(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Namespace.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.info(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.info(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.parser.Scanner.charAt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.parser.Scanner.charAt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.TokenStream.isFull() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.reset(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.reset(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Scanner.atEOF() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Scanner.atEOF() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.skip(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.skip(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.isEOL(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.isEOL(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Lexer.isJSEOL(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.skipComments() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 267, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.add(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 325, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.add(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 325, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.add(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.parser.Token.toDesc(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.parser.Token.toDesc(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.TokenStream.put(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.TokenStream.put(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 313, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenStream.next(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 117, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.skipEOL(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.isWhitespace(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Lexer.isJSWhitespace(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5932, OSR_BCI: 59 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.skipComments() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.skipWhitespace(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.skipWhitespace(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 119, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.skipComments() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 329, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.add(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 330, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.add(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.lexify() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenType.getLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierStart(jchar) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierPart(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierPart(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierPart(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isJavaIdentifierPart(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isJavaIdentifierPart(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.TokenLookup.lookupOperator(jchar, jchar, jchar, jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.TokenLookup.lookupOperator(jchar, jchar, jchar, jchar) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isJavaIdentifierStart(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isJavaIdentifierStart(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.scanIdentifierOrKeyword() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.scanIdentifierOrKeyword() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.Lexer.scanIdentifier() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.Lexer.scanIdentifier() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.TokenLookup.lookupKeyword(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.TokenLookup.lookupKeyword(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.canStartLiteral(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.canStartLiteral(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.TokenType.startsWith(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.scanString(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer$State.<init>(jint, jint, jint, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner$State.<init>(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner$State.setLimit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.saveState() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 14, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.TokenLookup.lookupKeyword(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 331, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.Lexer.scanIdentifier() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2449, OSR_BCI: 80 :: virtual jint jdk.nashorn.internal.parser.Lexer.scanIdentifier() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2449, OSR_BCI: 80 :: virtual jint jdk.nashorn.internal.parser.Lexer.scanIdentifier() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 257, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Lexer.convertDigit(jchar, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 257, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Lexer.convertDigit(jchar, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2737, OSR_BCI: 80 :: virtual jint jdk.nashorn.internal.parser.Lexer.scanIdentifier() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 365, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.Lexer.scanIdentifier() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenStream.last() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.TokenType.getValues() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.nextOrEOL() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.nextOrEOL() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.nextToken() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.nextToken() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.parser.AbstractParser.getToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.parser.AbstractParser.getToken(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.parser.TokenStream.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenStream.index(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.Token.descType(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.Token.descType(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Token.descPosition(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Token.descLength(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 271, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Token.descLength(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Source.getLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextBaseNode.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.push(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 20, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 20, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.<init>(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.IdentNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.IdentNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Expression.<init>(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getValue() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.getValueOf(jlong, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.getValueOf(jlong, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source.data() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source$URLData.array() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source$URLData.array() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 266, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Node.<init>(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 266, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Node.<init>(jlong, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.IdentNode.<init>(jobject, jobject, jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.IdentNode.<init>(jobject, jobject, jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Expression.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.statement(jboolean, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.statement(jboolean, jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.leftHandSideExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.leftHandSideExpression() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.primaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.primaryExpression() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getIdent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getIdent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.AbstractParser.isNonStrictModeIdent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.expectValue(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.valueOfIdent(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.valueOfIdent(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.createIdentNode(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.createIdentNode(jlong, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putIfAbsent(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putIfAbsent(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.assignmentExpression(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 262, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 262, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getLiteral() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$StringLiteralNode.<init>(jlong, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.parser.Token.recast(jlong, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.TokenType.isOperator(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.HashSet.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.Enum.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Statement.<init>(jint, jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.appendStatement(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.endOfLine() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.endOfLine() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.TokenStream.commit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Parser.useBlockScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.expressionStatement() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Parser.isArguments(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Parser.isArguments(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 166, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContext.appendStatementToCurrentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 166, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContext.appendStatementToCurrentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextBaseNode.appendStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.variableStatement(jobject, jboolean, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.verifyStrictIdent(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.verifyStrictIdent(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayDeque.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayDeque.push(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayDeque.addFirst(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayDeque.addFirst(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.leftHandSideExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.leftHandSideExpression() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 8, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.primaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$PrimitiveLiteralNode.<init>(jlong, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$PrimitiveLiteralNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.removeFirst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isDeclaredHere() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jint, jlong, jint, jint, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isInitializedHere() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 167, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContext.appendStatementToCurrentNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.createIdentNode(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.createIdentNode(jlong, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.AbstractParser.expect(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.AbstractParser.expect(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.AbstractParser.expectDontAdvance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 475, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.createParserContextFunctionNode(jobject, jlong, jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Namespace.uniqueName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Namespace.uniqueName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextFunctionNode.<init>(jlong, jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.ParserContextBaseNode.setFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.ParserContextBaseNode.setFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.newBlock() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.ParserContextFunctionNode.isProgram() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.argumentList() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 267, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.verifyAssignment(jlong, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.BinaryNode.isLogical(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.BinaryNode.isLogical(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BinaryNode.<init>(jlong, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Expression.<init>(jlong, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.Parser.optimizeList(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.Parser.optimizeList(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 13, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.detectSpecialFunction(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.CallNode.<init>(jint, jlong, jint, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.CallNode.<init>(jint, jlong, jint, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContextExpression.<init>(jlong, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.pop() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 259, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.pollFirst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 259, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.pollFirst() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 269, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.ParserContextBaseNode.getFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.HashSet.<init>(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 474, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.createFunctionNode(jobject, jlong, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.typeFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.typeFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.ir.Node.getToken() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 481, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnumConstantsShared() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.RegularEnumSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.RegularEnumSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.RegularEnumSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.EnumSet.typeCheck(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.getFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.getFlag(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setIsInitializedHere() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setIsInitializedHere() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.functionExpression(jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 11, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.createIdentNode(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.formalParameterList(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.trimToSize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.trimToSize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 99, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.getCurrentFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 99, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.getCurrentFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.hideDefaultName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.functionBody(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.ParserContextFunctionNode.getId() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.sourceElements(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 382, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 18, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.valueOfIdent(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.getLastStatement() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.getDirective(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.EnumSet.getUniverse(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.printAST(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 386, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setIsInitializedHere() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 100, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.ParserContext.getCurrentFunction() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Namespace.uniqueName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Namespace.uniqueName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.statement() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 36, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1214, OSR_BCI: 151 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 10, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.leftHandSideExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 10, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.leftHandSideExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.restoreBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jlong, jint, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jlong, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jlong, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Statement.hasTerminalFlags() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.addFunctionDeclarations(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextFunctionNode.setLastToken(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.FunctionNode.<init>(jobject, jint, jlong, jint, jlong, jlong, jobject, jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.util.EnumSet.of(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.Enum.getDeclaringClass() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.util.EnumSet.noneOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject java.util.EnumSet.noneOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.RegularEnumSet.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.EnumSet.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getIdentifierName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.AccessNode.<init>(jlong, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BaseNode.<init>(jlong, jint, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 275, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 275, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 383, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isPropertyName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.getKeyName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getPropertyName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1036, OSR_BCI: 13 :: virtual void jdk.nashorn.internal.parser.Parser.sourceElements(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 257, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Node.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 257, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Node.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContext.prependStatementToCurrentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextBaseNode.prependStatement(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.add(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.add(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jlong, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.info(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.log(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.log(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.NashornLoader.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 284, OSR_BCI: -1 :: static jint java.util.WeakHashMap.indexFor(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonList.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.Collections.singletonIterator(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual void java.util.Collections$1.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.TreeSet.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.TreeSet.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jobject sun.misc.SharedSecrets.getJavaLangAccess() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.uniqueName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptEnvironment.isTimingEnabled() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LexicalContextNode$Acceptor.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LexicalContextNode$Acceptor.accept(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.push(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContextExpression.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.accept(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterFunctionNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.accept(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonList.get(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBinaryNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIdentNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants$BinaryNodeConstantEvaluator.reduceTwoLiterals() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.AssertsEnabled.assertsEnabled() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterVarNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ExpressionStatement.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ExpressionStatement.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterExpressionStatement(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterCallNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setFunction(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setArgs(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setArgs(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setEvalArgs(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setEvalArgs(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ExpressionStatement.setExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setLHS(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setRHS(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FoldConstants$BinaryNodeConstantEvaluator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 445, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FoldConstants$ConstantEvaluator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants$BinaryNodeConstantEvaluator.eval() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlag(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlag(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setBody(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setBody(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.leaveFunctionNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setState(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setState(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlag(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 269, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlag(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 272, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlags(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 272, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlags(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveVarNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterLiteralNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveLiteralNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setStatements(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setStatements(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlags(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlags(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 273, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setBody(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setBase(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterPropertyNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leavePropertyNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.logging.DebugLogger.quote(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.logging.DebugLogger.quote(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.fine(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.fine(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase.apply(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase.apply(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase.begin(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.hasState(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayDeque.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockLexicalContext.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockLexicalContext.push(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 8, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.tokenType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.tokenType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterADD(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 263, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.tokenType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveBinaryNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 399, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.replaceInLexicalContext(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 399, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.replaceInLexicalContext(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 200, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jobject, jint, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 200, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.<init>(jobject, jint, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 409, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Node.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 389, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.replace(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 389, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.replace(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.peek() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.peek() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayDeque.peekFirst() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlags(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 125, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.needsScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 125, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.needsScope() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockLexicalContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockLexicalContext.pop(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.addStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.addStatement(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.appendStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.appendStatement(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Lower.markerFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setIsFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveExpressionStatement(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getCurrentFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getCurrentFunction() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isProgram() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isProgram() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower$1.popStatements() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 273, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockLexicalContext.popStatements() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 125, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.needsScope() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 391, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.replace(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.getFlag(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIfNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIfNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setTest(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 513, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isFunction() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.checkEval(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.checkEval(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getArgs() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getArgs() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 404, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.replaceInLexicalContext(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.appendStatement(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 10, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setStatements(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower$1.afterSetStatements(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getStatements() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.ArrayList$ListItr.<init>(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList$1.hasPrevious() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableList$1.hasPrevious() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$ListItr.hasPrevious() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$ListItr.hasPrevious() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableList$1.previous() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$ListItr.previous() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$ListItr.previous() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setIsTerminal(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.ArrayDeque.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.ArrayDeque.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setPass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Statement.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IfNode.isTerminal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.getFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.isTerminal() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jboolean java.util.ArrayDeque.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 11, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.ExpressionStatement.<init>(jint, jlong, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.checkEval(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterDefault(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ObjectNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterObjectNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase.end(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase.end(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.unindent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Timing.accumulateTime(jobject, jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.visitor.NodeVisitor.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.visitor.NodeVisitor.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.access$100(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.transformFunction(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.concurrent.atomic.AtomicInteger.getAndIncrement() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.RegularEnumSet$EnumSetIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.RegularEnumSet$EnumSetIterator.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.RegularEnumSet$EnumSetIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.RegularEnumSet$EnumSetIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.RegularEnumSet$EnumSetIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.RegularEnumSet$EnumSetIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Long.numberOfTrailingZeros(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Long.numberOfTrailingZeros(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.field(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.ClassEmitter$Flag.getValue(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.ClassEmitter$Flag.getValue(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.RegularEnumSet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.EnumSet.of(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 409, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.field(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 409, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.field(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 320, OSR_BCI: -1 :: virtual void java.util.RegularEnumSet$EnumSetIterator.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 320, OSR_BCI: -1 :: static jlong java.util.RegularEnumSet.access$000(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 388, OSR_BCI: -1 :: virtual jobject java.util.RegularEnumSet$EnumSetIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.typeDescriptor(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 8, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Node.accept(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBinaryNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$4$1.leaveLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$4$1.leaveLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$4$1.leaveLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.initialize(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveFunctionNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setFail(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveFunctionNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.WeighNodes.enterFunctionNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveVarNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.WeighNodes.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.WeighNodes.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.binaryNodeWeight(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveADD(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leavePropertyNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 104, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.FunctionNode.<init>(jobject, jlong, jobject, jint, jobject, jobject, jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 104, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.FunctionNode.<init>(jobject, jlong, jobject, jint, jobject, jobject, jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 481, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContextExpression.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Splitter$2.enterFunctionNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.findNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.findNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext$NodeIterator.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext$NodeIterator.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$NodeIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getParentFunction(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext$NodeIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext$NodeIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext$NodeIterator.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext$NodeIterator.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 640, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.get(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Splitter.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Splitter.split(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.finest(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.codegen.WeighNodes.weigh(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.codegen.WeighNodes.weigh(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.WeighNodes.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeSet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$KeySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.keyIterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.getFirstEntry() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.TreeMap$KeyIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompileUnit.addWeight(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Splitter.directChildren(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Splitter$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.contains(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.ArrayList.indexOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.ArrayList.indexOf(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Node.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Node.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Splitter$1.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.findUnit(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.navigableKeySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.navigableKeySet() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.TreeMap$PrivateEntryIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.TreeMap$PrivateEntryIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setCompileUnit(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIfNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIfNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.SplitIntoFunctions.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.SplitIntoFunctions$FunctionState.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 213, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.SplitIntoFunctions.appendStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.getCurrentFunctionState() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.SplitIntoFunctions.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.SplitIntoFunctions.inSplitNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.leaveBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getParentBlock() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getParentBlock() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockLexicalContext.prependStatements(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList.addAll(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.leaveFunctionNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext.isFunctionBody() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext.isFunctionBody() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions$1.afterSetStatements(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ProgramPoints.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.IntDeque.push(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Node.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Node.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Long.hashCode(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ProgramPoints.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ProgramPoints.enterIdentNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isInternal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isInternal() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveIdentNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.setProgramPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.setProgramPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.ProgramPoints.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 418, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.IntDeque.getAndIncrement() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 119, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BinaryNode.<init>(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setProgramPoint(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveBinaryNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.canBeOptimistic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.canBeOptimistic() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Node.isTokenType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Node.isTokenType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setProgramPoint(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 119, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.CallNode.<init>(jobject, jobject, jobject, jint, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 119, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.CallNode.<init>(jobject, jobject, jobject, jint, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 517, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.setProgramPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ProgramPoints.enterVarNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 9, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 9, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveCallNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setProgramPoint(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getWidestOperationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getWidestOperationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$BooleanLiteralNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.AccessNode.<init>(jobject, jobject, jobject, jboolean, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BaseNode.<init>(jobject, jobject, jboolean, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 406, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.IntDeque.pop() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getMostOptimisticType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getMostOptimisticType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.Collections$UnmodifiableCollection.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getMostPessimisticType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 132, OSR_BCI: -1 :: virtual jboolean java.util.HashMap.containsKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setProgramPoint(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getMostOptimisticType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getTypeUncached() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getTypeUncached() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CompilationPhase$6$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isSplit() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.start(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.start(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getBlocks() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getBlocks() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext$1.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setNeedsSlot(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setNeedsSlot(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.initCompileConstant(jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.defineSymbol(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.defineSymbol(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.findSymbol(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.findSymbol(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getBlocks(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getAncestorBlocks(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getAncestorBlocks(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext$1.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getExistingSymbol(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.shouldTrace() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.shouldTrace() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.putSymbol(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isVarArg() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.needsArguments() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.needsArguments() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.createSymbol(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Symbol.<init>(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getAncestorBlocks(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols$1.enterDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols$1.enterDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getFunctionBody(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols$1.leaveVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols$1.leaveVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isBlockScoped() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 7, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getBlocks() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isFunctionDeclaration() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isDeclared() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.setName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.VarNode.getSymbolFlags() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isLet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isConst() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.AssignSymbols.access$100(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isFunctionDeclaration() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedEntryIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedEntryIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedEntryIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.start(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getCurrentBlock() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterFunctionNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Block.clearSymbols() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.isLocal(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getDefiningFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.allVarsInScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getParameters() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 310, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.defineSymbol(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 22, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.defineFunctionSelfSymbol(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 258, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 258, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isScope() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext.setFlag(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext.setFlag(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isBlockScoped() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isBlockScoped() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isLet() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveIdentNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.nameIsUsed(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.nameIsUsed(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isConst() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 396, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 396, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesSymbol(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.end(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.end(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.end(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.end(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 268, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isFunctionSelf() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 317, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.maybeForceScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.symbolNeedsToBeScope(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isThis() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isThis() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isInternal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isInternal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getAllNodes() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveBinaryNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.newNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.newNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$Entry.<init>(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.linkNodeLast(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.afterNodeInsertion(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.isUnparsedFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.needsParentScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isNamedFunctionExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 219, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isGlobal() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 145, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesScopeSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 145, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesScopeSymbol(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext.setBlockNeedsScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext.setBlockNeedsScope(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterVarNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.defineVarIdent(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.defineVarIdent(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isAnonymousFunctionDeclaration() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isAnonymous() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.initFunctionWideVariables(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.initParameters(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setIsScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getDefiningBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setParameters(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setThisProperties(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.markProgramBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isParam() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isParam() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getFunctions() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getOutermostFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.applyTopFlags(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.finalizeParameters(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.createSyntheticInitializers(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.usesSelfSymbol() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.AssignSymbols.removeUnusedSlots(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.needsCallee() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.needsCallee() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.hasScopeBlock() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 157, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContext.setBlockNeedsScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveASSIGN(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 435, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.nameIsUsed(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 139, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 139, OSR_BCI: -1 :: virtual void java.util.ArrayList.<init>(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 18, OSR_BCI: -1 :: virtual void java.util.HashSet.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 18, OSR_BCI: -1 :: virtual void java.util.HashSet.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths$1.enterDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths$1.enterDefault(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.FindScopeDepths.findBodyBlock(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.FindScopeDepths.findBodyBlock(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.FindScopeDepths.findInternalDepth(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.FindScopeDepths.findInternalDepth(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.FindScopeDepths.definedInBlock(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.FindScopeDepths.definedInBlock(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.FunctionNode.getId() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.FunctionNode.getId() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.FindScopeDepths.isDynamicScopeBoundary(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 66, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.needsDynamicScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 98, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.hasEval() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.isDynamicScopeBoundary(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FindScopeDepths.addInternalSymbols(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap.remove(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap.removeNode(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap.removeNode(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.isStrict() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.parser.Token.withDelimiter(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.smallMap(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.HashMap.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 470, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getContextTrusted() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 130, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FindScopeDepths.addExternalSymbol(jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FindScopeDepths.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FindScopeDepths.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FindScopeDepths.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeRemoval(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Context.useDualFields() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.ObjectClassGenerator.getPaddedFieldCount(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.setParent(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.BitSet.initWords(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterFunctionNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 52, OSR_BCI: -1 :: virtual void java.util.BitSet.set(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 52, OSR_BCI: -1 :: virtual void java.util.BitSet.set(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.tagNeverOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.tagNeverOptimistic(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterBinaryNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isAssignment() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isAssignment() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveIdentNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isBytecodeLocal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isBytecodeLocal() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.hasSlot() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.hasSlot() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveDefault(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeEvaluator.getOptimisticType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeEvaluator.getEvaluatedType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterVarNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterExpressionStatement(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterCallNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isSelfModifying() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isSelfModifying() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveFunctionNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 209, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveOptimistic(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 210, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveOptimistic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.Integer.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.Integer.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jint java.lang.Integer.hashCode(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isSelfModifying() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getMostOptimisticType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterPropertyNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getLocalVariableTypeOrNull(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setType(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.symbolIsUsed(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getLocalVariableType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.symbolIsUsed(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isBoolean() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isBoolean() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isInteger() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isInteger() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isLong() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isLong() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isNumber() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Symbol.setHasSlotFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.Symbol.setHasSlotFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setFlag(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedValueIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedValueIterator.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.cloneMap(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.AbstractMap.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterFunctionNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterVarNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpression(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.ArrayDeque.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.ArrayDeque.size() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.onAssignment(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.onAssignment(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.toLvarType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.toLvarType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 269, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setIdentifierLvarType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.jumpToCatchBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.pushExpressionType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.pushExpressionType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 84, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 84, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.getType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpressionOnEmptyStack(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterIdentNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 389, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 389, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isLogical() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterLiteralNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.joinOnLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.joinOnLabel(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.remove(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.remove(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setOperands(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setOperands(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.BinaryNode.isString(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 94, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.widest(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 94, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.widest(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 385, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 385, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isArray() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 388, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isObject() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 388, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isObject() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterCallNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpressions(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpressions(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 258, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.joinOnLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 258, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.joinOnLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.BinaryNode.decideType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.BinaryNode.booleanToInt(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.BinaryNode.undefinedToNumber(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterAccessNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BaseNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BaseNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 61, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.widestReturnType(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 391, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.assertTypeStackIsEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 391, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.assertTypeStackIsEmpty() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 260, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isUnknown() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 260, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isUnknown() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getSymbols() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.values() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap.values() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.LinkedHashMap$LinkedValues.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedValues.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap$LinkedValueIterator.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Symbol.slotCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Symbol.slotCount() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.enterDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.enterDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 265, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.joinOnLabel(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.ReturnNode.<init>(jint, jlong, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ReturnNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ReturnNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterReturnNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.doesNotContinueSequentially() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBreakable(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap.closeDeletion(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveBinaryNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isComparison() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isComparison() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isOptimisticUndecidedType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.decideType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 76, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.narrowest(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 76, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.narrowest(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.narrowerThan(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableCollection.toArray() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveFunctionNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 261, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.onAssignment(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterReturnNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterReturnNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveReturnNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveReturnNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setReturnType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.entrySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$EntrySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$EntryIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$EntryIterator.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createConversion(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createConversion(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2064, OSR_BCI: 59 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2064, OSR_BCI: 59 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 76, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.narrowest(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap$Node.getKey() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.HashMap$Node.getValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.visitParameters(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Compiler$CompilationPhases.isRestOfCompilation() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.IntDeque.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Call.className() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Call.descriptor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$Call.name() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 425, OSR_BCI: -1 :: virtual void java.util.BitSet.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.fieldType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.fieldType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.pushType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.pushType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.push(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.typeFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.typeFor(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 274, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 274, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.pop() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getClassName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 9, OSR_BCI: -1 :: virtual jobject java.util.HashMap.removeNode(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.isWithBoundary(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.inDynamicContext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual void java.util.TreeMap$PrivateEntryIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.EnumSet.of(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter.method(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter.methodVisitor(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.staticField(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.staticField(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$FieldAccess.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.begin() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.newStack() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.load(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.load(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 282, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.markLocalLoad(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invoke(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invoke(jint, jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invoke(jint, jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.fixParamStack(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 389, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Type.getReturnType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.doesNotContinueSequentially() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.end() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.endMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.endMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.remove(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.net.URL.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.security.CodeSource.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.security.CodeSource.getCertificates() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.NashornLoader.checkPackageAccess(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.checkPackageAccess(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.checkPackageAccess(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.reflect.UnsafeStaticFieldAccessorImpl.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.reflect.UnsafeFieldAccessorImpl.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.reflect.FieldAccessorImpl.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.reflect.Field.set(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void sun.reflect.MagicAccessorImpl.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.access$200(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.setStates(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.getBest(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.pickFunction(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: static jobject java.nio.charset.Charset.defaultCharset() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual void sun.nio.cs.StreamEncoder.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual void java.io.BufferedWriter.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.<init>(jobject, jobject, jobject, jboolean, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.AbstractParser.<init>(jobject, jobject, jboolean, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContext.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.parse(jobject, jint, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.TokenStream.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.<init>(jobject, jint, jint, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source.getContent() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.<init>(jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.program(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 292, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.sourceElements(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 287, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 287, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 21, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.leftHandSideExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setIsDeclaredHere() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LiteralNode.newInstance(jlong, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$BooleanLiteralNode.<init>(jlong, jint, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$BooleanLiteralNode.<init>(jlong, jint, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getScriptFunctionData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getScriptFunctionData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Parser.skipFunctionBody(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser$ParserState.createLexer(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.restoreState(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Scanner.restoreState(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 76, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getFunctionFlag(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.CompiledFunction.isVarArgsType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$ContextCodeInstaller.getOwner() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$ContextCodeInstaller.getOwner() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isStrict() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Compiler.<init>(jobject, jobject, jobject, jobject, jobject, jboolean, jboolean, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ConstantData.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompileUnit.createCompileUnitSet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.firstCompileUnitName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Compiler.safeSourceName(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.String.lastIndexOf(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.NameCodec.encode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.NameCodec.encode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.compile(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.compile(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$1.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1340, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setIsFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setIsFunction() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$3.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ApplySpecialization.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ApplySpecialization.initLogger(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ApplySpecialization.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.objects.Global.isBuiltinFunctionPrototypeApply() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 21, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.objects.Global.isBuiltinFunctionProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ApplySpecialization$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ApplySpecialization$1.enterCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.ApplySpecialization.access$100(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.ApplySpecialization.isApply(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$4.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.addCompileUnit(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.nextCompileUnitName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ClassEmitter.pathName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.defineCommonStatics(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompileUnit.<init>(jobject, jobject, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.begin() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CompileUnit.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CompileUnit.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilationPhase$4$1.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jint java.util.ArrayList.indexOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.SplitIntoFunctions.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$5.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ProgramPoints.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 405, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getWidestOperationType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 406, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getWidestOperationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$6.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilationPhase$6$1.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.initLogger(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 77, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 319, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.defineVarIdent(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getScriptFunctionData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getScriptFunctionData(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 158, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesScopeSymbol(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 394, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 394, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.PropertyMap.getFreeFieldSlot() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.PropertyMap.getFreeFieldSlot() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.SpillProperty.<init>(jobject, jint, jint, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.unboxedFieldType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.unboxedFieldType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.TypeEvaluator.declareLocalSymbol(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.unboxedFieldType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 285, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 285, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$8.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FindScopeDepths.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FindScopeDepths.initLogger(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$9.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 144, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.TypeEvaluator.getPropertyType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.findProperty(jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$10.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2064, OSR_BCI: 10 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2064, OSR_BCI: 10 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 262, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.onAssignment(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 321, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpressions(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 321, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpressions(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 505, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 505, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ReturnNode.setExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$13.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompileUnit.setUsed() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Source.isEvalCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isRestOf() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.push(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOf(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getSymbolBoundaryCopy() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.BitSet.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.BitSet.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.BitSet.trimToSize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getLocalVariableTypesCopy() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.clone() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.MethodEmitter.isReachable() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.MethodEmitter.isReachable() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setFirstSlot(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setFirstSlot(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.defineBlockLocalVariable(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.defineLocalVariable(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.defineLocalVariable(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.BitSet.clear(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.BitSet.clear(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static void java.util.BitSet.checkRange(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static void java.util.BitSet.checkRange(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.defineBlockLocalVariable(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.defineBlockLocalVariable(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.label(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.breakLabel(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.breakLabel(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.joinTo(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.joinFrom(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.joinFrom(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug_label(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label.getLabel() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 344, OSR_BCI: -1 :: virtual jint java.util.BitSet.nextSetBit(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.set(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.set(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.initializeInternalFunctionParameter(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.initializeInternalFunctionOrSplitParameter(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.initializeMethodParameter(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.initializeMethodParameter(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter$LocalVariableDef.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.invalidateLocalLoadsOnStack(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.invalidateLocalLoadsOnStack(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isCategory2() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getCompilerConstantSymbol(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodArguments(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodArguments(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodReturnType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.getCompilerConstantType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Symbol.getSlot(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Symbol.getSlot(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.onLocalStore(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.onLocalStore(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.BitSet.previousSetBit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Long.numberOfLeadingZeros(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 309, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isVar() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MapTuple.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MapTuple.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.setFieldIndex(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 29, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 29, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList.checkForComodification() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$SubList$1.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList$1.checkForComodification() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.getPrefixName(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.getFieldName(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.field(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.MethodEmitter.isThisSlot(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilerConstants.specialCallNoLookup(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompilerConstants$1.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.returnVoid() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ArrayType.load(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$1.invoke(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invokespecial(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodArguments(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.end() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter.toByteArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.DumpBytecode.dumpBytecode(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.NashornLoader.getPermissions(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.defineClass(jobject, jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.addClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.useDualFields() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.AccessorProperty.access$000() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.setter(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isSetter() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 896, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 896, OSR_BCI: -1 :: virtual void java.lang.String.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 316, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandles$Lookup.findSetter(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.MapCreator.getPropertyFlags(jobject, jboolean, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Symbol.getFieldIndex() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.<init>(jobject, jint, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.<init>(jobject, jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isParameter() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.forStructureClass(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.peekType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.peekType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.peek() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.peek(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.peek(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.ConstantData.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.ldc(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.ldc(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invokestatic(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadCompilerConstant(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadCompilerConstant(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadCompilerConstant(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadCompilerConstant(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.useOptimisticTypes() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.useOptimisticTypes() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.inSplitNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.inSplitNode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.IntDeque.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.IntDeque.isEmpty() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.IntDeque.peek() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.IntDeque.peek() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.storeHidden(jobject, jint, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.explicitStore(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.explicitStore(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.ObjectType.store(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.ObjectType.store(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$2.invoke(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.storeCompilerConstant(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.generic(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.generic(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.skipFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.newFunctionObject(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadConstants() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getStatic(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isEquivalentTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isEquivalentTo(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getCallSiteFlags() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getCallSiteFlags() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.FunctionNode.getCallSiteFlags() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.FunctionNode.getCallSiteFlags() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isFastScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isFastScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.inDynamicScope() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.convert(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.convert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.convert(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.getTopLocalLoad() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterVarNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.enterStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.enterStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.lineNumber(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.lineNumber(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.lineNumber(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.lineNumber(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLineNumber(jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 261, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpression(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.isCurrentDiscard(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.pop(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.pop(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.within(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.within(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getScopeCallSiteFlags(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getScopeCallSiteFlags(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.storeFastScopeVar(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadFastScopeProto(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadFastScopeProto(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getScopeProtoDepth(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getScopeProtoDepth(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getExternalSymbolDepth(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.FindScopeDepths.findScopesToStart(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.FindScopeDepths.findScopesToStart(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.dynamicSet(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.dynSetOperation(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newInvokeDynamicItem(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newInvokeDynamicItem(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpressionUnbounded(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpressionUnbounded(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpression(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpression(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1.<init>(jobject, jobject, jobject, jboolean, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitInvokeDynamicInsn(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitInvokeDynamicInsn(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Handle.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newHandle(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newHandleItem(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newHandleItem(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.hasSlotFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.hasSlotFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.checkTemporalDeadZone(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isDead() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.MethodEmitter.getStackSize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.storeStack(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.storeStack(jint, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodDescriptor(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 260, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.store(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 260, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.store(jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 95, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.explicitStore(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.popDiscardIfCurrent(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.popDiscardIfCurrent(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 229, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadFastScopeProto(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getScopeProtoDepth(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getScopeProtoDepth(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newInvokeDynamicItem(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterExpressionStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterExpressionStatement(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 191, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.lineNumber(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadAndDiscard(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadAndDiscard(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpression(jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$700(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.checkAssignTarget(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.checkAssignTarget(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$800(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadASSIGN(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.store() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.store() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$8200(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.maybeNew(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.maybeNew(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.access$8300(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.isOptimistic(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.access$6300(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isContinuationEntryPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isContinuationEntryPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.access$8400(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$400(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 260, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadIdent(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 260, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadIdent(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Expression.getWidestOperationType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.undefinedToNumber(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.notNarrowerThan(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$LoadScopeVar.loadStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$LoadScopeVar.loadStack() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$LoadFastScopeVar.getProto() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$LoadFastScopeVar.getProto() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$100(jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$LoadScopeVar.consumeStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$LoadScopeVar.consumeStack() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isCompileTimePropertyName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.isCompileTimePropertyName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.dynamicGet(jobject, jint, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.dynamicGet(jobject, jint, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator.nonOptimisticFlags(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicGet(jobject, jobject, jint, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicGet(jobject, jobject, jint, jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 257, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.getProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 257, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.getProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.MethodEmitter.dynGetOperation(jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 342, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newHandleItem(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 12, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.ldc(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.ldc(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.getProgramPoint() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 89, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 89, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.storeNonDiscard() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.epilogue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.prologue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store$1.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$1.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$1.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$14.evaluate() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpressionAsType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpressionAsType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.access$2000(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.loadCallNode(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2.<init>(jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$2.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator.access$5700(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2$2.loadStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$500(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 202, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadExpressionAsObject(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 262, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadIdent(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadUndefined(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.loadUndefined(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator.access$5000(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 393, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.loadArgs(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 393, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.loadArgs(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterADD(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadADD(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$13.loadStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadBinaryOperands(jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator.noToPrimitiveConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isJSPrimitive() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$2100(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 263, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadLiteral(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 263, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadLiteral(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$13.consumeStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.add(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.get2() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ObjectType.add(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.dynamicCall(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicCall(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getDynamicSignature(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getDynamicSignature(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$2.enterIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$2.enterIdentNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.storeIdentWithCatchConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.storeIdentWithCatchConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.BooleanType.convert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.types.Type.invokestatic(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 260, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicGet(jobject, jobject, jint, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 43, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getTypesFromStack(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 42, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getTopTypes(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 61, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getLocalLoadsOnStack(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 61, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getLocalLoadsOnStack(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 60, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getLocalLoads(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 61, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.MethodEmitter.getUsedSlotsWithLiveTemporaries() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 73, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.getUsedSlotsWithLiveTemporaries() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 73, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.getUsedSlotsWithLiveTemporaries() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 11, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.storeTemp(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 11, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.defineTemporaryLocalVariable(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 26, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.onLocalStore(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 29, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getLocalVariableTypes() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 61, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getLocalLoadsOnStack(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 30, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.getOptimisticCoercedType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 30, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.getOptimisticCoercedType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.subList(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.subList(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static void java.util.ArrayList.subListRangeCheck(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static void java.util.ArrayList.subListRangeCheck(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList.<init>(jobject, jobject, jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.ArrayList$SubList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.ArrayList$SubList.size() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$SubList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$SubList.listIterator(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList.rangeCheckForAdd(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList$1.<init>(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator.appendType(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.getTypeForSlotDescriptor(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.getTypeForSlotDescriptor(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.AbstractList.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList.removeRange(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList.removeRange(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList$ListItr.set(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.ArrayList$ListItr.set(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.convert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.convert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BaseNode.isIndex() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$1.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store$1.enterBaseNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$1.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$1.loadStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$1.consumeStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator$Store.access$7502(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 30, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getLocalVariableTypes() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label.toString() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 31, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.getOptimisticCoercedType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.getOptimisticFlags(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.Integer.toString(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._try(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._try(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._try(jobject, jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.joinFromTry(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.joinFromTry(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitTryCatchBlock(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getWidestLiveLocals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getWidestLiveLocals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getWidestLiveLocals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getWidestLiveLocals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.Label$Stack.getFirstDeadLocal(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.addUnwarrantedOptimismHandlerLabel(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.addUnwarrantedOptimismHandlerLabel(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$9100(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 253, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.getLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 253, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.getLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.markSymbolBoundariesInLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.markSymbolBoundariesInLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.getUnwarrantedOptimismHandlers() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.markLabelAsOptimisticCatchHandler(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.markAsOptimisticCatchHandler(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 34, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Label$Stack.access$000(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 35, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.cloneWithEmptyStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.Label$Stack.access$100(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 254, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.markAsOptimisticCatchHandler(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 254, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.markAsOptimisticCatchHandler(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.undefineLocalVariables(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.undefineLocalVariables(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.listIterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dup() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 239, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dup(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 239, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dup(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.dup(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.getKey() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FieldObjectCreator.<init>(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ObjectCreator.<init>(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FieldObjectCreator.countFields() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FieldObjectCreator.findClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 32, OSR_BCI: -1 :: static jobject java.lang.Class.forName(jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 425, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.dup(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._return() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 58, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._return(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 58, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._return(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.types.Type.areEquivalent(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.ObjectType._return(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.preDefineClass(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.checkCerts(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FieldObjectCreator.makeObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FieldObjectCreator.makeMap() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ObjectCreator.newMapCreator(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$7.getValueType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadConstant(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 206, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadConstant(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.MethodEmitter.defineTemporaryLocalVariable(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.storeHidden(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2075, OSR_BCI: 10 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.markSymbolBoundariesInLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2075, OSR_BCI: 10 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.markSymbolBoundariesInLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.MapTuple.isPrimitive() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 243, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dup(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FieldObjectCreator.putField(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ObjectCreator.loadTuple(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ObjectCreator.loadTuple(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.peekType(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invalidateSpecialName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.putField(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getCurrentBlockLabelNode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getCurrentBlockLabelNode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.closeLocalVariable(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.closeLocalVariable(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.endLocalValueDef(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.endLocalValueDef(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLocalVariable(jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.Collections$ReverseComparator.compare(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.Collections$ReverseComparator.compare(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.Collections$ReverseComparator.compare(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.joinFrom(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.mergeVariableTypes(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.Character.isUpperCase(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.Character.isUpperCase(jchar) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.Character.isUpperCase(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator.countSymbolsInLvarTypeDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator.countSymbolsInLvarTypeDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 23, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newMethod(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.undefineLocalVariables(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._catch(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.beginCatchBlock() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ArrayType.getElementType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ArrayType.getElementType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.commonPrefix(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.commonPrefix(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicArrayPopulatorCall(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicArrayPopulatorCall(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.BitSet.recalculateWordsInUse() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter._goto(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.jump(jint, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.jump(jint, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.generateUnwarrantedOptimismExceptionHandlers(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.generateUnwarrantedOptimismExceptionHandlers(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.Class.forName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 78, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.athrow() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 16, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMaxs(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 16, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMaxs(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Frame.init(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.getMergedType(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.getMergedType(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 45, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.getCommonSuperClass(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrame() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrameTypes(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrameTypes(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 274, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlags(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.generateScopeCalls() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.getScopeCalls() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.Collections.unmodifiableCollection(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 11, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.beginMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 11, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.beginMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.defineCommonUtilities() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 34, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.arrayload() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.load(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.load(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 42, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 42, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ClassEmitter.getArrayMethodName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants.descriptor() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ArrayType.aload(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ArrayType.aload(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.checkcast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.checkcast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$3.invoke(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 30, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invokevirtual(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 30, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.invokevirtual(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Compiler.addClass(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CompileUnit.increaseEmitCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$14.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$ContextCodeInstaller.install(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptLoader.installClass(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.security.SecureClassLoader.defineClass(jobject, jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.security.SecureClassLoader.getProtectionDomain(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 108, OSR_BCI: -1 :: virtual jboolean java.lang.ClassLoader.compareCerts(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jobject java.net.URLStreamHandler.toExternalForm(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$ContextCodeInstaller$1.run() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$ContextCodeInstaller$1.run() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void sun.reflect.UnsafeStaticObjectFieldAccessorImpl.set(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual jobject java.lang.Class.getDeclaredField(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 32, OSR_BCI: -1 :: virtual jobject java.lang.Class.privateGetDeclaredFields(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 35, OSR_BCI: -1 :: static jobject java.lang.Class.searchFields(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 32, OSR_BCI: -1 :: virtual void java.lang.reflect.AccessibleObject.setAccessible(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 32, OSR_BCI: -1 :: static void java.lang.reflect.AccessibleObject.setAccessible0(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.initTransients(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Context$ContextCodeInstaller.isCompatibleWith(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CompileUnit.initializeFunctionsCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setRootClass(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FunctionSignature.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FunctionSignature.<init>(jboolean, jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.FunctionSignature.typeArray(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FunctionSignature.<init>(jboolean, jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FunctionSignature.<init>(jboolean, jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isVariableArity() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.lookup(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.logLookup(jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.getLinkerServices() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle.speciesData_LLLLL() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: virtual void java.lang.invoke.MutableCallSite.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.getValidOptimisticInvocation(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L5.make(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L5.<init>(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.SwitchPoint.hasBeenInvalidated() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction$HandleAndAssumptions.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithTest(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithTestForm(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeBlockInliningWrapper(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleImpl$CountingWrapper.<init>(jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.needsWrappedThis() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.newIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isLexicalBinding() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.create(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.create(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.ScriptFunctionImpl.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 33, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 33, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.NameCodec.decode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor$1.computeValue(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor$1.computeValue(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.support.LinkRequestImpl.<init>(jobject, jobject, jint, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkerServicesImpl.getGuardedInvocation(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.CompositeGuardingDynamicLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkRequestImpl.withoutRuntimeContext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.explicitInstanceOfCheck(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.explicitInstanceOfCheck(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isBound() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual jobject java.lang.Object.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.asTypeSafeReturn(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkerServicesImpl.asTypeLosslessReturn(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isConvertibleWithoutLoss(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isConvertibleWithoutLoss(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.Bootstrap$1.filter(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.linker.LinkerCallSite.relink(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.linker.LinkerCallSite.relink(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.LinkerCallSite.getDebuggingRelink(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.LinkerCallSite.getDebuggingRelink(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedList.addLast(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.getPruneSwitchpoints() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LILL.copyWith(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LILL.copyWith(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.getPruneCatches() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LIL3.make(jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_LIL3.make(jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LIL3.copyWith(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LIL3.copyWith(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 12, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrameTypes(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 13, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrameTypes(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.MutableCallSite.syncAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.MutableCallSite.syncAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.concurrent.atomic.AtomicInteger.lazySet(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.access$300(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.mayRetry() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint sun.invoke.util.ValueConversions.unboxInteger(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint sun.invoke.util.ValueConversions.unboxInteger(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.getCallSiteTarget(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.getCallSiteTarget(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.CompositeTypeBasedGuardingDynamicLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornLinker.getGuardedInvocation(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.CallSiteDescriptorFactory.tokenizeOperators(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.CallSiteDescriptorFactory.tokenizeOperators(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getWiderMap(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.debugReplace(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.SetMethodCreator$SetMethod.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.needsGuard(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.GlobalConstants.isGlobalSetter(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.access$700(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.hasBeenInvalidated() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.Integer.toUnsignedString0(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants.invalidateSwitchPoint(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.GlobalConstants$Access.access$200(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.GlobalConstants$Access.invalidate(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.AccessorProperty.replaceMap(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.SetMethodCreator.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SetMethodCreator.createGuardedInvocation(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SetMethodCreator.createSetMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isStrict(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isDeclaration(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.copy(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L4.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: static void java.lang.Integer.formatUnsignedInt(jint, jint, jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isConvertibleWithoutLoss(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeUtilities.isConvertibleWithoutLoss(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isApplyToCall(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isFastScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.fine(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.GlobalConstants$Access.access$800(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.unboxConstant(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkRequestImpl.getArguments() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.isSpecialization() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunction.needsWrappedThis() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.getSwitchPoints() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 196, OSR_BCI: -1 :: virtual void java.io.File.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 12, OSR_BCI: -1 :: static jboolean sun.misc.Cleaner.remove(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 12, OSR_BCI: -1 :: static jboolean sun.misc.Cleaner.remove(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.Math.max(jlong, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.Math.max(jlong, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: static jobject java.nio.ByteBuffer.allocate(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual void java.nio.HeapByteBuffer.<init>(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 65, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.scanNumber() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.JoinPredecessorExpression.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 129, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.getDefaultValidFunctionName(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.getDefaultFunctionName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 243, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Parser.isValidIdentifier(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 268, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 268, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.expression(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.returnStatement() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.Lexer.valueOf(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.Long.parseLong(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$NumberLiteralNode.<init>(jlong, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$NumberLiteralNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LiteralNode$NumberLiteralNode.numberGetType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 818, OSR_BCI: 176 :: static jlong java.lang.Long.parseLong(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.TokenType.getPrecedence() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 532, OSR_BCI: -1 :: static jlong java.lang.Long.parseLong(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.unaryExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LiteralNode$NullLiteralNode.<init>(jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.getStatement() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.getBlock(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.statementList() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 35, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Parser.checkIdentLValue(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.Parser.incDecExpression(jlong, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.ifStatement() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 22, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.leftHandSideExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 22, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.leftHandSideExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.UnaryNode.<init>(jlong, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 13, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.UnaryNode.<init>(jlong, jint, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 398, OSR_BCI: -1 :: virtual void java.util.ArrayList.trimToSize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.detectSpecialProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextLoopNode.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.joinPredecessorExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.IndexNode.<init>(jlong, jint, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 282, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 282, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.memberExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LoopNode.<init>(jint, jlong, jint, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.forStatement() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.ForNode.<init>(jint, jlong, jint, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BreakableStatement.<init>(jint, jlong, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContextStatement.<init>(jint, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.newExpression() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BlockStatement.<init>(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$6.run() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$6.run() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptLoader.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void java.security.SecureClassLoader.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual void java.security.ProtectionDomain.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void java.util.concurrent.ConcurrentHashMap.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 385, OSR_BCI: -1 :: static jint java.lang.String.lastIndexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterJoinPredecessorExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterJoinPredecessorExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.setExpression(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterTernaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterTernaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveJoinPredecessorExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.leaveTernaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.leaveIfNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterUnaryNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 513, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.setExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 513, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.setExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants.leaveUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.toInt32(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 12, OSR_BCI: -1 :: static jdouble jdk.nashorn.internal.runtime.JSType.toNumber(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 12, OSR_BCI: -1 :: static jdouble jdk.nashorn.internal.runtime.JSType.toNumber(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.lang.Integer.doubleValue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.toInt32(jdouble) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 28, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.doubleToInt32(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 28, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.doubleToInt32(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Math.getExponent(jdouble) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 513, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants$UnaryNodeConstantEvaluator.eval() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$ArrayLiteralNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$ArrayLiteralNode.accept(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContextStatement.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIndexNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterIndexNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setBase(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIndexNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveIndexNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.accept(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterForNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterForNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 270, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.setInit(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 304, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.setTest(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 270, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.setModify(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.setBody(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveForNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveForNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$NullLiteralNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$NullLiteralNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockStatement.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockStatement.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBlockStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBlockStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TryNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TryNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockStatement.setBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBlockStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBlockStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$2.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveTernaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveTernaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveReturnNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ThrowNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterThrowNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ThrowNode.setExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.WhileNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterWhileNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.WhileNode.setTest(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveIfNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.Collections$SingletonList.size() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterUnaryNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.WhileNode.setBody(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 125, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.WhileNode.<init>(jobject, jobject, jobject, jboolean, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 274, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LoopNode.<init>(jobject, jobject, jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 274, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LoopNode.<init>(jobject, jobject, jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BreakableStatement.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.LexicalContextStatement.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.getBreakLabel() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.getBreakLabel() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.Expression.isAlwaysTrue(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterDECINC(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveIndexNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.Lower.getConstantPropertyName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 150, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.ForNode.<init>(jobject, jobject, jobject, jobject, jobject, jint, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.JoinPredecessorExpression.isAlwaysTrue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.Lower.controlFlowEscapes(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Lower$5.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LoopNode.isTerminal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.ForNode.isForIn() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveForNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isAlwaysTrue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isAlwaysTrue() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.checkEscape(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.HashMap.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.ForNode.mustEnter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Statement.isTerminal() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterNEW(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterNEW(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.UnaryNode.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterNE_STRICT(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 259, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockStatement.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 259, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockStatement.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveBlockStatement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BlockStatement.isTerminal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.createCompileUnit(jobject, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.<init>(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter$1.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveThrowNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveWhileNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 515, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.WeighNodes.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 515, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.WeighNodes.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveReturnNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterEQ_STRICT(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$ArrayLiteralNode.getUnits() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.compareWeight(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveIfNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.unaryNodeWeight(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveIndexNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveForNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 4, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.unaryNodeWeight(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveNEW(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterSUB(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 513, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveNEW(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.Collections$EmptyList.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.leaveReturnNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext.isSplitBody() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 308, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 308, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.accept(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 525, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 525, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.Enum.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.Enum.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 75, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.IndexNode.<init>(jobject, jobject, jobject, jboolean, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.IdentNode.canBeOptimistic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.UnaryNode.canBeOptimistic() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getMostOptimisticType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.Arrays$ArrayList.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.Arrays$ArrayList.contains(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.Arrays$ArrayList.indexOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.Arrays$ArrayList.indexOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getMostPessimisticType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 274, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getWidestOperationType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 274, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getWidestOperationType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.UnaryNode.isAssignment() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.UnaryNode.isAssignment() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.util.HashMap.comparableClassFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.util.HashMap$TreeNode.tieBreakOrder(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.HashMap$TreeNode.find(jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.setProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.setProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setProgramPoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setProgramPoint(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1061, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.add(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1061, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.add(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jint java.util.Arrays$ArrayList.indexOf(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ProgramPoints.leaveIndexNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 573, OSR_BCI: -1 :: virtual jobject java.util.HashMap.getNode(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BaseNode.canBeOptimistic() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$7.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 37, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 37, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 396, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 396, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.enterBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 563, OSR_BCI: -1 :: virtual jobject java.util.HashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 563, OSR_BCI: -1 :: virtual jobject java.util.HashMap.put(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 490, OSR_BCI: -1 :: virtual jobject java.util.HashMap.putVal(jint, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 14, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.compilerConstant(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode.accept(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterRuntimeNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterRuntimeNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode.setArgs(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveForNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 319, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 319, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.increaseUseCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.enterFunctionBody() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 311, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.defineSymbol(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 311, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.defineSymbol(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 283, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Namespace.uniqueName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 283, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Namespace.uniqueName(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 72, OSR_BCI: -1 :: virtual jobject java.util.HashMap.resize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveRuntimeNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1109, OSR_BCI: 150 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1109, OSR_BCI: 150 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterTernaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.IdentNode.getProgramPoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.util.BitSet.expandTo(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 38, OSR_BCI: -1 :: virtual void java.util.BitSet.ensureCapacity(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BaseNode.getMostOptimisticType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeEvaluator.evaluateSafely(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getBest(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.compileTypeSpecialization(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.reparse() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.isSerialized() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 264, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getScriptFunctionData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setName(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getCompiler(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.newLocals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.Global.newEmptyInstance() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.newObject() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.changeProto(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.checkProtoHistory(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.needsCallee() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.TypeMap.<init>(jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeMap.getParameterTypes(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.OptimisticTypesPersistence.getLocationDescriptor(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getInstallerForNewCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getEffectiveInvalidatedProgramPoints(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ApplySpecialization.hasApplies(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 285, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 285, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.TypeEvaluator.evaluatePropertySafely(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 504, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 504, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterJoinPredecessorExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 83, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.jumpToLabel(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 91, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$JumpTarget.addOrigin(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 91, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$JumpTarget.addOrigin(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getUnionTypes(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getUnionTypes(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$JumpOrigin.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.access$000(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 57, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createJumpTarget(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 266, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.joinOnLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 266, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.joinOnLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter.method(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.initLocals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.onEnterBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.assignSlots(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.assignSlots(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.pushFreeSlots(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.initializeMethodParameters(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.expandParameterSlots(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.LocalVariableConversion.hasLiveConversion(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.LocalVariableConversion.isAnyLive(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterJoinPredecessorExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$4500(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadMaybeDiscard(jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadMaybeDiscard(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 343, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.ClassWriter.put112(jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.markSymbolBoundariesInLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.markSymbolBoundariesInLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 31, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.addUnwarrantedOptimismHandlerLabel(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 31, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.addUnwarrantedOptimismHandlerLabel(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.beforeJoinPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.beforeJoinPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.types.Type.weight() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.popBlockScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.emitBlockBreakLabel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.StringBuilder.setLength(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.util.Arrays.sort(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.util.Arrays$LegacyMergeSort.access$000() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.util.TimSort.sort(jobject, jint, jint, jobject, jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 77, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.getByteCodeSymbolNames(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 77, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.getByteCodeSymbolNames(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.ConstantData$ArrayWrapper.calcHashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.generateContinuationHandler() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 22, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Type.getDescriptor(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 14, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.writeFrameTypes(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.popCompileUnit(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.popMethodEmitter() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.popMethodEmitter(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 132, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.beginMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ClassEmitter.defineGetArrayMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 36, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.copy() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.lang.reflect.AccessibleObject.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getInvalidatedProgramPoints() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.AbstractMap.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.FunctionInitializer.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 255, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FunctionSignature.<init>(jboolean, jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 255, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FunctionSignature.<init>(jboolean, jboolean, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.addCode(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.isVarArg() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.BinaryNode.getProgramPoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getMostOptimisticType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 265, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getScriptFunctionData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 265, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getScriptFunctionData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$EmptyMap.values() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonSet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.util.Collections.eq(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 292, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Namespace.uniqueName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.extractFunctionFromScript(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RecompilableScriptFunctionData$1.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData$1.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getCompiler(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.typeMap(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.explicitParams(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context$ContextCodeInstaller.withNewLoader() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 293, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Namespace.uniqueName(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ApplySpecialization$1.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 516, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 516, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveVarNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 320, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.defineVarIdent(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 320, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.defineVarIdent(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$SingletonMap.keySet() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.equalsWithoutType(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 285, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 285, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 506, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 506, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 439, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual void java.security.ProtectionDomain$Key.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MapCreator.makeFieldMap(jboolean, jboolean, jint, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ObjectCreator.helpOptimisticRecognizeDuplicateIdentity(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.printSymbols(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.printSymbols(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 265, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadLiteral(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterReturnNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.releaseSlots() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 272, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.setLength(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 272, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.setLength(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 299, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getScriptFunctionData(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.arraystore() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.ArrayType.astore(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 38, OSR_BCI: -1 :: virtual void java.lang.reflect.Field.<init>(jobject, jobject, jobject, jint, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction.<init>(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.isApplyToCall() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterIfNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getOptimisticType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.BaseNode.getProgramPoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.OptimisticTypesCalculator.tagNeverOptimisticLoopTest(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterIndexNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.OptimisticTypesCalculator.enterForNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.CallNode.getProgramPoint() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 505, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 505, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBlock(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 8, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 8, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterBinaryNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 324, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.visitExpressions(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.Expression.isAlwaysFalse(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.resize(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterTernaryNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.widestLvarType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.widestLvarType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$NullLiteralNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$LvarType.access$400(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.lhs() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BinaryNode.isAlwaysFalse() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 113, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.jumpToLabel(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 113, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getOrCreateJumpTarget(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterIfNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.processIfNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 14, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.onSelfAssignment(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.rhs() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap$KeySet.iterator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap$KeyIterator.<init>(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap$KeySet.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap$KeySet.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.symbolIsConverted(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$SymbolConversions.recordConversion(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 832, OSR_BCI: 90 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 832, OSR_BCI: 90 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 289, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createConversion(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 289, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createConversion(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterRuntimeNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode.getArgs() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.RuntimeNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$TypeHolderExpression.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.IdentityHashMap$KeySet.size() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.retainAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.AbstractCollection.retainAll(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.containsMapping(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.containsMapping(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.resetJoinPoint(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterIndexNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.UnaryNode.isSelfModifying() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 130, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getUnionTypes(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 130, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.getUnionTypes(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 336, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createConversion(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 336, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createConversion(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 90, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$SymbolConversions.calculateTypeLiveness(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 513, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 513, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IfNode.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveRuntimeNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.isUndefinedIdent(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.RuntimeNode$Request.requestFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.RuntimeNode.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterTestFirstLoop(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.JoinPredecessorExpression.isAlwaysFalse() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 527, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 527, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveBlock(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BreakableStatement.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1037, OSR_BCI: 90 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 146, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.Collections$EmptyMap.containsKey(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 526, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 526, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.leaveBinaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.createIsUndefined(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.leaveDefault(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptRuntime.apply(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptRuntime.apply(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.invoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.invoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.ensureGenericInvokers() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 300, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getScriptFunctionData(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 342, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.defineSymbol(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 343, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.defineSymbol(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 344, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.defineSymbol(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 345, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.defineSymbol(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$EmptyMap.keySet() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 346, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.defineSymbol(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 258, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FunctionSignature.<init>(jboolean, jboolean, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.printSymbols(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 394, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.loadArgs(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 394, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.loadArgs(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 36, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.addUnwarrantedOptimismHandlerLabel(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 262, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.markSymbolBoundariesInLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2107, OSR_BCI: 10 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.markSymbolBoundariesInLvarTypesDescriptor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$2.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.markDeadLocalVariables(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.ConstantData$ArrayWrapper.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitIntInsn(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 266, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadLiteral(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 266, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadLiteral(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 137, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2952, OSR_BCI: 10 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2952, OSR_BCI: 10 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 273, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.setLength(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.ArrayList.sort(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: static jint java.util.TimSort.countRunAndMakeAscending(jobject, jint, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: static void java.util.TimSort.binarySort(jobject, jint, jint, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3146, OSR_BCI: 131 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.generateUnwarrantedOptimismExceptionHandlers(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3146, OSR_BCI: 131 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.generateUnwarrantedOptimismExceptionHandlers(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.getMergedType(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter$1.getCommonSuperClass(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Throwable.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Throwable.getLocalizedMessage() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.RuntimeException.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.ClassEmitter.isScriptObject(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual void java.lang.Exception.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L.fieldCount() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.convertThisObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.convertThisObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.DebuggerSupport.notifyInvoke(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleImpl.profileBoolean(jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleImpl.profileBoolean(jboolean, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Math.addExact(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Math.addExact(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/1731722639.dontInline(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandleImpl$CountingWrapper.maybeStopCounting(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandleImpl$CountingWrapper.maybeStopCounting(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandleImpl$CountingWrapper.countDown() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.FunctionScope.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.internal.dynalink.support.AbstractCallSiteDescriptor.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.AbstractCallSiteDescriptor.lookupsEqual(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 105, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 105, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.matchesCallSite(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.matchesCallSite(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.type() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.CompiledFunction.getParamCount(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1282, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.intrinsicName() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getProgramPoint(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 187, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 187, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.RuntimeException.<init>(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.Exception.<init>(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.Throwable.<init>(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.PropertyMap.isExtensible() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RewriteException.getUOE() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.Throwable.getCause() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 282, OSR_BCI: -1 :: virtual jint java.lang.Integer.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 282, OSR_BCI: -1 :: virtual jint java.lang.Integer.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 282, OSR_BCI: -1 :: virtual jint java.lang.Integer.compareTo(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 281, OSR_BCI: -1 :: static jint java.lang.Integer.compare(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.RewriteException.getProgramPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 640, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context.getLogger(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction.logRecompile(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 138, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 138, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.usePersistentCodeCache() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.lookupCodeMethod(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.TreeSet.size() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$11$1.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$11$1.leaveDefault(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.ensureUniqueLabels(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 379, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$11$1.leaveDefault(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 344, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 344, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.emit(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Handler.remove(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Handler.remove(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RewriteException.instanceOrNull(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 16, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.get(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$WrappedMember.getTarget() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.internal.dynalink.support.AbstractCallSiteDescriptor.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getMethodType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.UnwarrantedOptimismException.<init>(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.appendParameterTypes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RewriteException.populateArray(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RewriteException.create(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RewriteException.mergeSlotsWithScope(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.handleRewriteException(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.requestRecompile(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.reparse() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.isSerialized() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.getCompiler(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.getEntryPoints(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.getDescriptor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Compiler.isOnDemandCompilation() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.util.Arrays.hashCode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.widerThan(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$8000(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.coerceStackTop(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 15, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 140, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2968, OSR_BCI: 10 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$11.transform(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Compiler.clearBytecode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.access$300(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CompilationPhase.createNewCompileUnit(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Compiler.replaceCompileUnits(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.TreeSet.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.TreeMap.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.TreeSet.addAll(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.TreeSet.comparator() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.ensureUniqueLabels(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ReplaceCompileUnits.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ReplaceCompileUnits.getExistingReplacement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$11$1.getReplacement(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ReplaceCompileUnits.leaveLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ReplaceCompileUnits.leaveLiteralNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.ClassEmitter.restOfMethod(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.markAsOptimisticContinuationHandlerFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.access$8902(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 6, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.access$4602(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4, OSR_BCI: -1 :: static jobject jdk.internal.org.objectweb.asm.Handler.remove(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RewriteException.getByteCodeSlots() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RewriteException.getReturnValueDestructive() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.UnwarrantedOptimismException.getReturnValueDestructive() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getPrototype() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getPrototype() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArguments(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.NativeArray.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asCollector(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD4.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.OptimisticReturnFilters.getProvableTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject java.lang.invoke.InvokerBytecodeGenerator.loadMethod(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.loadAndInitializeInvokerClass(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 513, OSR_BCI: -1 :: static jobject java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCode(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.UnwarrantedOptimismException.<init>(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.BlockLexicalContext.lastStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.Collections$EmptyMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.buildFromSorted(jint, jint, jint, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 210, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getElementType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 210, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Type.getDimensions() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$8100(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap$TreeNode.getTreeNode(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.Collections$1.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store.isSelfModifying() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.AbstractRelinkableCallSite.getDescriptor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 263, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.objects.Global.useDualFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.PropertyHashMap.threeQuarters(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getSetter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LI.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.Integer.intValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$AsVarargsCollector.getTarget() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.bindArgumentI(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentI(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L3I.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.lang.Boolean.booleanValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1321640594.invokeStatic_L5_L(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleNatives$CallSiteContext.run() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleNatives$CallSiteContext.run() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getGlobalConstants() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandleNatives.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 281, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArgumentPrimitive(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MutableCallSite.getTarget() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LILL.fieldCount() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.whileStatement() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.WhileNode.<init>(jint, jlong, jint, jboolean, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.ReturnNode.isTerminal() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.WhileNode.mustEnter() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.valueOfString(jint, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.getPropertyName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Statement.hasGoto() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.T(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 8328, OSR_BCI: 0 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 295, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Source.getString(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7763, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 46828, OSR_BCI: 119 :: virtual jboolean jdk.nashorn.internal.parser.Lexer.skipComments() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.variableStatement(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.parser.ParserContext.access$100(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.parser.Lexer.hexSequence(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1052, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getLiteral() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 267, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Lexer.getValueOf(jlong, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 642, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LiteralNode.newInstance(jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 269, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LiteralNode.newInstance(jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1488, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.argumentList() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2849, OSR_BCI: 15 :: virtual jobject jdk.nashorn.internal.parser.Parser.argumentList() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1550, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.argumentList() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.block() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 34399, OSR_BCI: 0 :: virtual void jdk.nashorn.internal.parser.Lexer.lexify() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 454, OSR_BCI: -1 :: static jboolean java.lang.Character.isDigit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 135, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.lexify() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 16566, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 16566, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5399, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.detectSpecialProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 134, OSR_BCI: -1 :: virtual void java.util.Vector.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 134, OSR_BCI: -1 :: virtual void java.util.Vector.<init>(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 134, OSR_BCI: -1 :: virtual void java.util.Vector.<init>(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void java.security.CodeSource.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: static jboolean java.lang.ClassLoader$ParallelLoaders.isRegistered(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 12, OSR_BCI: -1 :: virtual jboolean java.util.Collections$SetFromMap.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void java.util.Hashtable.<init>() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void java.util.Hashtable.<init>(jint, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5415, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setLHS(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5417, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.setRHS(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CaseNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterCaseNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BreakNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterBreakNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CaseNode.setBody(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveCaseNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveBreakNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CaseNode.setTest(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.equalSameTypeValues(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.equalSameTypeValues(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 124, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.CaseNode.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.SwitchNode.accept(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.SwitchNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeVisitor.enterSwitchNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5540, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.AccessNode.setBase(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveWhileNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveUnaryNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 513, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 513, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveNEW(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveINSTANCEOF(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterCOMMARIGHT(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 30, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 30, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveUnaryNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.checkEval(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.checkEval(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 35, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveUnaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 35, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.leaveUnaryNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CaseNode.getTest() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 6482, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.ir.Node.getToken() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5432, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label.<init>(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 12, OSR_BCI: -1 :: static jboolean sun.misc.Cleaner.remove(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 12, OSR_BCI: -1 :: static jboolean sun.misc.Cleaner.remove(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.setTest(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.setTrueExpression(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.setFalseExpression(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5525, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.setFlag(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ExpressionStatement.setExpression(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 373, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.isNumeric() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.LiteralNode.objectAsConstant(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 23, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 23, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1456, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.initialize(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.Splitter.enterFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Splitter.leaveLiteralNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5398, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.setFlag(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveVarNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveRuntimeNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1294, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveAccessNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1415, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveExpressionStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.Node.getFinish() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.CallNode.canBeOptimistic() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5124, OSR_BCI: -1 :: virtual jboolean java.util.HashMap.containsKey(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$NumberLiteralNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1298, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.HashMap$TreeNode.moveRootToFront(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5477, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ReturnNode.setExpression(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 253, OSR_BCI: -1 :: virtual jobject java.util.HashMap$TreeNode.putTreeVal(jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.HashMap.newTreeNode(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: static jobject java.util.HashMap.comparableClassFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeShort(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.zip.Deflater.finished() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.zip.Deflater.finished() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong java.util.zip.ZStreamRef.address() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.zip.Deflater.needsInput() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AstSerializer$1.leaveBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.Collections$EmptyList.isEmpty() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.io.ObjectOutputStream$BlockDataOutputStream.setBlockDataMode(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectOutputStream$HandleTable.lookup(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectOutputStream$HandleTable.lookup(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass$Caches.access$200() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.lookup(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.lookup(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static void java.io.ObjectStreamClass.processQueue(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static void java.io.ObjectStreamClass.processQueue(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$WeakClassKey.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 61, OSR_BCI: -1 :: virtual jobject sun.reflect.ReflectionFactory.copyField(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 61, OSR_BCI: -1 :: virtual jobject java.lang.reflect.ReflectAccess.copyField(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamField.isPrimitive() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jchar java.io.ObjectStreamField.getTypeCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamField.setOffset(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitByte(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitByte(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ByteVectorImpl.add(jbyte) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ByteVectorImpl.add(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitShort(jshort) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitShort(jshort) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: static jint sun.reflect.UTF8.utf8Length(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: static jint sun.reflect.UTF8.utf8Length(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: static jobject sun.reflect.UTF8.encode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: static jobject sun.reflect.UTF8.encode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolUTF8(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jshort sun.reflect.ClassFileAssembler.cpi() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jshort sun.reflect.ClassFileAssembler.cpi() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2122, OSR_BCI: 9 :: static jint sun.reflect.UTF8.utf8Length(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2122, OSR_BCI: 9 :: static jint sun.reflect.UTF8.utf8Length(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolClass(jshort) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2712, OSR_BCI: 17 :: static jobject sun.reflect.UTF8.encode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2712, OSR_BCI: 17 :: static jobject sun.reflect.UTF8.encode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 138, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolUTF8(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 125, OSR_BCI: -1 :: static jint sun.reflect.UTF8.utf8Length(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 125, OSR_BCI: -1 :: static jint sun.reflect.UTF8.utf8Length(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2368, OSR_BCI: 19 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2368, OSR_BCI: 19 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 142, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 174, OSR_BCI: -1 :: static jobject sun.reflect.UTF8.encode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolNameAndType(jshort, jshort) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolMethodref(jshort, jshort) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jshort sun.reflect.AccessorGenerator.sub(jshort, jshort) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2541, OSR_BCI: 19 :: virtual void sun.reflect.ClassFileAssembler.emitConstantPoolUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.setStack(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.emitInt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint sun.reflect.ByteVectorImpl.getLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jbyte sun.reflect.ByteVectorImpl.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 285, OSR_BCI: -1 :: virtual jint sun.reflect.ByteVectorImpl.getLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.incStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jshort sun.reflect.ClassFileAssembler.getLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.opc_invokespecial(jshort, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.reflect.ClassFileAssembler.append(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual void java.lang.ClassLoader.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 9, OSR_BCI: -1 :: static jobject java.lang.ClassLoader.checkCreateClassLoader() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 93, OSR_BCI: -1 :: static jfloat java.lang.Math.min(jfloat, jfloat) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.util.StringJoiner.getChars(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.ReflectiveOperationException.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.Class.argumentTypesToString(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.StringJoiner.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.System$2.newStringUnsafe(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.StringJoiner.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.lang.NoSuchMethodException.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass$Caches.access$2500() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.computeFieldOffsets() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.getReflector(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflectorKey.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamField.getName() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeByte(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeByte(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: virtual jint java.io.ObjectOutputStream$HandleTable.hash(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual jlong java.io.ObjectOutputStream$BlockDataOutputStream.getUTFLength(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual jlong java.io.ObjectOutputStream$BlockDataOutputStream.getUTFLength(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeBytes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeBytes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeByte(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeUTF(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 452, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeUTF(jobject, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeUTF(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectOutputStream$HandleTable.assign(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectOutputStream$HandleTable.assign(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$HandleTable.insert(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$HandleTable.insert(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 287, OSR_BCI: -1 :: virtual jlong java.io.ObjectOutputStream$BlockDataOutputStream.getUTFLength(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4027, OSR_BCI: 47 :: virtual jlong java.io.ObjectOutputStream$BlockDataOutputStream.getUTFLength(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4027, OSR_BCI: 47 :: virtual jlong java.io.ObjectOutputStream$BlockDataOutputStream.getUTFLength(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeString(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 288, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeBytes(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4070, OSR_BCI: 95 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeBytes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 4070, OSR_BCI: 95 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeBytes(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 355, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$HandleTable.insert(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 293, OSR_BCI: -1 :: virtual jlong java.io.ObjectOutputStream$BlockDataOutputStream.getUTFLength(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4294, OSR_BCI: 95 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeBytes(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 299, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeBytes(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 151, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.drain() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 151, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.drain() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.DeflaterOutputStream.write(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.DeflaterOutputStream.write(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.Deflater.setInput(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.Deflater.setInput(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.DeflaterOutputStream.deflate() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.DeflaterOutputStream.deflate() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.zip.Deflater.deflate(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.zip.Deflater.deflate(jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.zip.Deflater.deflate(jobject, jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.Deflater.ensureOpen() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.Deflater.ensureOpen() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeClassDesc(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeClassDesc(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4235, OSR_BCI: 47 :: virtual jlong java.io.ObjectOutputStream$BlockDataOutputStream.getUTFLength(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong java.io.ObjectStreamClass.getSerialVersionUID() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static void java.io.Bits.putLong(jobject, jint, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static void java.io.Bits.putLong(jobject, jint, jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.forClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.forClass() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 153, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.drain() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 313, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeNull() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.getVariantFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$ClassDataSlot.<init>(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.util.Collections.swap(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static void java.io.Bits.putInt(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static void java.io.Bits.putInt(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.hasWriteObjectMethod() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.defaultWriteFields(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.defaultWriteFields(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.checkDefaultSerialize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.write(jobject, jint, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.write(jobject, jint, jint, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeObject0(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeObject0(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectOutputStream$ReplaceTable.lookup(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.lookup(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 6, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.lookup(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.hasWriteReplaceMethod() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 4243, OSR_BCI: 47 :: virtual jlong java.io.ObjectOutputStream$BlockDataOutputStream.getUTFLength(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 171, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeHandle(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeInt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeInt(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeSerialData(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeSerialData(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.getClassDataLayout() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.getClassDataLayout() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.getClassDataLayout0() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.util.Collections.reverse(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.getPrimFieldValues(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflector.getPrimFieldValues(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflector.getPrimFieldValues(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.getFields(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.getFields(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflector.getObjFieldValues(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflector.getObjFieldValues(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeOrdinaryObject(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeOrdinaryObject(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.checkSerialize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass$FieldReflectorKey.equals(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass$WeakClassKey.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass$WeakClassKey.equals(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeObject(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.reflect.Field.getModifiers() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamField.getField() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 449, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeSerialData(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 449, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeSerialData(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 8, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflector.getPrimFieldValues(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 132, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 132, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1, OSR_BCI: -1 :: virtual void java.util.ArrayList.writeObject(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 3329, OSR_BCI: -1 :: static jint java.util.concurrent.ConcurrentHashMap.spread(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.io.ObjectStreamClass$WeakClassKey.hashCode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 215, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 215, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1004, OSR_BCI: 19 :: virtual void java.util.ArrayList.writeObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.util.ArrayList.writeObject(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1660, OSR_BCI: 8 :: virtual void java.io.ObjectOutputStream.writeSerialData(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1660, OSR_BCI: 8 :: virtual void java.io.ObjectOutputStream.writeSerialData(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.getObjFieldValues(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1029, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeSerialData(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void java.lang.reflect.Executable.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.getType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.invokeWriteObject(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 267, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.defaultWriteObject() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.SerialCallbackContext.checkAndSetUsed() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Constructor.getDeclaringClass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeInt(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeBlockHeader(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Field.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.io.ObjectStreamField.getOffset() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 158, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.lookup(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 158, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.lookup(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 41000, OSR_BCI: 21 :: virtual jint java.util.Properties$LineReader.readLine() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 517, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 517, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.misc.FDBigInteger.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.misc.FDBigInteger.trimLeadingZeros() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void sun.misc.FDBigInteger.makeImmutable() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.misc.FDBigInteger.mult(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void sun.misc.FDBigInteger.mult(jobject, jint, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 476, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 476, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 232, OSR_BCI: -1 :: static jboolean java.lang.Class.arrayContentsEq(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.io.ExpiringCache.entryFor(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 9090, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Character.toUpperCaseEx(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.toUpperCaseEx(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 530, OSR_BCI: -1 :: static jboolean java.lang.Character.isBmpCodePoint(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3388, OSR_BCI: -1 :: static jboolean java.lang.Character.isSurrogate(jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.reflect.Constructor.getModifiers() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 4, OSR_BCI: -1 :: virtual jobject java.io.SerialCallbackContext.getObj() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void java.io.Bits.putBoolean(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.HashMap.capacity() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.invokeWriteReplace(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.EnumSet.writeReplace() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.HashMap.writeObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.internalWriteEntries(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.EnumSet$SerializationProxy.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jobject java.util.EnumSet.access$000() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.util.RegularEnumSet.size() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jint java.lang.Long.bitCount(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedMethodAccessor1.invoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedMethodAccessor2.invoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedMethodAccessor3.invoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5290, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeHandle(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.hasWriteReplaceMethod() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.io.Bits.putFloat(jobject, jint, jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.Float.floatToIntBits(jfloat) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$ReplaceTable.assign(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeArray(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2300, OSR_BCI: -1 :: virtual jobject java.lang.String.toString() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 263, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 263, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1284, OSR_BCI: -1 :: static jshort sun.reflect.AccessorGenerator.sub(jshort, jshort) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 160, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.lookup(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 160, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass.lookup(jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 378, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 378, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1532, OSR_BCI: -1 :: static jobject java.io.ObjectStreamClass$Caches.access$200() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream$BlockDataOutputStream.writeUTFBody(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 655, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 655, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.getSuperDesc() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5506, OSR_BCI: -1 :: virtual void java.io.ObjectOutputStream.writeObject(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.less(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.Symbol.setSymbolIsScope(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 40, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.compilerConstantIdentifier(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.createSyntheticInitializer(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jint, jlong, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext$1.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$1.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1290, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Symbol.increaseUseCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.getSymbol() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BreakableStatement.getBreakLabel() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.AssignSymbols.isSplitArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesGlobalSymbol() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 476, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.FindScopeDepths.enterBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getKind() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.hasOptimisticApplyToCall() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 11541, OSR_BCI: -1 :: static jint jdk.nashorn.internal.parser.Token.descPosition(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.FindScopeDepths.findGlobalBlock(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.logging.DebugLogger.isEnabled() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Class.getAnnotation(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getLoggerName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.FunctionNode.getLineNumber() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getSource() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.FunctionNode.getFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getEndParserState() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.FindScopeDepths$1.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getIdent() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.functionName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getDataFlags(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.usesThis() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.tokenFor(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.ir.FunctionNode.getFirstToken() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.ir.FunctionNode.getLastToken() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.util.HashMap$KeySet.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.smallSet(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.createLogger() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.initLogger(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.<init>(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.isGlobalScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setBase(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IndexNode.setIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 441, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveIdentNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 441, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.OptimisticTypesCalculator.leaveIdentNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.UnaryNode.getProgramPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.Collections$EmptyIterator.hasNext() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getPrototype() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.getPrototype() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 716, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 716, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/801197928.invokeStatic_LL_L(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.compareAndSetMap(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 131, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.generateUnwarrantedOptimismExceptionHandlers(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 131, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.generateUnwarrantedOptimismExceptionHandlers(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 274, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.DumpBytecode.dumpBytecode(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Expression.isSelfModifying() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5577, OSR_BCI: -1 :: virtual void java.util.BitSet.expandTo(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BaseNode.getBase() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.PropertyNode.getValue() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1477, OSR_BCI: 90 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1477, OSR_BCI: 90 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterWhileNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 347, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.setConversion(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.WhileNode.getBody() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.getBody() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 388, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterCallNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 388, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterCallNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getFunction() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: virtual jint java.util.LinkedHashMap$LinkedValues.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getEvalArgs() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 202, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.access$800(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$LvarType.values() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Expression.isAlwaysFalse() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getEntryLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CaseNode.getBody() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.isBreakableWithoutLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JumpStatement.getLabelName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.BreakableStatement.isBreakableWithoutLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Expression.isAlwaysTrue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.SwitchNode.getTag() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.SwitchNode.setExpression(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5387, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.LocalVariableTypesCalculator$1.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$NullLiteralNode.getType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 723, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.create(jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.create(jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 249, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.Global.instance() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 249, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.Global.instance() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.InflaterInputStream.ensureOpen() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.zip.Inflater.inflate(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.zip.Inflater.inflate(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.Inflater.ensureOpen() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.Inflater.ensureOpen() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jshort java.io.ObjectInputStream$BlockDataInputStream.readShort() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$PeekInputStream.readFully(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$PeekInputStream.readFully(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$PeekInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$PeekInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.zip.InflaterInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.zip.InflaterInputStream.read(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jshort java.io.Bits.getShort(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 387, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readObject() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 387, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readObject() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.io.ObjectInputStream$BlockDataInputStream.setBlockDataMode(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.io.ObjectInputStream$BlockDataInputStream.setBlockDataMode(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jbyte java.io.ObjectInputStream$BlockDataInputStream.peekByte() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.peek() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.peek() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$PeekInputStream.peek() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.zip.InflaterInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.util.zip.InflaterInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.Byte.toUnsignedInt(jbyte) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$PeekInputStream.read() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 247, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.<init>() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual jlong java.io.ObjectInputStream$BlockDataInputStream.readUTFSpan(jobject, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual jlong java.io.ObjectInputStream$BlockDataInputStream.readUTFSpan(jobject, jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jbyte java.io.ObjectInputStream$BlockDataInputStream.readByte() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jbyte java.io.ObjectInputStream$BlockDataInputStream.readByte() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jbyte java.io.ObjectInputStream.readByte() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readUTF() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream$BlockDataInputStream.readUTFBody(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream$BlockDataInputStream.readUTFBody(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.Math.min(jlong, jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.readUnsignedShort() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.readUnsignedShort() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamField.<init>(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 459, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream$BlockDataInputStream.readUTF() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$HandleTable.assign(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$HandleTable.assign(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readTypeString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readString(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 446, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream$BlockDataInputStream.readUTFBody(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$HandleTable.finish(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$HandleTable.finish(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readClassDesc(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readClassDesc(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readNonProxyDesc(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readClassDescriptor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.readNonProxy(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong java.io.ObjectInputStream.readLong() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 23, OSR_BCI: -1 :: virtual jlong java.io.ObjectInputStream$BlockDataInputStream.readLong() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jshort java.io.ObjectInputStream.readShort() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.io.ObjectInputStream.isCustomSubclass() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.resolveClass(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.io.ObjectInputStream.latestUserDefinedLoader() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: static jlong java.io.Bits.getLong(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: static jlong java.io.Bits.getLong(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream.skipCustomData() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$BlockDataInputStream.skipBlockData() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$BlockDataInputStream.refill() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$BlockDataInputStream.refill() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.readBlockHeader(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.readBlockHeader(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.initNonProxy(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 724, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 724, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.io.ObjectStreamClass$FieldReflectorKey.hashCode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.io.Bits.getInt(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint java.io.Bits.getInt(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.hasReadObjectMethod() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream.defaultReadFields(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream.defaultReadFields(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$BlockDataInputStream.readFully(jobject, jint, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$BlockDataInputStream.readFully(jobject, jint, jint, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.read(jobject, jint, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.read(jobject, jint, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.setPrimFieldValues(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflector.setPrimFieldValues(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflector.setPrimFieldValues(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readObject0(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readOrdinaryObject(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 106, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readClassDesc(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 106, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readClassDesc(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 488, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.readUnsignedShort() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 204, OSR_BCI: -1 :: static jlong java.io.Bits.getLong(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.zip.Inflater.finished() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.zip.Inflater.needsDictionary() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.util.zip.Inflater.needsInput() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.zip.InflaterInputStream.fill() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 90, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readHandle(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 90, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readHandle(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.readInt() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.readInt() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream$HandleTable.lookupObject(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 13, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$BlockDataInputStream.refill() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.checkDeserialize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.isInstantiable() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream.readSerialData(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 727, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$HandleTable.markDependency(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$HandleTable.markDependency(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.checkResolve(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.checkResolve(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor6.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 397, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream$HandleTable.lookupException(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.invokeReadObject(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream$BlockDataInputStream.currentBlockRemaining() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 113, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readClassDesc(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 96, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readHandle(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 114, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readClassDesc(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 519, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$HandleTable.markDependency(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.checkResolve(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflector.setObjFieldValues(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass$FieldReflector.setObjFieldValues(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 6, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.checkResolve(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor11.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor11.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.zip.Inflater.finished() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.util.zip.Inflater.needsDictionary() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.zip.Inflater.setInput(jobject, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Constructor.newInstance(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1, OSR_BCI: -1 :: virtual void java.util.ArrayList.readObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1, OSR_BCI: -1 :: virtual void java.util.ArrayList.readObject(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.newInstance() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.setObjFieldValues(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor10.newInstance(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor8.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor8.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor4.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor5.newInstance(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 115, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readClassDesc(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 115, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readClassDesc(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 728, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 728, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 267, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream.defaultReadObject() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 267, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream.defaultReadObject() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 394, OSR_BCI: -1 :: virtual jint java.io.ObjectInputStream.readInt() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean java.io.Bits.getBoolean(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream$HandleTable.setObject(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.invokeReadResolve(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor12.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor13.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jfloat java.io.Bits.getFloat(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedHashMap.reinitialize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.HashMap.reinitialize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readArray(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.EnumSet$SerializationProxy.readResolve() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor19.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void java.util.HashMap.readObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 807, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.hasReadResolveMethod() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor22.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$12$1.leaveFunctionNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.restoreFlags(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.FunctionNode.hasNestedEval() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$12$1.getReplacement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/95395916.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.getTypeClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.DirectMethodHandle.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.DirectMethodHandle$Accessor.<init>(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.DirectMethodHandle$Accessor.<init>(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isVolatile() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1285, OSR_BCI: -1 :: virtual jint java.lang.invoke.MemberName.getModifiers() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jboolean java.lang.reflect.Modifier.isProtected(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.util.Arrays.copyOfRange(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1428, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.AccessorProperty.access$000() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Property.getSlot() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MapTuple.getValueType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 419, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.initGetterSetter(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$2.enterAccessNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.CallNode.isApplyToCall() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2$4.loadStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.swap() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.swap(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2$4.<init>(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.types.Type.swap(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2$4.consumeStack() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L3.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.dropArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.dropArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap$Element.getLink() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyHashMap$Element.getProperty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.AccessorProperty.bindTo(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.bindTo(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Property.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isSpill() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 526, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.Property.getFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.addBoundProperty(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1281, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.PropertyHashMap.threeQuarters(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.rebind() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.ClassMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.TypeConverterFactory.asType(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 742, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 743, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 743, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor28.newInstance(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedMethodAccessor4.invoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedMethodAccessor4.invoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedMethodAccessor5.invoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedMethodAccessor6.invoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readObject0(jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 766, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor14.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 767, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor29.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor32.newInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor16.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5121, OSR_BCI: -1 :: virtual jobject java.io.ObjectStreamClass.newInstance() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5470, OSR_BCI: -1 :: virtual void java.io.ObjectInputStream.readSerialData(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5205, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream.readOrdinaryObject(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getCompileUnit() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getExternalSymbolNames() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.util.Collections.unmodifiableSet(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6361, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isGlobal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SpillProperty$Accessors.getOrCreate(jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 10, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Compiler.addInvalidatedProgramPoint(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 27907, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext$1.next() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterNEW(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterNEW(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$4300(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.BooleanType.ldc(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.storeElement(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 473, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadNEW(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicNew(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 17, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadNull() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1152, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5396, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 176, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 176, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.putUTF8(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.ObjectType.getBytecodeStackType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: virtual void java.util.TreeMap.buildFromSorted(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7, OSR_BCI: -1 :: static jint java.util.TreeMap.computeRedLevel(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.unboxReturnType(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L5.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L6.make(jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L6.<init>(jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LIL.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.insertArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.objects.Global.isGlobal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.getInvocation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5391, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaFormEditor$Transform.packedBytes(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.concurrent.atomic.AtomicReference.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentL(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.isScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1273765644.invokeStatic_L3IL_L(jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getProperty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getOwner() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/215145189.invokeStatic_L3ILL_L(jobject, jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1012570586.invokeStatic_L6_L(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 247, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.filterArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.filterArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SetMethodCreator.access$000(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants$Access.getSwitchPoint() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 141, OSR_BCI: -1 :: static jint java.lang.Integer.numberOfLeadingZeros(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/87765719.invokeStatic_L5I_L(jobject, jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.createRelinkAndInvokeMethod(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.internal.dynalink.support.LinkRequestImpl.isCallSiteUnstable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.linker.LinkerCallSite.getMaxChainLength() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.makePruneAndInvokeMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LIL3.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.guardWithTest(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 9488, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$SpeciesData.constructor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1702146597.invokeStatic_L3I_L(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6406, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1914572623.invokeStatic_L4_L(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getContext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.Guards.asType(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SetMethodCreator.access$100(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SetMethodCreator.access$200(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L4.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MutableCallSite.dynamicInvoker() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.CallSite.makeDynamicInvoker() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.SwitchPoint.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.MutableCallSite.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 379, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.createSetter(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.getGuard() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.getException() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context.getEnv() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5386, OSR_BCI: -1 :: static jobject sun.invoke.util.Wrapper.findPrimitiveType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.viewAsType(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.checkGenericType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jobject java.lang.invoke.CallSite.makeSite(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1226204845.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.bootstrap(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.link(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.support.AbstractRelinkableCallSite.initialize(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1845066581.invokeStatic_LI_I(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual jobject java.lang.invoke.CallSite.makeUninitializedCallSite(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.lookup(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/892529689.invokeSpecial_LLIL_L(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.relink(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.linkToCallSiteMethod(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.ChainedCallSite.relink(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.relinkInternal(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.LinkerCallSite.getPruneCatches() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LILL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1468357786.invokeStatic_L3IL3_L(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.compose(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.asTypeSafeReturn(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.linker.LinkerServices$Implementation.asTypeLosslessReturn(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.OptimisticReturnFilters.filterOptimisticReturnValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.hasWithScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6146, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.bindArgumentType(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants.getOrCreateSwitchPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornGuards.getMapGuard(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findBuiltinSwitchPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornGuards.getGuard(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1308244637.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1658926803.linkToCallSite(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/413601558.exactInvoker(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findSetMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SetMethodCreator$SetMethod.createGuardedInvocation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1908923184.invokeStatic_L7_L(jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static void java.lang.invoke.SwitchPoint.invalidateAll(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.findSetMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/206835546.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/706277948.invokeSpecial_L3_L(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1107730949.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1795960102.putObjectField(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getSetter(jobject, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1997287019.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.GlobalConstants$Access.newSwitchPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SetMethodCreator.createExistingPropertySetter() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.NativeArray.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar java.lang.invoke.LambdaForm$BasicType.basicTypeChar() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxBoolean(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxBoolean(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeMap.get(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterTernaryNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$2200(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadTernaryNode(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.emitBranch(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.BranchOptimizer.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.BranchOptimizer.execute(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.BranchOptimizer.branchOptimizer(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.invoke.util.Wrapper.primitiveType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3I.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L3IL.make(jobject, jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L3IL.<init>(jobject, jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3IL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.BoundMethodHandle$Species_L3ILL.make(jobject, jobject, jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.lang.invoke.BoundMethodHandle$Species_L3ILL.<init>(jobject, jobject, jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 250, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 250, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$reinvoker/206287129.dontInline(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/447105432.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.getBestConstructor(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isConstructor() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.matchesCallSite(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction$3.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$3.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$3.get() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.getConstructor() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.allocate() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.allocate(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.isMap(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.newFilter(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.arrays.ArrayData.allocate(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ObjectArrayData.<init>(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ObjectArrayData.<init>(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1899073220.invokeExact_MT(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.invokeSetter(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl$ArrayAccessor.getElementL(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.getParamType(jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.runtime.arrays.ArrayData.length() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.getLookup() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6423, OSR_BCI: -1 :: virtual void java.io.ObjectStreamClass.checkDeserialize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6427, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.isInstantiable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6528, OSR_BCI: -1 :: virtual jboolean java.io.ObjectStreamClass.hasReadResolveMethod() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7562, OSR_BCI: -1 :: virtual jobject java.io.ObjectInputStream$HandleTable.lookupException(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.ArrayType.store(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ByteVector.encodeUTF8(jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 136, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.generateUnwarrantedOptimismExceptionHandlers(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1346, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Node.ensureUniqueLabels(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.getTable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1531, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.CodeGenerator$Store.access$7502(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5353, OSR_BCI: -1 :: static jboolean java.util.WeakHashMap.eq(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 249, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getCurrentContinuationEntryPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1282, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitEnd() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor48.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getInternalType(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.IntType.store(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BinaryNode.getWidestOperandType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterBlockStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$SubList$1.hasNext() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.IntType._return(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: virtual jint java.lang.CharacterDataLatin1.getPropertiesEx(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isOtherUppercase(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isOtherUppercase(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.LongType.load(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1046, OSR_BCI: 87 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getDynamicSignature(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1046, OSR_BCI: 87 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getDynamicSignature(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 271, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isOtherUppercase(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 272, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isOtherUppercase(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 318, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicArrayPopulatorCall(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 318, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicArrayPopulatorCall(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 7, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.addProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 7, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.addProperty(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SetMethodCreator.getMap() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle.getTarget() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.checkHistory(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.checkHistory(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5384, OSR_BCI: -1 :: static jboolean java.util.WeakHashMap.eq(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 206, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getDynamicSignature(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 206, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getDynamicSignature(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6407, OSR_BCI: -1 :: virtual jint java.util.WeakHashMap.hash(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 273, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isOtherUppercase(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 274, OSR_BCI: -1 :: virtual jboolean java.lang.CharacterDataLatin1.isOtherUppercase(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 320, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicArrayPopulatorCall(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1174, OSR_BCI: 87 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getDynamicSignature(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1182, OSR_BCI: 13 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getDynamicSignature(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1182, OSR_BCI: 13 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getDynamicSignature(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5124, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.invoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5315, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.symbolNeedsToBeScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.canBeNarrowerThan(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 249, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getDynamicSignature(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1366, OSR_BCI: 13 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getDynamicSignature(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.JD4.allocate(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.JD4.allocate(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$CountingWrapper.getTarget() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 42, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.addProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 42, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.addProperty(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandleImpl$ArrayAccessor.setElementJ(jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.SimpleMethodHandle.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1856056345.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.ensureSpillSize(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/553871028.invokeExact_MT(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getObjectValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.useDualFields() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1418621776.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2138564891.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/542060780.exactInvoker(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/2011791487.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$reinvoker/1627428162.dontInline(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1409, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.loadClass(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isOptimisticOrRestOf() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isOptimisticOrRestOf() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 40, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.isOptimisticOrRestOf() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5120, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.types.Type.widerThan(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.coerceStackTop(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5455, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.Handle.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5458, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.ClassWriter.newHandle(jint, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$2$2.consumeStack() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1374, OSR_BCI: 13 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getDynamicSignature(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findGetMethod(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$3.apply(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$3.apply(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 305, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.isExtensible() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArgumentsChecks(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1475998599.delegate(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1810132623.invokeVirtual_LIL_I(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.extensionCheck(jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1753447031.invokeSpecial_L3_I(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.dropArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 304, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.constant(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.findGetMethod(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants.constantGetter(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.GlobalConstants.staticConstantGetter(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 272, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.linker.GuardedInvocation.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1760126453.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1332210474.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.isRecompilable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.CompiledFunction.getFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1318822808.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/731395981.identity_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1631862159.getObjectField(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/24433162.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7436, OSR_BCI: -1 :: virtual jobject java.util.Collections$UnmodifiableRandomAccessList.subList(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AllocationStrategy.allocate(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/757108857.invokeStatic_LL_I(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1300393335.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 387, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.addSpillProperty(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 323, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants.findGetMethod(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 325, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.lookup.Lookup.filterReturnType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.foldArguments(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$HandleAndAssumptions.createInvocation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.linker.GuardedInvocation.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptObject.pairArguments(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptObject.pairArguments(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptFunction.getFunctionGuard(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1802598046.invokeVirtual_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.findNewMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.createConstructorInvocation() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1495242910.invokeStatic_L3_L(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 9357, OSR_BCI: 54 :: static jobject java.lang.invoke.MethodHandles.dropArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/510109769.linkToCallSite(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1106131243.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1279309678.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/917681894.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$27$11503AA$earley_boyer.sc_Pair(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6582, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.dropArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1799583457.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1647076749.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/801197928.invokeStatic_LL_L(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.unboxReturnType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1321640594.invokeStatic_L5_L(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.TypeConverterFactory.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 768, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setMap(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 361, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/95395916.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeBlockInliningWrapper(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void java.lang.invoke.MethodHandleImpl$CountingWrapper.<init>(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6784, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.TypeConverterFactory.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2066, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 770, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.TypeConverterFactory.getTypeConverterNull(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 770, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.TypeConverterFactory.getCacheableTypeConverterNull(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 770, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.TypeConverterFactory.getCacheableTypeConverter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 2245, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 17665, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeConverterFactory.canAutoConvert(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7424, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.Bootstrap$2.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 17666, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11540, OSR_BCI: -1 :: virtual void java.util.LinkedList.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.CompiledFunction.needsCallee() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5390, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findProperty(jobject, jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.checkTargetChange(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LI.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LIL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MethodHandle.asCollectorChecks(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L3.copyWithExtendI(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1273765644.invokeStatic_L3IL_L(jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asCollector(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/215145189.invokeStatic_L3ILL_L(jobject, jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/87765719.invokeStatic_L5I_L(jobject, jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.createRelinkAndInvokeMethod(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.makePruneAndInvokeMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1475998599.delegate(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7424, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/2011791487.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makePairwiseConvertByEditor(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5142, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.viewAsType(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jobject java.lang.ThreadLocal$ThreadLocalMap.getEntry(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.asTypeUncached(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 486, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 486, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 7872, OSR_BCI: 58 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.symbolNeedsToBeScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5288, OSR_BCI: -1 :: virtual void java.util.IdentityHashMap.closeDeletion(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$200(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.booleanToInt(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$300(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.objectToNumber(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 13, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$7100(jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.popNumeric() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.ArrayType.getBytecodeStackType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 90, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.BranchOptimizer.branchOptimizer(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2136, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5393, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.symbolNeedsToBeScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.initArguments(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterSUB(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$2400(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadSUB(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$BinaryArith.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LoopNode.getLocalVariableConversion() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 202, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.loadComparisonOperands(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 202, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.conditionalJump(jobject, jboolean, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.Condition.toBinary(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterIndexNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$2.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator.access$600(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$2.consumeStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicGetIndex(jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterDECINC(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadDECINC(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11.<init>(jobject, jobject, jobject, jobject, jobject, jboolean, jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$SelfModifyingStore.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11.evaluate() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11.storeNonDiscard() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11$2.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11$2.loadStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11.loadMinusOne() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11$2.consumeStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.add(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject java.lang.invoke.Invokers.basicInvoker() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.toInt32Optimistic(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.toInt32Optimistic(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 618, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 618, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArguments.G$length(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArguments.G$length(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.globalAllocateArguments() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$BinaryArith$1.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$BinaryArith$1.loadStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$BinaryArith$1.consumeStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$29.op(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.sub(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.get2n() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.IntType.sub(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterForNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.enterForOrWhile(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$2.loadStack() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.dynamicGetIndex(jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.emitContinueLabel(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.ForNode.hasPerIterationScope() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornGuards.getScriptObjectGuard(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.ObjectArrayData.has(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.ObjectArrayData.has(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.getObject(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.addExact(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.addExact(jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunction.isFunctionMH(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunction.isFunctionMH(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/1426329391.dontInline(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/1663619914.dontInline(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.isScriptObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.isScriptObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/743792379.dontInline(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.OptimisticReturnFilters.ensureInt(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.OptimisticReturnFilters.isPrimitiveNumberWrapper(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 257, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 257, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getDescriptor() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject java.lang.StringBuilder.append(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.AssignSymbols.functionUsesGlobalSymbol() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Block.isGlobalScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5592, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadNEW(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.dynamicNew(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1012570586.invokeStatic_L6_L(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6147, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.bindArgumentL(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.maybeCustomize(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 258, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 258, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaFormEditor$Transform.fullBytes(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.parameterType(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 769, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 769, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 485, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7078, OSR_BCI: -1 :: virtual jint sun.invoke.util.Wrapper.stackSlots() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1486371051.getObjectFieldCast(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 259, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 259, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_L5.copyWith(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormEditor$Transform.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9219, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$NamedFunction.methodType() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.Global.allocateArguments(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.Global.allocateArguments(jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArguments.allocate(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArguments.allocate(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunction.isStrict() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 272, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArguments.getInitialMap() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 272, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.NativeArguments.<init>(jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 272, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.NativeArguments.<init>(jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.subExact(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.arrays.ArrayData.getIntOptimistic(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/510113906.invokeVirtual_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/701141022.reinvoke(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.ensureUniqueLabels(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RewriteException.toObjectArray(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5479, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor14.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5466, OSR_BCI: -1 :: virtual jobject sun.reflect.GeneratedSerializationConstructorAccessor29.newInstance(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5211, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.newString(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.logging.Level.intValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.PropertyMap.getListeners() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.filterArgument(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static void java.lang.invoke.MethodHandles.filterArgumentChecks(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5239, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.filterArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 383, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.GlobalConstants.findSetMethod(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5512, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.node(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.logging.Logger.getLevel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9092, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.coerceStackTop(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5494, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1291286504.invokeStatic_LIL_V(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.newarray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$7.<init>(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$8.loadValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$8.loadValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/540159270.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1166, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Parser.useBlockScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 19515, OSR_BCI: -1 :: virtual jboolean java.util.HashMap.containsKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$4.getValueType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.RuntimeNode$Request.isUndefinedCheck(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterRuntimeNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$4200(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadRuntimeNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.nullCheck(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.RuntimeNode$Request.isEQ(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.undefinedCheck(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2976, OSR_BCI: 10 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 140, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 140, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 8558, OSR_BCI: 39 :: virtual jobject java.util.AbstractCollection.toArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5517, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2304, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setMap(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.EQ_STRICT(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.strictEquals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.LongType.convert(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1066, OSR_BCI: 30 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1066, OSR_BCI: 30 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1891, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1891, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 340, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 3075, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.useCount(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxLong(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 8196, OSR_BCI: 2 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5526, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ContinuousArrayData.getOptimisticType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.emitLocalVariableConversion(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.types.LongType.store(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterIfNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 143, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.closeBlockVariables(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$BinaryArith.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$BinaryArith.evaluate(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.booleanToInt() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 8, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.objectToNumber() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1282, OSR_BCI: 30 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2439, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2034, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5529, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 2120, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.invalidateGlobalConstant(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator.enterWhileNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 2201, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.toUint32(jdouble) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.length(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.length(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithTest(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithTestForm(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3330, OSR_BCI: -1 :: virtual jboolean java.lang.ClassLoader.checkName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Compiler.declareLocalSymbol(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 112, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.store(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 257, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 257, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 2277, OSR_BCI: -1 :: static jboolean sun.invoke.util.VerifyType.isNullConversion(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.NativeArray.findGetIndexMethod(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.getElem(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.getElem(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getFunctionNodeId() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.setInitialValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.addOwnProperty(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getFunctionFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2306, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.binaryNodeWeight(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.util.TreeMap.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 285, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.peek() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Block.getLocalVariableConversion() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.ConstantData$ArrayWrapper.hashCode() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptRuntime.TYPEOF(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jboolean java.util.RegularEnumSet.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual void java.util.EnumSet.typeCheck(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 17410, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.parameterList() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.Type$6.getBytecodeStackType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.BranchOptimizer.branchOptimizer(jobject, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.NE_STRICT(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.hasGetterFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.getLocalVariableConversion() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 9732, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.coerceStackTop(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1290, OSR_BCI: 30 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 457, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 457, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jobject java.util.WeakHashMap.maskNull(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.NumberType.convert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.Buffer.position(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 557, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.JoinPredecessorExpression.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterCOMMARIGHT(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$3200(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadCOMMARIGHT(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.SpillProperty.isSpill() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 270, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11.loadRhs() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 4099, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.lastUseIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.IntType.getBytecodeStackType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$1.enterIndexNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$Store$2.enterIndexNode(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.dynamicSetIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.WeakHashMap.containsKey(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.WeakHashMap.getEntry(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$SubList.iterator() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1450, OSR_BCI: 30 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 599, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 599, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1522, OSR_BCI: 30 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 652, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 652, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.INSTANCEOF(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptFunction.isInstance(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.getTargetFunction() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.access$10002(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jboolean java.nio.charset.Charset.atBugLevel(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.position(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$reinvoker/2003534796.dontInline(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8192, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.TypeConverterFactory.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 18059, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.TypeConverterFactory.canAutoConvert(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornLinker.isNashornTypeOrUndefined(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$reinvoker/882402449.dontInline(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.Buffer.limit(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1682, OSR_BCI: 30 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 774, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 774, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.objects.NativeArray.pushObject(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.getContinuousArrayDataCCE(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.convertToObject() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.toObjectArray(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.toObjectArray(jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.runtime.arrays.ObjectArrayData.fastPush(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jlong jdk.nashorn.internal.runtime.arrays.ArrayData.increaseLength() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2306, OSR_BCI: -1 :: virtual jobject java.lang.ClassLoader.loadClass(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setLocalVariableConversion(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.limit(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1778, OSR_BCI: 30 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 833, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 833, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$13.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$14.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.ConstantData$PropertyMapWrapper.hashCode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 918, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 918, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle.intrinsicName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L3IL.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5248, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isResolved() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: static jlong java.lang.Math.addExact(jlong, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.objects.NativeArray.<init>(jlong) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.arrays.ArrayData.allocate(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.arrays.ArrayData.allocate(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.ArrayType.newarray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.getInternalName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName$Factory.resolve(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.arrays.ArrayIndex.toLongIndex(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.toUint32(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ArrayData.setLength(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.DeletedRangeArrayFilter.has(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.ArrayFilter.has(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.DeletedRangeArrayFilter.isDeleted(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.PropertyMap.containsArrayKeys() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.DeletedRangeArrayFilter.isEmpty() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.set(jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.set(jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$reinvoker/406752394.dontInline(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.toLongOptimistic(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.toLongOptimistic(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual void java.util.BitSet.trimToSize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.Guards.isIdentical(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.internal.dynalink.support.Guards.isIdentical(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.construct(jboolean, jobject, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/1726118601.dontInline(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.unlink(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.clone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.IntArrayData.has(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.DeletedRangeArrayFilter.set(jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 3, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.DeletedRangeArrayFilter.set(jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ArrayFilter.set(jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.set(jint, jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 391, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isRepresentableAsInt(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 269, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ArrayFilter.setLength(jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$reinvoker/50421901.dontInline(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 686, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.functionExpression(jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.LongType.getBytecodeStackType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jboolean java.util.ArrayList$SubList$1.hasNext() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.access$500(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/1921022047.dontInline(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/754666084.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1368594774.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setObject(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.position(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$SubList$1.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1027, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.Expression.getWidestOperationType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.types.Type.getWeight() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 270, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12521, OSR_BCI: -1 :: static jboolean java.util.WeakHashMap.eq(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5394, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.TokenType.isOperator(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.misc.Cleaner.clean() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.popUnwarrantedOptimismHandlers() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.prune(jobject, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual jobject java.util.LinkedList.superClone() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.internal.dynalink.linker.GuardedInvocation.hasBeenInvalidated() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual void java.util.LinkedList$ListItr.remove() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.ByteBuffer.limit(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.subExact(jlong, jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jlong java.lang.Math.subtractExact(jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.guardWithTest(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxExact(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1702146597.invokeStatic_L3I_L(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.linker.GuardedInvocation.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isGetter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.getHandlerLabel() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.addExact(jlong, jlong, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.addExact(jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1285, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Item.set(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 132, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.initTable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1282, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitCode() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1986, OSR_BCI: 30 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 979, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 979, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1025, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2050, OSR_BCI: 30 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 1025, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1025, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jobject java.util.LinkedHashMap$LinkedValues.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.createGetterInner(jobject, jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject sun.nio.cs.UTF_8.newEncoder() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.nio.cs.UTF_8$Encoder.<init>(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void sun.nio.cs.UTF_8$Encoder.<init>(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.nio.charset.CharsetEncoder.<init>(jobject, jfloat, jfloat, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.nio.charset.CharsetEncoder.replaceWith(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean sun.nio.cs.UTF_8$Encoder.isLegalReplacement(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: virtual void sun.nio.cs.UTF_8$Encoder.implReplaceWith(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$7.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$8.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$9.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$10.toString() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$reinvoker/596108811.dontInline(jobject, jobject, jlong) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.ContinuousArrayData.hasRoomFor(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble java.lang.Long.doubleValue() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ObjectArrayData.setElem(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ObjectArrayData.setElem(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.Class.getEnclosingClass() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.set(jint, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.set(jint, jint, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.arrays.ContinuousArrayData.guard(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.arrays.ContinuousArrayData.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/687328420.invokeStatic_L5IL_L(jobject, jobject, jobject, jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.getScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jobject java.lang.invoke.CallSite.makeSite(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.logging.DebugLogger.getLevel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.logging.DebugLogger.levelFinerThanOrEqual(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler$CompilationPhases.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.getTargetLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompileUnit.getCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.access$400(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1060, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.isConfigurable() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1024, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.peek() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5314, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getClassName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.Class.forName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5241, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator.getCurrentContinuationEntryPoint() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.TokenType.isLeftAssociative() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.Global.allocate(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5211, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodType.methodType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$1.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$2.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$3.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$4.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$5.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$6.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label.getLabel() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.ConstantData$ArrayWrapper.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/237351678.reinvoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/75457651.invokeStatic_L_I(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 290, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.pop() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 263, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.types.Type.pop(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 263, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.types.Type.pop(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.addSwitchPoint(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void java.lang.invoke.ConstantCallSite.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.linkToTargetMethod(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodTypeForm.cachedMethodHandle(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5390, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.SpillProperty$Accessors.getCached(jint, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.SpillProperty$Accessors.ensure(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SpillProperty$Accessors.getOrCreate(jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5390, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.SpillProperty$Accessors.getInner(jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11266, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.checkExactType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/592959754.exactInvoker(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/341748265.guard(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 260, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 260, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1226204845.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5199, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.MethodEmitter.isThisSlot(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 261, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 261, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1845066581.invokeStatic_LI_I(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 15620, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.coerceStackTop(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1589, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.mergeVariableTypes(jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 262, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 262, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5384, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm.argument(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/85445963.invokeStatic_LIL_L(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode.getValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 263, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.markDeadSlots(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5514, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getLocalVariableTypesCopy() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LocalVariableConversion.isLive() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 263, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 263, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5333, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.SplitIntoFunctions.appendStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jobject java.util.IdentityHashMap.clone() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.getInit() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.ForNode.getModify() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 266, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.asCollector(jobject, jobject, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 264, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 264, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodReturnType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5369, OSR_BCI: -1 :: virtual jint jdk.internal.org.objectweb.asm.MethodWriter.startFrame(jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.convert(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.convert(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 262, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.convert(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 266, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 267, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 267, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaFormEditor$Transform.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RewriteException.populateArrayBootstrap(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 4593, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap$TreeBin.find(jint, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap$TreeNode.findTreeNode(jint, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.LambdaFormEditor$Transform.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.ParserContextBaseNode.appendStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.WhileNode.hasPerIterationScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitLineNumber(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 171, OSR_BCI: -1 :: static void java.util.Arrays.fill(jobject, jint, jint, jchar) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5203, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.getMethodReturnType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 268, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 5, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.markDeadLocalVariable(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isDead() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 34, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 35, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 36, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 37, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5126, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 38, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaFormEditor.getInCache(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5248, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2988, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.putVal(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1154, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isString(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jboolean java.lang.Class.isLocalOrAnonymousClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/606136674.identity_I(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$reinvoker/782954342.dontInline(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/879837202.linkToTargetMethod(jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1840663231.reinvoke(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/120960120.invokeStatic_I3_I(jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.changeReturnType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.InvokerBytecodeGenerator.assertStaticType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.OptimisticReturnFilters.filterOptimisticReturnValue(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1394336709.invokeStatic_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.TreeMap.comparator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean java.lang.invoke.MemberName.isPrivate() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5175, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitReferenceCast(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10435, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.symbolNeedsToBeScope(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.construct(jboolean, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/836048152.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/112061925.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1014328909.invokeStatic_I_L(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 19, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isRepresentableAsInt(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5126, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.insertArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6160, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BasicType.basicType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkerServicesImpl.getGuardedInvocation(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.CompositeTypeBasedGuardingDynamicLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.NashornLinker.getGuardedInvocation(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.asTypeSafeReturn(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.linker.LinkerServices$Implementation.asTypeLosslessReturn(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5331, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makePairwiseConvertByEditor(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.OptimisticReturnFilters.filterOptimisticReturnValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: virtual jobject java.lang.invoke.CallSite.makeUninitializedCallSite(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 23221, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 23221, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.next() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5463, OSR_BCI: -1 :: virtual jint java.util.BitSet.nextSetBit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5525, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList.removeRange(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5505, OSR_BCI: -1 :: virtual void java.util.ArrayList.removeRange(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: virtual jint java.lang.invoke.InvokerBytecodeGenerator.refKindOpcode(jbyte) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1408, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BaseNode.getMostOptimisticType() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5380, OSR_BCI: -1 :: virtual void java.lang.invoke.CallSite.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6393, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.endFrame() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5120, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.linkToCallSiteMethod(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterGE(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Parser.ifStatement() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5466, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.less(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jint java.util.BitSet.previousSetBit(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1330, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.<init>(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.epilogue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.prologue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$Store.storeNonDiscard() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 285, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.load(jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1792845110.invokeSpecial_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 322, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FindProperty.getGetter(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.loadASSIGN(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 10528, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.symbolNeedsToBeScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$14.evaluate() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2075495587.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithCatch(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeGuardWithCatchForm(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 792, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.lexify() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5583, OSR_BCI: -1 :: virtual jobject java.lang.System$2.getEnumConstantsShared(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject java.lang.ClassValue.getFromBackup(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.catchException(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 264, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.catchException(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/211528162.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.util.Collections.sort(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L5.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/875349766.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.ofNoFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 277, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/214212829.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2129144075.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1561722966.linkToCallSite(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/2048186532.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/1419810764.invokeStatic_LI_J(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/2090675927.linkToCallSite(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/198767652.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/393834311.guard(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1010467398.guard(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/757108857.invokeStatic_LL_I(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/179809345.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1646033809.invokeVirtual_LILI_V(jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.doesNotHaveCheckArrayKeys(jlong, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.doesNotHaveEnsureLength(jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.doesNotHaveEnsureDelete(jlong, jlong, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/852687460.invokeSpecial_LIL_V(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1753365355.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1597249648.invokeSpecial_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1524006274.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 262, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.doesNotHave(jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1690859824.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1072601481.delegate(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1811051537.guardWithCatch(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/78950445.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.isMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 10752, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/2011791487.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1428418823.linkToTargetMethod(jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1104070576.reinvoke(jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/592179046.invokeStatic_JJI_J(jobject, jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1939144888.linkToCallSite(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptRuntime.ADD(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/244114865.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/147903786.invokeVirtual_LL_L(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/11003494.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1072024049.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1622740947.linkToCallSite(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/2018069081.reinvoke(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1519387873.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/639684828.guardWithCatch(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1873487115.guard(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/478373165.reinvoke(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1050, OSR_BCI: -1 :: virtual jdouble java.lang.Integer.doubleValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/627185331.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/889448078.linkToCallSite(jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 19712, OSR_BCI: -1 :: static void java.lang.invoke.Invokers.checkCustomized(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1792190683.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/377731514.invokeVirtual_LJ_L(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1486739223.guard(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1392046075.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 17424, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodType.changeReturnType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 224, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitNewArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/835751985.invokeStatic_J_L(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1284, OSR_BCI: -1 :: virtual jint java.util.IdentityHashMap$KeySet.size() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.FunctionNode.getReturnType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveCOMMARIGHT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L3ILL.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle$Species_LILL.copyWithExtendL(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1468357786.invokeStatic_L3IL3_L(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.compose(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5508, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.relinkInternal(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.LinkerCallSite.getPruneCatches() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.relink(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.ChainedCallSite.relink(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1508646930.delegate(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 347, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.getterForType(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject sun.invoke.util.ValueConversions.boxDouble(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5162, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.BinaryNode.booleanToInt(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: static jboolean sun.reflect.misc.ReflectUtil.isVMAnonymousClass(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jint java.lang.invoke.LambdaForm$Name.index() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitIntInsn(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.foldArguments(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1280, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.varargsArray(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5392, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.BlockLexicalContext.popStatements() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase$11.toString() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.getReturnValueType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.access$4600(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.valueConversion(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FunctionSignature.getMethodType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5124, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.BinaryNode.<init>(jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5505, OSR_BCI: -1 :: virtual void java.util.AbstractList.clear() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 96, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.NativeArray.construct(jboolean, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isDoubleWord() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: static jobject java.lang.invoke.Invokers.invokeBasicMethod(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1293, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LiteralNode$BooleanLiteralNode.getType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/447105432.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: virtual jdouble jdk.nashorn.internal.runtime.arrays.ObjectArrayData.getDouble(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1280, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.getObject(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.createRewriteExceptionHandler() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1027591600.getLongField(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.ensureSpillSize(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1412, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveIndexNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5506, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/447105432.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1753127384.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/931496835.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1376474236.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_L6.fieldCount() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1691875296.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/226170135.delegate(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1856056345.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1474835976.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2058013216.delegate(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2138564891.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/771994927.guardWithCatch(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2042939763.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.isPrimitive(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1898099199.reinvoke(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1631862159.getObjectField(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1125292271.guard(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1983741679.linkToCallSite(jobject, jdouble, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1274912314.reinvoke(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1051187510.invokeVirtual_LD_L(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1455707702.guard(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/56185058.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1802598046.invokeVirtual_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5124, OSR_BCI: -1 :: virtual jint java.lang.Enum.hashCode() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5194, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.internArguments() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5145, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm$Name.cloneWithIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1816757085.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1281, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.access$10002(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/832947102.invokeStatic_LIJ_V(jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setProto(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 265, OSR_BCI: -1 :: virtual void java.security.PermissionCollection.setReadOnly() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1146, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1297, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: static jint sun.invoke.util.VerifyAccess.getClassModifiers(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5180, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Label$Stack.getLocalLoads(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5162, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getTypesFromStack(jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1626, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.mergeVariableTypes(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 19419, OSR_BCI: 24 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.mergeVariableTypes(jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1630, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.mergeVariableTypes(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 514, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.createGetter(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants$BinaryNodeConstantEvaluator.reduceTwoLiterals() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.FoldConstants$BinaryNodeConstantEvaluator.eval() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1454, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 278, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.filterReturnValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1615, OSR_BCI: -1 :: static jboolean java.util.Arrays.equals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6204, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.MethodEmitter.getUsedSlotsWithLiveTemporaries() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5252, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.verifyAssignment(jlong, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/354405891.dontInline(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jint java.util.Objects.hashCode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$Entry.getKey() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$Entry.getValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5418, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$TypeBounds.canBeNarrowerThan(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 338, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.UnwarrantedOptimismException.getReturnType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.Context.getLogger(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.newOptimisticAssumptions() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5252, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getLoggerName(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.getElementType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveNE_STRICT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2075495587.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1979021778.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/589446616.delegate(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5120, OSR_BCI: -1 :: virtual jobject java.util.ArrayList.listIterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5394, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.ir.BlockLexicalContext.lastStatement(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 281, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.createInvoker(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.findCallMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.FunctionInitializer.getInvalidatedProgramPoints() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.FunctionInitializer.getFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getOptimisticGetter(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$2.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction$2.get() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.access$200(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveGE(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1565193331.linkToTargetMethod(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1215109224.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.debug(jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5158, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants$3.invoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5158, OSR_BCI: -1 :: virtual void java.util.BitSet.recalculateWordsInUse() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1649, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.functionBody(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.Timing.accumulateTime(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5153, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.logging.DebugLogger.unindent() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilationPhase.begin(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptObject.findOwnMH_V(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/667346055.putLongField(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/943166837.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1711309601.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveSUB(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.enterForNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getSetter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptObject.getScriptObjectGuard(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.getStackStoreSpec() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.getStackTypes() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5544, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.types.Type.dup(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1309, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveReturnNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5561, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setSymbol(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.lookup(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/892529689.invokeSpecial_LLIL_L(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/865835113.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/905654280.invokeStatic_I_J(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.getLogger() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.linker.Bootstrap.mathBootstrap(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveEQ_STRICT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CodeGenerator.getContinuationEntryPoints() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/878274034.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.<init>() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.restOfHandle(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject java.lang.invoke.DirectMethodHandle$Accessor.checkCast(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5388, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.put(jobject, jobject, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.RewriteException.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.handleRewriteException(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1107494905.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1528194080.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1455, OSR_BCI: -1 :: virtual void java.lang.AbstractStringBuilder.expandCapacity(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 15555, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.AssignSymbols.symbolNeedsToBeScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1486371051.getObjectFieldCast(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 3338, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.mergeVariableTypes(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1060491581.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/201576232.guardWithCatch(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeEvaluator.getOptimisticType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$ContinuationInfo.getObjectLiteralStackDepth() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.LexicalContext.getDefiningFunction(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5444, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.AssignSymbols.leaveASSIGN(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5149, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.LexicalContext.isEmpty() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1970436060.exactInvoker(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1180033113.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5304, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getOptimisticType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findGetIndexMethodHandle(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1161542555.guard(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl.makeVarargsCollector(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findGetIndexMethod(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.useDualFields() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 269, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.convertThisObject(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 269, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.convertThisObject(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5760, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.relink(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.NashornLoader.checkPackageAccess(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MemberName.getDeclaringClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/341748265.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7299, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.insertArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1795960102.putObjectField(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 28675, OSR_BCI: -1 :: virtual jobject java.lang.Class.cast(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.addSpillProperty(jobject, jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.setInitialValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.TypeEvaluator.declareLocalSymbol(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/510113906.invokeVirtual_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2076326363.linkToCallSite(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/884457408.invokeStatic_J_I(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/290658609.invokeStatic_L8_L(jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/218007578.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/402269681.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/362714665.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5258, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.addOwnProperty(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/544462619.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/2104477698.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 21761, OSR_BCI: -1 :: virtual jobject java.lang.invoke.BoundMethodHandle.bindArgumentL(jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/2103841285.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1101853425.guard(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1402822947.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Compiler.declareLocalSymbol(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/453484161.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1300393335.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/386607015.exactInvoker(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1305643394.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.Property.equalsWithoutType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/204334828.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/324097801.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5397, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/1663619914.dontInline(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1887813102.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/716143810.delegate(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1855307811.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/869928877.linkToCallSite(jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1689934449.guardWithCatch(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/237351678.reinvoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1989120151.guard(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/24433162.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1898885237.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/606136674.identity_I(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10496, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.compareAndSetMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5392, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/627185331.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/886877453.delegate(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.invoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.getGenericInvoker(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1108705741.invokeExact_MT(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/731395981.identity_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.extensionCheck(jboolean, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/745384854.delegate(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5384, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1753447031.invokeSpecial_L3_I(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1309300230.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1332210474.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$482$earley_boyer.sc_list(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD3P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD4P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1960423402.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/75457651.invokeStatic_L_I(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD10P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1285, OSR_BCI: -1 :: static jint sun.invoke.util.ValueConversions.longToInt(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/663774151.invokeStatic_LLJIIL5J_L(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$313$171279AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2$loop3(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/113593283.exactInvoker(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/806440726.linkToCallSite(jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/900187255.reinvoke(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/801918227.guardWithCatch(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$290$168720JIIAAAAAJ$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees(jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$290$168720JIIAAAAAJ$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5124, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.ofNoFunction(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 1004, OSR_BCI: -1 :: static jint java.lang.Math.subtractExact(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 17664, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/2011791487.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/592959754.exactInvoker(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.JoinPredecessorExpression.getExpression() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1280, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandleImpl$ArrayAccessor.getElementL(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/836048152.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$78$12734AA$earley_boyer.sc_cons(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.invokeSetter(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1192214892.invokeExact_MT(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6146, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.asType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5202, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.Type.getElementType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/740977868.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/513638711.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5265, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toPrimitive(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject java.util.ArrayList$SubList.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void java.util.ArrayList$SubList$1.<init>(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.addCode(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitTryCatchBlock(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/514944587.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/931496835.guard(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 3546, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.Parser.variableStatement(jobject, jboolean, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1495242910.invokeStatic_L3_L(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1141100442.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 49418, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.parser.Lexer.add(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 4098, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower$1.popStatements() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 387, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$313$171279AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2$loop3(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1753127384.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5353, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9472, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1658926803.linkToCallSite(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$79$20832A$earley_boyer.sc_reverse(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2068534685.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$308$19996AA$earley_boyer.sc_dualAppend(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/347905317.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$307$19829AA$earley_boyer.sc_reverseAppendBang(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1816757085.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 303, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1563760944.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 301, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2090904149.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/875349766.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5392, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1027591600.getLongField(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$554$168720JIIAAAAAJ$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/120960120.invokeStatic_I3_I(jobject, jint, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 327, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/821318900.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1561722966.linkToCallSite(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5384, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/393834311.guard(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 339, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$554$168720JIIAAAAAJ$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees(jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 279, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/917538266.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1792845110.invokeSpecial_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/112893921.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/214212829.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/65662252.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 384, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$485$earley_boyer.sc_append(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/879837202.linkToTargetMethod(jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1840663231.reinvoke(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5402, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/716143810.delegate(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2129144075.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1161542555.guard(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1474835976.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 14597, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.findProperty(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunction.allocate() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.newFilter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.RecompilableScriptFunctionData.allocate(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1597249648.invokeSpecial_LI_L(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6411, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2076326363.linkToCallSite(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1647076749.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1107730949.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.NE_STRICT(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1753365355.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7281, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9474, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1508646930.delegate(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.INSTANCEOF(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/884457408.invokeStatic_J_I(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5386, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/362714665.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/889448078.linkToCallSite(jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1792190683.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/377731514.invokeVirtual_LJ_L(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1734, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8451, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1691875296.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8459, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/402269681.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/324097801.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8448, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1811051537.guardWithCatch(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8459, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/78950445.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8194, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.AccessorProperty.replaceMap(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1920, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6403, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1392046075.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6407, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/386607015.exactInvoker(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2058013216.delegate(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1979021778.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7430, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1486739223.guard(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/1428418823.linkToTargetMethod(jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/1104070576.reinvoke(jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/592179046.invokeStatic_JJI_J(jobject, jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1101853425.guard(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/453484161.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.invoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5384, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/886877453.delegate(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5543, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.VarNode.<init>(jint, jlong, jint, jint, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.invoke.BoundMethodHandle$Species_LLI.fieldCount() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 12, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 12, OSR_BCI: -1 :: virtual void java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5353, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.internArguments() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 331, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 331, OSR_BCI: -1 :: static jobject java.lang.invoke.DirectMethodHandle.make(jbyte, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.reflect.Method.getModifiers() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 384, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.getDeclaringClass() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint java.lang.Class$MethodArray.length() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 30652, OSR_BCI: -1 :: virtual jobject java.lang.Class.cast(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.getReturnType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.reflect.Method.getName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10358, OSR_BCI: -1 :: virtual void java.lang.ThreadLocal.set(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 12959, OSR_BCI: 7 :: virtual void java.lang.invoke.LambdaForm$Name.internArguments() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5369, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaForm$Name.internArguments() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5176, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.LinkerServicesImpl.getGuardedInvocation(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.CompilerConstants.symbolName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 55375, OSR_BCI: -1 :: virtual void java.lang.invoke.LambdaFormEditor.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5367, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.lookup.MethodHandleFactory$StandardMethodHandleFunctionality.filterArguments(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 6528, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.DynamicLinker.relink(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1180, OSR_BCI: -1 :: virtual jboolean java.util.IdentityHashMap.equals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.CompiledFunction$OptimismInfo.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 316, OSR_BCI: -1 :: virtual jboolean sun.invoke.util.Wrapper.isSigned() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getGetter(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.toBoolean(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ContinuousArrayData.findFastGetIndexMethod(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6912, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.lookup(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1284076567.invokeStatic_L5ILL_L(jobject, jobject, jobject, jobject, jobject, jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/84725098.guard(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1312, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.arrays.ArrayData.setLength(jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/716910678.delegate(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/434809611.guard(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 2069, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 21760, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/589446616.delegate(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1480806944.linkToCallSite(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/364954228.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/760563749.invokeVirtual_L3I_V(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1629687860.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/860196228.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1575588264.delegate(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/508358885.guard(jobject, jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/278738215.linkToCallSite(jobject, jobject, jobject, jobject, jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 537, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.createInvoker(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/682310752.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$DMH/1223685984.invokeStatic_J_D(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$BMH/257884050.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1861263428.reinvoke(jobject, jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1924565494.guardWithCatch(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/2112430778.linkToCallSite(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1178923988.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1874154700.invokeVirtual_LLII_V(jobject, jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/979308245.invokeStatic_L4JL_L(jobject, jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2012461887.reinvoke(jobject, jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1924859456.guard(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/604930624.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2061837084.delegate(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1828160182.delegate(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/158531588.guard(jobject, jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1820917741.guard(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11521, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1690859824.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/552895644.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1508474741.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1371006431.delegate(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1041353786.linkToCallSite(jobject, jobject, jobject, jobject, jobject, jdouble, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1884977466.guardWithCatch(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1688068070.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/679651341.invokeStatic_L5DI_I(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1832414719.exactInvoker(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1975798.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 16640, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/510109769.linkToCallSite(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$241$187566A$earley_boyer.BgL_makezd2parserzd2$L:3965$loop1$sc_loop1_127(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8448, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.FunctionScope.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5764, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1101853425.guard(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1753268331.delegate(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1059533285.delegate(jobject, jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject java.lang.invoke.MethodHandle.internalMemberName() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5760, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.invoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 2944, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6146, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptFunctionData.isVarArg(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 6427, OSR_BCI: -1 :: static void jdk.nashorn.internal.runtime.DebuggerSupport.notifyInvoke(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1989120151.guard(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/745384854.delegate(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$482$earley_boyer.sc_list(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/740977868.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/513638711.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD3P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$313$171279AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2$loop3(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 222, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.OptimisticReturnFilters.getOptimisticTypeGuard(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5176, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.support.CompositeTypeBasedGuardingDynamicLinker.getGuardedInvocation(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1549914064.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: virtual void java.util.ArrayList$Itr.<init>(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2077553170.linkToCallSite(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2068899594.reinvoke(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/180820951.delegate(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 222, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$104$33027AZ$earley_boyer.sc_vectorFillBang(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1568783481.invokeStatic_L3IJ_L(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$181$155022AIJ$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2getza2_44za2(jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/806890100.linkToCallSite(jobject, jobject, jobject, jint, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2133482847.guardWithCatch(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/471766812.exactInvoker(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/55753935.reinvoke(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/415137623.exactInvoker(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1270855946.invokeStatic_LLI_L(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1908325375.delegate(jobject, jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1915216881.guardWithCatch(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/342576236.delegate(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/11003494.guard(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1939144888.linkToCallSite(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5505, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/244114865.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1072024049.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 19713, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1519387873.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/376810925.guard(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1444872511.reinvoke(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$208$155853AAJA$earley_boyer.BgL_makezd2parserzd2$L:3965$conf_set_adjoin(jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 357, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$251$157494AAADI$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2adjoinza2za2_46z00(jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1142861323.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.scripts.Script$Recompilation$191$155602A$earley_boyer.BgL_makezd2parserzd2$L:3965$conf_set_merge_new_bang(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7424, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/667346055.putLongField(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11520, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.invoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5507, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$313$171279AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2$loop3(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7427, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1960423402.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7428, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1898885237.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6329, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5203, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$554$168720JIIAAAAAJ$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees(jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6656, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD4P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5389, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$78$12734AA$earley_boyer.sc_cons(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8449, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/869928877.linkToCallSite(jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.getFunctionPrototype() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5295, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1563760944.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1508474741.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/2048186532.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6406, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/1419810764.invokeStatic_LI_J(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6404, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/663774151.invokeStatic_LLJIIL5J_L(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6404, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/801918227.guardWithCatch(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6405, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/113593283.exactInvoker(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6407, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/806440726.linkToCallSite(jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6404, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/900187255.reinvoke(jobject, jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7552, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6317, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2090904149.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.sameObject(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 2, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornGuards.sameObject(jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 2, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$reinvoker/54182405.dontInline(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jlong, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1935820073.linkToCallSite(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1048994595.exactInvoker(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/798524826.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/52305020.invokeVirtual_LII_I(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.runtime.ScriptObject.getInt(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5179, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.joinFrom(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5463, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5757, OSR_BCI: -1 :: virtual jobject java.util.concurrent.ConcurrentHashMap.get(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1880183745.linkToCallSite(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1711756103.guard(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1024, OSR_BCI: -1 :: virtual jdouble java.lang.Long.doubleValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7425, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/147903786.invokeVirtual_LL_L(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1495597877.invokeStatic_L3JJ_L(jobject, jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$216$155022AJJ$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2getza2_44za2(jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/875004964.linkToCallSite(jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1747781975.guardWithCatch(jobject, jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1586649011.exactInvoker(jobject, jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/879458619.reinvoke(jobject, jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/943081537.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 288, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$245$157494AAJJA$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2adjoinza2za2_46z00(jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1521594469.delegate(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7425, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/226170135.delegate(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/1225373914.invokeStatic_D_J(jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/735928835.linkToCallSite(jobject, jdouble, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/629334547.guard(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8195, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$313$171279AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2$loop3(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8320, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$315$169189AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7123, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$554$168720JIIAAAAAJ$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees(jobject, jobject, jlong, jint, jint, jobject, jobject, jobject, jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7426, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD10P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7425, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$554$168720JIIAAAAAJ$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 23815, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1689934449.guardWithCatch(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5271, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/917538266.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$79$20832A$earley_boyer.sc_reverse(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5397, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$307$19829AA$earley_boyer.sc_reverseAppendBang(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5417, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$308$19996AA$earley_boyer.sc_dualAppend(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5389, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/65662252.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5430, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/112893921.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 256, OSR_BCI: -1 :: virtual jobject java.lang.Throwable.getMessage() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11522, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.AccessorProperty.checkUndeclared() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1980470340.linkToTargetMethod(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/912252532.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5114, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.generateSetter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimismExceptionHandlerSpec.compareTo(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5367, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.AccessorProperty.isUndefined() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5633, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getSetter(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.CompiledFunction.getParamCount(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1072601481.delegate(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5120, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.arrays.ArrayIndex.getArrayIndex(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$205$158378AAJA$earley_boyer.BgL_makezd2parserzd2$L:3965$conf_set_union(jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$207$164383A$earley_boyer.BgL_makezd2parserzd2$L:3965$forw$sc_loop1_75(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5120, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptRuntime.ADD(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/2066825183.linkToCallSite(jobject, jdouble, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$BMH/181045667.reinvoke(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$DMH/1433935153.invokeVirtual_LDI_D(jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jdouble jdk.nashorn.internal.runtime.ScriptObject.getDouble(jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/1806207559.guard(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 379, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$231$155022AAD$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2getza2_44za2(jobject, jobject, jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD6P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/805838836.delegate(jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/852687460.invokeSpecial_LIL_V(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 13696, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$314$169917AA$earley_boyer.BgL_makezd2parserzd2$L:3965$deriv_trees$sc_loop1_98$loop2(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/598952696.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1408, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.CompiledFunction.changeReturnType(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/754666084.invokeStatic_L_L(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5593, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.VarNode.isFunctionDeclaration() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5371, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.createSetter(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5398, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.arrays.DeletedRangeArrayFilter.has(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5126, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.doesNotHave(jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/693192214.guard(jobject, jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1952266650.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/85777802.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1325808650.invokeStatic_ILI_L(jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/865261211.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$180$31807IZ$earley_boyer.sc_makeVector(jobject, jobject, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.runtime.ScriptObject.doesNotHaveEnsureLength(jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/577405636.exactInvoker(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1669938422.guardWithCatch(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$247$185687$earley_boyer.BgL_makezd2parserzd2$L:3965$loop1(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$247$185687$earley_boyer.:getMap(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5134, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2083341208.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/280744458.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1987083830.invokeStatic_ILJ_L(jobject, jint, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/822982084.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11520, OSR_BCI: -1 :: static jobject sun.misc.Cleaner.create(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8208, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor.isStrictFlag(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 248, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/152134087.invokeSpecial_LLI_L(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 375, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1263845074.delegate(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8451, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/2090675927.linkToCallSite(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 222, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$243$155853AADI$earley_boyer.BgL_makezd2parserzd2$L:3965$conf_set_adjoin(jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 274, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$102$31807JZ$earley_boyer.sc_makeVector(jobject, jobject, jlong, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.NashornPrimitiveLinker.isJavaScriptPrimitive(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/43379081.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$73$74656AA$earley_boyer.sc_isEqual(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1674896058.identity_I(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11522, OSR_BCI: -1 :: virtual jobject java.util.AbstractCollection.toArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 170114, OSR_BCI: -1 :: static jboolean java.lang.invoke.MethodHandleImpl.isCompileConstant(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1647882506.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/397262543.linkToCallSite(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9478, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1010467398.guard(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8450, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1014328909.invokeStatic_I_L(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.UnaryNode.getMostOptimisticType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 512, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.restOfHandle(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1149706788.delegate(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/312084953.delegate(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2051413828.delegate(jobject, jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 594, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1863786744.linkToCallSite(jobject, jint, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 589, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/227170374.guardWithCatch(jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 589, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/490261035.guard(jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 589, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2123448049.reinvoke(jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 523, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/507084503.delegate(jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 594, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/668862267.reinvoke(jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1622740947.linkToCallSite(jobject, jint, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 4522, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions$1.afterSetStatements(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 514, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.RewriteException.create(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5398, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/716910678.delegate(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jboolean java.util.HashSet.remove(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1411, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.CallNode.getMostOptimisticType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 397, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1897081342.reinvoke(jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 402, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1322777464.invokeStatic_LLJI_L(jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/1282277699.invokeStatic_L4JI_J(jobject, jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.scripts.Script$Recompilation$184$155853AAJI$earley_boyer.BgL_makezd2parserzd2$L:3965$conf_set_adjoin(jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/953061556.exactInvoker(jobject, jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1669705571.reinvoke(jobject, jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.access$8100(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5448, OSR_BCI: -1 :: static jlong jdk.nashorn.internal.runtime.JSType.subExact(jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1650963034.linkToCallSite(jobject, jobject, jobject, jobject, jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/456490418.guardWithCatch(jobject, jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/170954749.reinvoke(jobject, jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1508612218.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 223, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$230$31807AZ$earley_boyer.sc_makeVector(jobject, jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1675763772.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1028, OSR_BCI: -1 :: virtual jdouble java.lang.Double.doubleValue() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 4352, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.initLocals(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 101, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$195$159141AIAAAAA$earley_boyer.BgL_makezd2parserzd2$L:3965$forw(jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 321, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/1516369375.invokeStatic_D_L(jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5764, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.ChainedCallSite.relinkInternal(jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1752227897.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1076708806.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 522, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/568607185.linkToCallSite(jobject, jobject, jlong, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 516, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/935715558.guard(jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 516, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/581704205.reinvoke(jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5319, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/821318900.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jdouble, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5760, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.ChainedCallSite.relink(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.NativeArray$Prototype.G$push() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 15624, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$BMH/198767652.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 390, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getArray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 441, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1403368719.delegate(jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5130, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.loadNull() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.ir.TernaryNode.<init>(jlong, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/330639443.guard(jobject, jobject, jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/786743336.guard(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10496, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/639684828.guardWithCatch(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10496, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1873487115.guard(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10497, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/478373165.reinvoke(jobject, jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 11904, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.invoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12545, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1108705741.invokeExact_MT(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.AccessorProperty.getObjectValue(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1137295541.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 17664, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptFunctionData.invoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1971, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$104$33027AZ$earley_boyer.sc_vectorFillBang(jobject, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.get(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$127$145019AA$earley_boyer.BgL_makezd2parserzd2$ind(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/659748578.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 14593, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1309300230.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2060825992.delegate(jobject, jobject, jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1359476862.delegate(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jint java.lang.Math.getExponent(jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1575588264.delegate(jobject, jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1222626908.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/275710033.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/81009902.invokeStatic_LL_J(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/360067785.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5120, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.JSType.toBoolean(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/994419686.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1782910133.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/164828158.invokeStatic_L3IL5_L(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/407729071.linkToCallSite(jobject, jobject, jobject, jint, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/242941392.guardWithCatch(jobject, jobject, jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/536702450.linkToCallSite(jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1437333098.guardWithCatch(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$167$153481AA$earley_boyer.BgL_makezd2parserzd2$L:3965$sc_ind_43(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/11618860.invokeStatic_L3ILI_L(jobject, jobject, jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$185$156231AIAI$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2adjoinza2_45za2(jobject, jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/445239365.exactInvoker(jobject, jobject, jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1451245168.reinvoke(jobject, jobject, jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1488272467.exactInvoker(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/535834091.reinvoke(jobject, jobject, jobject, jobject, jint, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 22146, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.setIsScope() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1036613338.guard(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1894645723.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/610744096.linkToCallSite(jobject, jint, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1308354754.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$29$11503IA$earley_boyer.sc_Pair(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 42240, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1810132623.invokeVirtual_LIL_I(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1114935129.linkToCallSite(jobject, jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/660103401.reinvoke(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$DMH/258274426.invokeStatic_LJL_L(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$128$11503JA$earley_boyer.sc_Pair(jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/119331620.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1731824557.reinvoke(jobject, jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/530210107.guard(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/656847603.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jobject, jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1709175435.guard(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/528592928.reinvoke(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5349, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$251$157494AAADI$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2adjoinza2za2_46z00(jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5380, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$241$187566A$earley_boyer.BgL_makezd2parserzd2$L:3965$loop1$sc_loop1_127(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1381895283.delegate(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/370041732.guard(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1445752156.guard(jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7427, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1820917741.guard(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12546, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/56185058.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6148, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$241$187566A$earley_boyer.BgL_makezd2parserzd2$L:3965$loop1$sc_loop1_127(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7424, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1753268331.delegate(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3752, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/798231076.linkToCallSite(jobject, jobject, jobject, jobject, jlong, jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3749, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/60216880.exactInvoker(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3746, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1683378353.reinvoke(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3752, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/268639817.guardWithCatch(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3752, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/881113307.reinvoke(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 3752, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/1050609248.invokeStatic_L4JJL_I(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12547, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1125292271.guard(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12553, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/552895644.delegate(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 12556, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2061837084.delegate(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1041353786.linkToCallSite(jobject, jobject, jobject, jobject, jobject, jdouble, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1884977466.guardWithCatch(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1688068070.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6402, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/679651341.invokeStatic_L5DI_I(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6401, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1832414719.exactInvoker(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6400, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1975798.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject, jdouble, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11520, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$DMH/1223685984.invokeStatic_J_D(jobject, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5511, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.IntArrayData.set(jint, jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/415137623.exactInvoker(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1246947340.delegate(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$181$155022AIJ$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2getza2_44za2(jobject, jobject, jobject, jint, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/660600312.invokeStatic_L3I_I(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 4336, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1585095294.linkToCallSite(jobject, jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 4322, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/757600587.guard(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 4322, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1475376829.reinvoke(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 4336, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1769947269.reinvoke(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 4336, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/729251844.invokeVirtual_LJLI_V(jobject, jobject, jlong, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1556595366.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 23810, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/218007578.exactInvoker(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 21760, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/179809345.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 21760, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1646033809.invokeVirtual_LILI_V(jobject, jobject, jint, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 21762, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1524006274.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1851070396.delegate(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 13568, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$MH/682310752.linkToCallSite(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/7788116.delegate(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 14595, OSR_BCI: -1 :: static jdouble java.lang.invoke.LambdaForm$BMH/257884050.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7425, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2068899594.reinvoke(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.objects.ScriptFunctionImpl.create(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11525, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1924565494.guardWithCatch(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$208$155853AAJA$earley_boyer.BgL_makezd2parserzd2$L:3965$conf_set_adjoin(jobject, jobject, jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jint jdk.nashorn.internal.scripts.Script$Recompilation$191$155602A$earley_boyer.BgL_makezd2parserzd2$L:3965$conf_set_merge_new_bang(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.scripts.JD2P0.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5288, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/798231076.linkToCallSite(jobject, jobject, jobject, jobject, jlong, jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5285, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/60216880.exactInvoker(jobject, jobject, jobject, jobject, jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1686518257.linkToCallSite(jobject, jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/7530502.guardWithCatch(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5360, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1585095294.linkToCallSite(jobject, jlong, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5346, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1475376829.reinvoke(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5360, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1769947269.reinvoke(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/956303508.linkToCallSite(jobject, jlong, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1368212791.reinvoke(jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$DMH/1330675946.invokeVirtual_LJJI_V(jobject, jobject, jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jlong, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.arrays.ObjectArrayData.set(jint, jlong, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2061802834.guardWithCatch(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.set(jlong, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$216$155022AJJ$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2getza2_44za2(jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5371, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$231$155022AAD$earley_boyer.BgL_makezd2parserzd2$L:3965$BgL_sc_confzd2setzd2getza2_44za2(jobject, jobject, jobject, jobject, jdouble) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.InvokeByName.getGetter() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.NativeDate$Prototype.G$valueOf() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.linker.InvokeByName.getInvoker() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$72$22009AA$earley_boyer.sc_member(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$98$33027AA$earley_boyer.sc_vectorFillBang(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/536467051.delegate(jobject, jobject, jobject, jobject, jlong, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5239, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1263845074.delegate(jobject, jobject, jlong, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/114804898.guard(jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1277922807.reinvoke(jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$MH/927364715.guard(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/2008764899.guard(jobject, jobject, jobject, jlong, jlong) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1274201751.reinvoke(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5558, OSR_BCI: -1 :: static jobject java.lang.invoke.MethodHandles.filterArgument(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 259, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TryNode.setFinallyBody(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 265, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 265, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5202, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.joinFrom(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator.emitObjectToNumberComparisonConversion(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 282, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/500129592.exactInvoker(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.ir.VarNode.getSymbolFlags() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5574, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.AssignSymbols.access$100(jobject, jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject java.util.TreeSet.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jobject java.util.TreeMap$KeySet.iterator() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5210, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.LocalVariableTypesCalculator.jumpToLabel(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.setTest(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.setTrueExpression(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor.enterNOT(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5383, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.TernaryNode.setFalseExpression(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5136, OSR_BCI: -1 :: virtual void jdk.internal.dynalink.linker.GuardedInvocation.<init>(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 110594, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.EQ_STRICT(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6444, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2068534685.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 20736, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$27$11503AA$earley_boyer.sc_Pair(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 128, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$946$22556AA$earley_boyer.sc_assq(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 15616, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/917681894.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$943$131184A$earley_boyer.BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$970$129816A$earley_boyer.translate_args_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$966$129490A$earley_boyer.translate_term_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6454, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/347905317.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 809, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$946$22556AA$earley_boyer.sc_assq(jobject, jobject, jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5580, OSR_BCI: 83 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.joinFrom(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5275, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.Label$Stack.joinFrom(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.types.Type.getSlots() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.WhileNode.accept(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.newarray(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower$1.afterSetStatements(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5697, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower$1.afterSetStatements(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1154, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator$11.access$6800(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1154, OSR_BCI: -1 :: static void jdk.nashorn.internal.codegen.CodeGenerator$11.access$6900(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 1154, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$11.doDecInc(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: virtual jobject java.security.Permissions.getPermissionCollection(jobject, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: virtual void java.security.BasicPermissionCollection.add(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/388663726.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 205, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1383547042.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 275, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 275, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 280, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 449, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.of(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1019$136637AA$earley_boyer.one_way_unify1_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 281, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 281, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 286, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 287, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 287, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/876084303.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 293, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5149, OSR_BCI: -1 :: virtual jint jdk.nashorn.internal.codegen.CodeGenerator$OptimisticOperation.getOptimisticFlags(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1495591569.exactInvoker(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5386, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.popBlockScope(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator.emitBlockBreakLabel(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5386, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGeneratorLexicalContext.releaseSlots() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1346273091.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/839122851.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 316, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1747961620.linkToCallSite(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 331, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/487193486.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1039$136637AA$earley_boyer.one_way_unify1_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 231, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1708169732.delegate(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5431, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/388663726.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 323, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1223851531.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 323, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$1020$3664A$earley_boyer.sc_isNumber(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 3328, OSR_BCI: -1 :: static jlong sun.invoke.util.ValueConversions.intToLong(jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 374, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1032$136299A$earley_boyer.rewrite_args_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/1711756103.guard(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5386, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/312084953.delegate(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6587, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1039$136637AA$earley_boyer.one_way_unify1_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 305, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1037$138958AA$earley_boyer.is_term_equal_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 297, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1028$132564AA$earley_boyer.apply_subst_lst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 148482, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.ScriptRuntime.strictEquals(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5388, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7820, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10496, OSR_BCI: -1 :: static jlong java.lang.invoke.LambdaForm$DMH/905654280.invokeStatic_I_J(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10499, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1647882506.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11341, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1383547042.reinvoke(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8452, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1346273091.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8452, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/839122851.reinvoke(jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 10498, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/397262543.linkToCallSite(jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5366, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1032$136299A$earley_boyer.rewrite_args_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6134, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1032$136299A$earley_boyer.rewrite_args_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5571, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.WeighNodes.leaveASSIGN(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8950, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1032$136299A$earley_boyer.rewrite_args_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 30348, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 47244, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5379, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6403, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5169, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1037$138958AA$earley_boyer.is_term_equal_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 77580, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5289, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1028$132564AA$earley_boyer.apply_subst_lst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11521, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1318822808.reinvoke(jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 271, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 271, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 294, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 294, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 306, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5504, OSR_BCI: -1 :: virtual void sun.misc.Cleaner.clean() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.IdentNode.setIsFunction() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 307, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 307, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 312, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 313, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 313, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5124, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.visitor.NodeVisitor.leaveRuntimeNode(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 320, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1050$138958AA$earley_boyer.is_term_equal_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/610984013.invokeStatic_L4_I(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1750107086.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$1049$140263AA$earley_boyer.is_term_member_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5192, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.parser.AbstractParser.getLiteral() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6208, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.ir.BinaryNode.isString(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6915, OSR_BCI: -1 :: static jobject jdk.internal.dynalink.support.Guards.asType(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jboolean java.util.Collections$EmptySet.contains(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5274, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toPrimitive(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.SwitchNode.setCases(jobject, jobject, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 5409, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.put(jobject, jobject, jint, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 590, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.parser.Parser.skipFunctionBody(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 272, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 272, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 276, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 277, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 5250, OSR_BCI: -1 :: virtual jobject jdk.internal.dynalink.linker.GuardedInvocation.asTypeSafeReturn(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 640, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$966$129490A$earley_boyer.translate_term_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 1536, OSR_BCI: -1 :: virtual void java.util.HashMap.afterNodeRemoval(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 22715, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1039$136637AA$earley_boyer.one_way_unify1_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 80205, OSR_BCI: 158 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5673, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1028$132564AA$earley_boyer.apply_subst_lst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 9603, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5122, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.ScriptRuntime.TYPEOF(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5441, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.of(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5308, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1747961620.linkToCallSite(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5187, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/1223851531.reinvoke(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5187, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$1020$3664A$earley_boyer.sc_isNumber(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5323, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/487193486.guard(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5223, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/1708169732.delegate(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5929, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1028$132564AA$earley_boyer.apply_subst_lst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5377, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$73$74656AA$earley_boyer.sc_isEqual(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 50619, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1039$136637AA$earley_boyer.one_way_unify1_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6697, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1028$132564AA$earley_boyer.apply_subst_lst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 11395, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 137612, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 16771, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 32283, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.runtime.ScriptObject.<init>(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5378, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.returnType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.objects.Global.G$undefined() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5120, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.CompiledFunction.type() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 21763, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.Context.getGlobal() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.UnaryNode.canBeOptimistic() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 278, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 278, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 196364, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 21891, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 296, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 297, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6598, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.ir.VarNode.setName(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 298, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 298, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 299, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 300, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 301, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 792192, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/341748265.guard(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 23813, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$BMH/1376474236.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 23812, OSR_BCI: -1 :: static void java.lang.invoke.LambdaForm$MH/771994927.guardWithCatch(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 23812, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/2042939763.reinvoke(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 302, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 302, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 38403, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 395788, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5440, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1050$138958AA$earley_boyer.is_term_equal_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 320, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 321, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Lower.leaveVarNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 258, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.codegen.ObjectClassGenerator.getClassName(jint, jint, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5393, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$970$129816A$earley_boyer.translate_args_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 322, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 322, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5381, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$943$131184A$earley_boyer.BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 29737, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1028$132564AA$earley_boyer.apply_subst_lst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6464, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1050$138958AA$earley_boyer.is_term_equal_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 340, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 341, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 342, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 342, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 55555, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1002$132166AA$earley_boyer.apply_subst_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 7360, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1050$138958AA$earley_boyer.is_term_equal_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.runtime.ScriptObject.getDefaultValue(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 360, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 361, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 257, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$5.<init>(jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 362, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 362, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 615097, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$1023$135131A$earley_boyer.rewrite_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 380, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 381, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5632, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.SplitIntoFunctions.enterVarNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5382, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.WeighNodes.enterBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 382, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5599, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.SplitIntoFunctions.leaveBlock(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.scripts.Script$Recompilation$966$129490A$earley_boyer.translate_term_nboyer(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5130, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.MethodEmitter.storeTemp(jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1266, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.parser.Parser.isValidIdentifier(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 8027, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/998351292.invokeStatic_L3_I(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$MH/617172629.guard(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1961351547.guard(jobject, jobject, jobject, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5600, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.MethodEmitter.getStatic(jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6452, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.ir.Symbol.isVar() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/629313573.invokeStatic_L5_I(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1063533302.linkToCallSite(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2072956880.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$1048$132894AAA$earley_boyer.tautologyp_nboyer(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1579195822.guard(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$BMH/367493949.reinvoke(jobject, jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5386, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm$DMH/610984013.invokeStatic_L4_I(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1750107086.reinvoke(jobject, jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5385, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.scripts.Script$Recompilation$1049$140263AA$earley_boyer.is_term_member_nboyer(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/1286037944.linkToCallSite(jobject, jobject, jint, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.toPrimitive(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/1353474994.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 261, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.linker.Bootstrap.isCallable(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 260, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$MH/250370634.invokeExact_MT(jobject, jobject, jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject jdk.nashorn.internal.runtime.JSType.requirePrimitive(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jobject java.lang.invoke.LambdaForm$BMH/2101456637.reinvoke(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual jboolean jdk.nashorn.internal.codegen.CodeGenerator$1.enterAccessNode(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: virtual void jdk.nashorn.internal.codegen.CodeGenerator$1$1.consumeStack() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 321, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 321, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 327, OSR_BCI: -1 :: virtual jobject java.lang.invoke.LambdaForm.uncustomize() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 42528, OSR_BCI: 2 :: static jint java.lang.invoke.LambdaFormBuffer.indexOf(jobject, jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5123, OSR_BCI: -1 :: static jint java.lang.invoke.LambdaForm.signatureArity(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5359, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Label.addReference(jint, jint) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 1, Hotcount: 128, OSR_BCI: -1 :: virtual jchar jdk.nashorn.internal.codegen.types.NumberType.getBytecodeStackType() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 3, Hotcount: 256, OSR_BCI: -1 :: static jint jdk.nashorn.internal.codegen.Condition.toUnary(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 369, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 369, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 85, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMaxs(jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 85, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.visitMaxs(jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 585, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> USE PROFILE FOR LVL: 4, Complevel: 4, Hotcount: 585, OSR_BCI: -1 :: virtual jobject jdk.internal.org.objectweb.asm.ClassWriter.toByteArray() <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 33694, OSR_BCI: -1 :: static jboolean java.lang.Character.isJavaIdentifierStart(jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 486, OSR_BCI: -1 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 27211, OSR_BCI: 69 :: static jint java.lang.String.indexOf(jobject, jint, jint, jobject, jint, jint, jint) <<<<<<<
>>>>>> USE PROFILE FOR LVL: 3, Complevel: 3, Hotcount: 1182, OSR_BCI: -1 :: static jobject java.io.DataInputStream.readUTF(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5234, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.TypeEvaluator.getOptimisticType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5234, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getInvalidatedProgramPointType(jint) <<<<<<<
EarleyBoyer: 523
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5432, OSR_BCI: -1 :: virtual jobject jdk.nashorn.internal.codegen.Compiler.getOptimisticType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 5376, OSR_BCI: -1 :: static jboolean jdk.nashorn.internal.runtime.CompiledFunction.isVarArgsType(jobject) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 1286, OSR_BCI: -1 :: static jint jdk.nashorn.internal.runtime.JSType.getAccessorTypeIndex(jobject) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 407, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 408, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 409, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
>>>>>> WITHOUT PROFILE Complevel: 4, Hotcount: 6287, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.Type.<init>(jint, jobject, jint, jint) <<<<<<<
>>>>>> PROMOTE COMPILE LVL: from 3 to 4, Hotcount: 410, OSR_BCI: -1 :: virtual void jdk.internal.org.objectweb.asm.MethodWriter.<init>(jobject, jint, jobject, jobject, jobject, jobject, jboolean, jboolean) <<<<<<<
----
Score (version 9): 523
>>> DEOPT COUNTER: 444 <<<
